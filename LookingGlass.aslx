<!--Saved by Quest 5.5.5328.26617-->
<asl version="550">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <game name="LookingGlass">
    <gameid>77da0769-8bb2-44aa-9cba-5afd9d9eb11f</gameid>
    <version>1.0</version>
    <firstpublished>2014</firstpublished>
    <author>Sporadic Pixels</author>
    <enablehyperlinks type="boolean">false</enablehyperlinks>
    <gridmap type="boolean">false</gridmap>
    <showpanes type="boolean">false</showpanes>
    <mapscale type="int">20</mapscale>
    <autodescription type="boolean">false</autodescription>
    <autodisplayverbs type="boolean">false</autodisplayverbs>
    <showdescriptiononenter type="boolean">false</showdescriptiononenter>
    <category>Puzzle</category>
    <description><![CDATA[A puzzle game inspired by the literal and metaphorical representations of Chess. <br/>Features exploring an overworld and delving into pocket rooms to solve isolated puzzles. <br/>All the while you are avoiding the denizens of this universe. ]]></description>
    <setcustomwidth type="boolean">false</setcustomwidth>
    <setcustompadding type="boolean">false</setcustompadding>
    <showcommandbar />
    <mapsize type="int">300</mapsize>
    <attr name="changeroom_newline" type="boolean">false</attr>
    <positionList type="stringlist" />
    <level>RabbitHole</level>
    <showlocation />
    <showtitle />
    <cover type="string"></cover>
    <pov type="object">player</pov>
    <start type="script"><![CDATA[
      takedownMap
      msg ("You find yourself walking through a wooded glade, maybe because you lost something, maybe because you were looking for someone. The more you walk, the more unclear it becomes. Have you always been walking? Was there some sort of purpose once?")
      msg ("Suddenly you round a corner, you turn a few too many times in the darkness of the wood, and you find yourself standing in the center of a bright, field.")
      msg ("You blink and wipe your eyes in disbelief. The forest is no more. Inexplicably all there is is an endless set of green hills.")
      msg ("The sound of cracking and twisting like a thousand bones rattling together punctuates the air jolting you from your thoughts. Dark shapes materialize and thrust themselves from the ground, twisting around themselves, connecting and coalescing, These tendrils pulse and grow together forming walls impossibly high, walls extending far into the sky.")
      msg ("These walls – these walls of thorns – enclose around you forming an uncertain path. ")
      msg (" ")
      // RabbitHole -> Pawn -> Rook -> Knight -> Bishop -> Queen
      msg ("FOR TESTING: Pick a level: (RabbitHole, Pawn, PreRook, Rook, PreKnight, Knight, PreBishop, Bishop, PreQueen, Queen)")
      msg ("Type: level [level]")
      msg ("Example: level RabbitHole")
      msg ("The actual order of the puzzles is as shown above")
      msg ("To go between levels, solve the puzzles and 'enter' the mirrors")
      // setupRabbitHole
      // Move(player, E8)
      foreach (exit, AllExits()) {
        exit.lockmessage = "You encounter a brambly wall blocking your path."
      }
      foreach (room, AllObjects()) {
        if (HasAttribute(room, "x")) {
          room.alias = "Looking Glass"
        }
      }
    ]]></start>
    <roomenter type="script">
      // descWalls
    </roomenter>
  </game>
  <object name="A1">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">0</x>
    <y type="int">0</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      A1.inRoom = " "
    </onexit>
    <exit name="A1east" alias="east" to="B1">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
      <look type="script">
        if (Contains (B1,Trial)) {
          msg ("saw trial")
        }
      </look>
    </exit>
    <exit name="A1north" alias="north" to="A2">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
      <look type="script">
        lookNorth
      </look>
    </exit>
    <exit name="A1northeast" alias="northeast" to="B2">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
      <look>looked B2</look>
    </exit>
  </object>
  <object name="A2">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">0</x>
    <y type="int">1</y>
    <alias type="string"></alias>
    <enter type="script">
    </enter>
    <onexit type="script">
      A2.inRoom = " "
    </onexit>
    <exit name="A2south" alias="south" to="A1">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A2southeast" alias="southeast" to="B1">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A2east" alias="east" to="B2">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A2northeast" alias="northeast" to="B3">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A2north" alias="north" to="A3">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="A3">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Blackite</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">0</x>
    <y type="int">2</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      A3.inRoom = " "
    </onexit>
    <exit name="A3southeast" alias="southeast" to="B2">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A3south" alias="south" to="A2">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A3north" alias="north" to="A4">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A3northeast" alias="northeast" to="B4">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A3east" alias="east" to="B3">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="A4">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">0</x>
    <y type="int">3</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      A4.inRoom = " "
    </onexit>
    <exit name="A4south" alias="south" to="A3">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A4southeast" alias="southeast" to="B3">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A4east" alias="east" to="B4">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A4northeast" alias="northeast" to="B5">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A4north" alias="north" to="A5">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="A5">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">0</x>
    <y type="int">4</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      A5.inRoom = " "
    </onexit>
    <exit name="A5southeast" alias="southeast" to="B4">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A5south" alias="south" to="A4">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A5east" alias="east" to="B5">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A5northeast" alias="northeast" to="B6">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A5north" alias="north" to="A6">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="A6">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">0</x>
    <y type="int">5</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      A6.inRoom = " "
    </onexit>
    <exit name="A6south" alias="south" to="A5">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A6southeast" alias="southeast" to="B5">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A6east" alias="east" to="B6">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A6northeast" alias="northeast" to="B7">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A6north" alias="north" to="A7">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="A7">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">0</x>
    <y type="int">6</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      A7.inRoom = " "
    </onexit>
    <exit name="A7southeast" alias="southeast" to="B6">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A7south" alias="south" to="A6">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A7east" alias="east" to="B7">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A7northeast" alias="northeast" to="B8">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A7north" alias="north" to="A8">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="A8">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">0</x>
    <y type="int">7</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      A8.inRoom = " "
    </onexit>
    <exit name="A8south" alias="south" to="A7">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A8southeast" alias="southeast" to="B7">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A8east" alias="east" to="B8">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="B1">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">1</x>
    <y type="int">0</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      B1.inRoom = " "
    </onexit>
    <exit name="B1west" alias="west" to="A1">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B1northwest" alias="northwest" to="A2">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B1northeast" alias="northeast" to="C2">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B1east" alias="east" to="C1">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B1north" alias="north" to="B2">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="B2">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">1</x>
    <y type="int">1</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      B2.inRoom = " "
    </onexit>
    <exit name="B2southwest" alias="southwest" to="A1">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B2south" alias="south" to="B1">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B2southeast" alias="southeast" to="C1">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B2east" alias="east" to="C2">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B2northeast" alias="northeast" to="C3">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B2north" alias="north" to="B3">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B2northwest" alias="northwest" to="A3">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B2west" alias="west" to="A2">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="B3">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">1</x>
    <y type="int">2</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      B3.inRoom = " "
    </onexit>
    <exit name="B3southeast" alias="southeast" to="C2">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B3south" alias="south" to="B2">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B3southwest" alias="southwest" to="A2">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B3west" alias="west" to="A3">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B3northwest" alias="northwest" to="A4">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B3north" alias="north" to="B4">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B3northeast" alias="northeast" to="C4">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B3east" alias="east" to="C3">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="B4">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">1</x>
    <y type="int">3</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      B4.inRoom = " "
    </onexit>
    <exit name="B4southwest" alias="southwest" to="A3">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B4south" alias="south" to="B3">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B4east" alias="east" to="C4">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B4southeast" alias="southeast" to="C3">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B4northeast" alias="northeast" to="C5">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B4north" alias="north" to="B5">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B4northwest" alias="northwest" to="A5">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B4west" alias="west" to="A4">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="B5">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">1</x>
    <y type="int">4</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      B5.inRoom = " "
    </onexit>
    <exit name="B5southeast" alias="southeast" to="C4">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B5south" alias="south" to="B4">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B5southwest" alias="southwest" to="A4">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B5west" alias="west" to="A5">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B5northwest" alias="northwest" to="A6">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B5north" alias="north" to="B6">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B5northeast" alias="northeast" to="C6">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B5east" alias="east" to="C5">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="B6">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">1</x>
    <y type="int">5</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      B6.inRoom = " "
    </onexit>
    <exit name="B6southwest" alias="southwest" to="A5">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B6south" alias="south" to="B5">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B6southeast" alias="southeast" to="C5">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B6east" alias="east" to="C6">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B6northeast" alias="northeast" to="C7">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B6north" alias="north" to="B7">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B6northwest" alias="northwest" to="A7">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B6west" alias="west" to="A6">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="B7">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">1</x>
    <y type="int">6</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      B7.inRoom = " "
    </onexit>
    <exit name="B7southeast" alias="southeast" to="C6">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B7south" alias="south" to="B6">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B7southwest" alias="southwest" to="A6">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B7west" alias="west" to="A7">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B7northwest" alias="northwest" to="A8">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B7north" alias="north" to="B8">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B7northeast" alias="northeast" to="C8">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B7east" alias="east" to="C7">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="B8">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">1</x>
    <y type="int">7</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      B8.inRoom = " "
    </onexit>
    <exit name="B8southwest" alias="southwest" to="A7">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B8south" alias="south" to="B7">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B8southeast" alias="southeast" to="C7">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B8east" alias="east" to="C8">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B8west" alias="west" to="A8">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="C1">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">2</x>
    <y type="int">0</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      C1.inRoom = " "
    </onexit>
    <exit name="C1west" alias="west" to="B1">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C1northwest" alias="northwest" to="B2">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C1north" alias="north" to="C2">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C1northeast" alias="northeast" to="D2">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C1east" alias="east" to="D1">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="C2">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">2</x>
    <y type="int">1</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      C2.inRoom = " "
    </onexit>
    <exit name="C2southwest" alias="southwest" to="B1">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C2south" alias="south" to="C1">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C2southeast" alias="southeast" to="D1">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C2east" alias="east" to="D2">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C2northeast" alias="northeast" to="D3">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C2north" alias="north" to="C3">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C2northwest" alias="northwest" to="B3">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C2west" alias="west" to="B2">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="C3">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">2</x>
    <y type="int">2</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      C3.inRoom = " "
    </onexit>
    <exit name="C3southeast" alias="southeast" to="D2">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C3south" alias="south" to="C2">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C3southwest" alias="southwest" to="B2">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C3west" alias="west" to="B3">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C3northwest" alias="northwest" to="B4">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C3north" alias="north" to="C4">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C3northeast" alias="northeast" to="D4">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C3east" alias="east" to="D3">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="C4">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">2</x>
    <y type="int">3</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      C4.inRoom = " "
    </onexit>
    <exit name="C4southwest" alias="southwest" to="B3">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C4south" alias="south" to="C3">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C4southeast" alias="southeast" to="D3">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C4east" alias="east" to="D4">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C4northeast" alias="northeast" to="D5">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C4north" alias="north" to="C5">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C4northwest" alias="northwest" to="B5">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C4west" alias="west" to="B4">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="C5">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">2</x>
    <y type="int">4</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      C5.inRoom = " "
    </onexit>
    <description type="script">
    </description>
    <exit name="C5southeast" alias="southeast" to="D4">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C5south" alias="south" to="C4">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C5southwest" alias="southwest" to="B4">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C5west" alias="west" to="B5">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C5northwest" alias="northwest" to="B6">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C5north" alias="north" to="C6">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C5northeast" alias="northeast" to="D6">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C5east" alias="east" to="D5">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="C6">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">2</x>
    <y type="int">5</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      C6.inRoom = " "
    </onexit>
    <firstenter type="script">
    </firstenter>
    <exit name="C6southwest" alias="southwest" to="B5">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C6south" alias="south" to="C5">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C6southeast" alias="southeast" to="D5">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C6east" alias="east" to="D6">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C6northeast" alias="northeast" to="D7">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C6north" alias="north" to="C7">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C6northwest" alias="northwest" to="B7">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C6west" alias="west" to="B6">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="C7">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">2</x>
    <y type="int">6</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      C7.inRoom = " "
    </onexit>
    <exit name="C7southeast" alias="southeast" to="D6">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C7south" alias="south" to="C6">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C7southwest" alias="southwest" to="B6">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C7west" alias="west" to="B7">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C7northwest" alias="northwest" to="B8">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C7north" alias="north" to="C8">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C7northeast" alias="northeast" to="D8">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C7east" alias="east" to="D7">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="C8">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">2</x>
    <y type="int">7</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      C8.inRoom = " "
    </onexit>
    <exit name="C8southwest" alias="southwest" to="B7">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C8south" alias="south" to="C7">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C8southeast" alias="southeast" to="D7">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C8east" alias="east" to="D8">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C8west" alias="west" to="B8">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="D1">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">3</x>
    <y type="int">0</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      D1.inRoom = " "
    </onexit>
    <exit name="D1west" alias="west" to="C1">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D1northwest" alias="northwest" to="C2">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D1north" alias="north" to="D2">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D1northeast" alias="northeast" to="E2">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D1east" alias="east" to="E1">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="D2">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">3</x>
    <y type="int">1</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      D2.inRoom = " "
    </onexit>
    <exit name="D2southwest" alias="southwest" to="C1">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D2south" alias="south" to="D1">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D2southeast" alias="southeast" to="E1">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D2east" alias="east" to="E2">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D2northeast" alias="northeast" to="E3">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D2north" alias="north" to="D3">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D2northwest" alias="northwest" to="C3">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D2west" alias="west" to="C2">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="D3">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">3</x>
    <y type="int">2</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      D3.inRoom = " "
    </onexit>
    <exit name="D3southeast" alias="southeast" to="E2">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D3south" alias="south" to="D2">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D3southwest" alias="southwest" to="C2">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D3west" alias="west" to="C3">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D3northwest" alias="northwest" to="C4">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D3north" alias="north" to="D4">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D3northeast" alias="northeast" to="E4">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D3east" alias="east" to="E3">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="D4">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">3</x>
    <y type="int">3</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      D4.inRoom = " "
    </onexit>
    <exit name="D4southwest" alias="southwest" to="C3">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D4south" alias="south" to="D3">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D4southeast" alias="southeast" to="E3">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D4east" alias="east" to="E4">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D4northeast" alias="northeast" to="E5">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D4north" alias="north" to="D5">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D4northwest" alias="northwest" to="C5">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D4west" alias="west" to="C4">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="D5">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">3</x>
    <y type="int">4</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      D5.inRoom = " "
    </onexit>
    <exit name="D5southeast" alias="southeast" to="E4">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D5south" alias="south" to="D4">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D5southwest" alias="southwest" to="C4">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D5west" alias="west" to="C5">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D5northwest" alias="northwest" to="C6">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D5north" alias="north" to="D6">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D5northeast" alias="northeast" to="E6">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D5east" alias="east" to="E5">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="D6">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">3</x>
    <y type="int">5</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      D6.inRoom = " "
    </onexit>
    <exit name="D6southwest" alias="southwest" to="C5">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D6south" alias="south" to="D5">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D6southeast" alias="southeast" to="E5">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D6east" alias="east" to="E6">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D6northeast" alias="northeast" to="E7">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D6north" alias="north" to="D7">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D6northwest" alias="northwest" to="C7">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D6west" alias="west" to="C6">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="D7">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">3</x>
    <y type="int">6</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      D7.inRoom = " "
    </onexit>
    <exit name="D7southeast" alias="southeast" to="E6">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D7south" alias="south" to="D6">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D7southwest" alias="southwest" to="C6">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D7west" alias="west" to="C7">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D7northwest" alias="northwest" to="C8">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D7north" alias="north" to="D8">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D7northeast" alias="northeast" to="E8">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D7east" alias="east" to="E7">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="D8">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">3</x>
    <y type="int">7</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      D8.inRoom = " "
    </onexit>
    <exit name="D8southwest" alias="southwest" to="C7">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D8south" alias="south" to="D7">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D8southeast" alias="southeast" to="E7">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D8east" alias="east" to="E8">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D8west" alias="west" to="C8">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="E1">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">4</x>
    <y type="int">0</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      E1.inRoom = " "
    </onexit>
    <exit name="E1west" alias="west" to="D1">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E1northwest" alias="northwest" to="D2">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E1north" alias="north" to="E2">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E1northeast" alias="northeast" to="F2">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E1east" alias="east" to="F1">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="E2">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">4</x>
    <y type="int">1</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      E2.inRoom = " "
    </onexit>
    <exit name="E2southwest" alias="southwest" to="D1">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E2south" alias="south" to="E1">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E2southeast" alias="southeast" to="F1">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E2east" alias="east" to="F2">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E2northeast" alias="northeast" to="F3">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E2north" alias="north" to="E3">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E2northwest" alias="northwest" to="D3">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E2west" alias="west" to="D2">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="E3">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">4</x>
    <y type="int">2</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      E3.inRoom = " "
    </onexit>
    <exit name="E3southeast" alias="southeast" to="F2">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E3south" alias="south" to="E2">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E3southwest" alias="southwest" to="D2">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E3west" alias="west" to="D3">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E3northwest" alias="northwest" to="D4">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E3north" alias="north" to="E4">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E3northeast" alias="northeast" to="F4">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E3east" alias="east" to="F3">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="E4">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">4</x>
    <y type="int">3</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      E4.inRoom = " "
    </onexit>
    <exit name="E4southwest" alias="southwest" to="D3">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E4south" alias="south" to="E3">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E4southeast" alias="southeast" to="F3">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E4east" alias="east" to="F4">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E4northeast" alias="northeast" to="F5">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E4north" alias="north" to="E5">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E4northwest" alias="northwest" to="D5">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E4west" alias="west" to="D4">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="E5">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">4</x>
    <y type="int">4</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      E5.inRoom = " "
    </onexit>
    <exit name="E5southeast" alias="southeast" to="F4">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E5south" alias="south" to="E4">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E5southwest" alias="southwest" to="D4">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E5west" alias="west" to="D5">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E5northwest" alias="northwest" to="D6">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E5north" alias="north" to="E6">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E5northeast" alias="northeast" to="F6">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E5east" alias="east" to="F5">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="E6">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">4</x>
    <y type="int">5</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      E6.inRoom = " "
    </onexit>
    <exit name="E6southwest" alias="southwest" to="D5">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E6south" alias="south" to="E5">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E6southeast" alias="southeast" to="F5">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E6east" alias="east" to="F6">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E6northeast" alias="northeast" to="F7">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E6north" alias="north" to="E7">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E6northwest" alias="northwest" to="D7">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E6west" alias="west" to="D6">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="E7">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">4</x>
    <y type="int">6</y>
    <description type="string"></description>
    <enter type="script">
    </enter>
    <onexit type="script">
      E7.inRoom = " "
    </onexit>
    <firstenter type="script">
    </firstenter>
    <exit name="E7southeast" alias="southeast" to="F6">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E7south" alias="south" to="E6">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E7southwest" alias="southwest" to="D6">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E7west" alias="west" to="D7">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E7northwest" alias="northwest" to="D8">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E7north" alias="north" to="E8">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E7northeast" alias="northeast" to="F8">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E7east" alias="east" to="F7">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="E8">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">4</x>
    <y type="int">7</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      E8.inRoom = " "
    </onexit>
    <exit name="E8southwest" alias="southwest" to="D7">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E8south" alias="south" to="E7">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E8southeast" alias="southeast" to="F7">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E8east" alias="east" to="F8">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E8west" alias="west" to="D8">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="F1">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">5</x>
    <y type="int">0</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      F1.inRoom = " "
    </onexit>
    <exit name="F1west" alias="west" to="E1">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F1northwest" alias="northwest" to="E2">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F1north" alias="north" to="F2">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F1northeast" alias="northeast" to="G2">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F1east" alias="east" to="G1">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="F2">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">5</x>
    <y type="int">1</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      F2.inRoom = " "
    </onexit>
    <exit name="F2southwest" alias="southwest" to="E1">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F2south" alias="south" to="F1">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F2southeast" alias="southeast" to="G1">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F2east" alias="east" to="G2">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F2northeast" alias="northeast" to="G3">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F2north" alias="north" to="F3">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F2northwest" alias="northwest" to="E3">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F2west" alias="west" to="E2">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="F3">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">5</x>
    <y type="int">2</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      F3.inRoom = " "
    </onexit>
    <exit name="F3southeast" alias="southeast" to="G2">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F3south" alias="south" to="F2">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F3southwest" alias="southwest" to="E2">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F3west" alias="west" to="E3">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F3northwest" alias="northwest" to="E4">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F3north" alias="north" to="F4">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F3northeast" alias="northeast" to="G4">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F3east" alias="east" to="G3">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="F4">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">5</x>
    <y type="int">3</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      F4.inRoom = " "
    </onexit>
    <exit name="F4southwest" alias="southwest" to="E3">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F4south" alias="south" to="F3">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F4southeast" alias="southeast" to="G3">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F4east" alias="east" to="G4">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F4northeast" alias="northeast" to="G5">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F4north" alias="north" to="F5">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F4northwest" alias="northwest" to="E5">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F4west" alias="west" to="E4">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="F5">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">5</x>
    <y type="int">4</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      F5.inRoom = " "
    </onexit>
    <exit name="F5southeast" alias="southeast" to="G4">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F5south" alias="south" to="F4">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F5southwest" alias="southwest" to="E4">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F5west" alias="west" to="E5">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F5northwest" alias="northwest" to="E6">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F5north" alias="north" to="F6">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F5northeast" alias="northeast" to="G6">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F5east" alias="east" to="G5">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="F6">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">5</x>
    <y type="int">5</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      F6.inRoom = " "
    </onexit>
    <exit name="F6southwest" alias="southwest" to="E5">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F6south" alias="south" to="F5">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F6southeast" alias="southeast" to="G5">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F6east" alias="east" to="G6">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F6northeast" alias="northeast" to="G7">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F6north" alias="north" to="F7">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F6northwest" alias="northwest" to="E7">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F6west" alias="west" to="E6">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="F7">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">5</x>
    <y type="int">6</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      F7.inRoom = " "
    </onexit>
    <beforefirstenter type="script">
    </beforefirstenter>
    <firstenter type="script">
    </firstenter>
    <exit name="F7southeast" alias="southeast" to="G6">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F7south" alias="south" to="F6">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F7southwest" alias="southwest" to="E6">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F7west" alias="west" to="E7">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F7northwest" alias="northwest" to="E8">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F7north" alias="north" to="F8">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F7northeast" alias="northeast" to="G8">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F7east" alias="east" to="G7">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="F8">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">5</x>
    <y type="int">7</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      F8.inRoom = " "
    </onexit>
    <exit name="F8southwest" alias="southwest" to="E7">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F8south" alias="south" to="F7">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F8southeast" alias="southeast" to="G7">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F8east" alias="east" to="G8">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F8west" alias="west" to="E8">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="G1">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">6</x>
    <y type="int">0</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      G1.inRoom = " "
    </onexit>
    <exit name="G1west" alias="west" to="F1">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G1northwest" alias="northwest" to="F2">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G1north" alias="north" to="G2">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G1northeast" alias="northeast" to="H2">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G1east" alias="east" to="H1">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="G2">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">6</x>
    <y type="int">1</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      G2.inRoom = " "
    </onexit>
    <exit name="G2southwest" alias="southwest" to="F1">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G2south" alias="south" to="G1">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G2southeast" alias="southeast" to="H1">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G2east" alias="east" to="H2">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G2northeast" alias="northeast" to="H3">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G2north" alias="north" to="G3">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G2northwest" alias="northwest" to="F3">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G2west" alias="west" to="F2">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="G3">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">6</x>
    <y type="int">2</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      G3.inRoom = " "
    </onexit>
    <exit name="G3southeast" alias="southeast" to="H2">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G3south" alias="south" to="G2">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G3southwest" alias="southwest" to="F2">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G3west" alias="west" to="F3">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G3northwest" alias="northwest" to="F4">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G3north" alias="north" to="G4">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G3northeast" alias="northeast" to="H4">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G3east" alias="east" to="H3">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="G4">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">6</x>
    <y type="int">3</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      G4.inRoom = " "
    </onexit>
    <exit name="G4southwest" alias="southwest" to="F3">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G4south" alias="south" to="G3">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G4southeast" alias="southeast" to="H3">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G4east" alias="east" to="H4">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G4northeast" alias="northeast" to="H5">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G4north" alias="north" to="G5">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G4northwest" alias="northwest" to="F5">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G4west" alias="west" to="F4">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="G5">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">6</x>
    <y type="int">4</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      G5.inRoom = " "
    </onexit>
    <exit name="G5southeast" alias="southeast" to="H4">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G5south" alias="south" to="G4">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G5southwest" alias="southwest" to="F4">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G5west" alias="west" to="F5">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G5northwest" alias="northwest" to="F6">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G5north" alias="north" to="G6">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G5northeast" alias="northeast" to="H6">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G5east" alias="east" to="H5">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="G6">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">6</x>
    <y type="int">5</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      G6.inRoom = " "
    </onexit>
    <exit name="G6southwest" alias="southwest" to="F5">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G6south" alias="south" to="G5">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G6southeast" alias="southeast" to="H5">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G6east" alias="east" to="H6">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G6northeast" alias="northeast" to="H7">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G6north" alias="north" to="G7">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G6northwest" alias="northwest" to="F7">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G6west" alias="west" to="F6">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="G7">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">6</x>
    <y type="int">6</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      G7.inRoom = " "
    </onexit>
    <firstenter type="script">
      if (game.level = "Pawn") {
        EnableTurnScript (KingOnTurn)
        msg ("You hear a blood-curdling scream cut abruptly to an unearthly silence.")
        msg ("You quickly examine the chessboard only to see one of the white Pawn symbols has disappeared completely. It seems as if the Black King is standing where the White Pawn was…")
        msg ("Another White Pawn piece, however, is still on the board…")
      }
    </firstenter>
    <exit name="G7southeast" alias="southeast" to="H6">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G7south" alias="south" to="G6">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G7southwest" alias="southwest" to="F6">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G7west" alias="west" to="F7">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G7northwest" alias="northwest" to="F8">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G7north" alias="north" to="G8">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G7northeast" alias="northeast" to="H8">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G7east" alias="east" to="H7">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="G8">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">6</x>
    <y type="int">7</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      G8.inRoom = " "
    </onexit>
    <exit name="G8southwest" alias="southwest" to="F7">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G8south" alias="south" to="G7">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G8southeast" alias="southeast" to="H7">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G8east" alias="east" to="H8">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G8west" alias="west" to="F8">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="H1">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">7</x>
    <y type="int">0</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      H1.inRoom = " "
    </onexit>
    <exit name="H1west" alias="west" to="G1">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H1northwest" alias="northwest" to="G2">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H1north" alias="north" to="H2">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="H2">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">7</x>
    <y type="int">1</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      H2.inRoom = " "
    </onexit>
    <exit name="H2southwest" alias="southwest" to="G1">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H2south" alias="south" to="H1">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H2north" alias="north" to="H3">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H2northwest" alias="northwest" to="G3">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H2west" alias="west" to="G2">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="H3">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">7</x>
    <y type="int">2</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      H3.inRoom = " "
    </onexit>
    <exit name="H3south" alias="south" to="H2">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H3southwest" alias="southwest" to="G2">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H3west" alias="west" to="G3">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H3northwest" alias="northwest" to="G4">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H3north" alias="north" to="H4">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="H4">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">7</x>
    <y type="int">3</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      H4.inRoom = " "
    </onexit>
    <exit name="H4southwest" alias="southwest" to="G3">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H4west" alias="west" to="G4">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H4northwest" alias="northwest" to="G5">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H4north" alias="north" to="H5">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H4south" alias="south" to="H3">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="H5">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">7</x>
    <y type="int">4</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      H5.inRoom = " "
    </onexit>
    <exit name="H5south" alias="south" to="H4">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H5southwest" alias="southwest" to="G4">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H5west" alias="west" to="G5">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H5northwest" alias="northwest" to="G6">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H5north" alias="north" to="H6">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="H6">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">7</x>
    <y type="int">5</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      H6.inRoom = " "
    </onexit>
    <exit name="H6southwest" alias="southwest" to="G5">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H6south" alias="south" to="H5">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H6north" alias="north" to="H7">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H6northwest" alias="northwest" to="G7">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H6west" alias="west" to="G6">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="H7">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">7</x>
    <y type="int">6</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      H7.inRoom = " "
    </onexit>
    <firstenter type="script">
      if (game.level = "Pawn" ) {
        King.first = 1
        msg ("A stone statue of a bearded man stands directly in front of you, all in black marble.")
        msg ("There’s something sad, but hauntingly peaceful about his features, hands clasped in a penitent gesture, flat marble eyes staring at the grassy sky.")
        msg ("Now, your knowledge of chess isn’t that great, but it seems like that last Pawn is standing awfully close to the King… ")
      }
    </firstenter>
    <exit name="H7south" alias="south" to="H6">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H7southwest" alias="southwest" to="G6">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H7west" alias="west" to="G7">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H7northwest" alias="northwest" to="G8">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H7north" alias="north" to="H8">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <object name="H8">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <description>There is  a closed door to the north</description>
    <inRoom> </inRoom>
    <x type="int">7</x>
    <y type="int">7</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      H8.inRoom = " "
    </onexit>
    <exit name="H8southwest" alias="southwest" to="G7">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H8south" alias="south" to="H7">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H8west" alias="west" to="G8">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
  </object>
  <turnscript name="KnightOnTurn">
    <enabled />
    <script>
      moveKnight
    </script>
  </turnscript>
  <verb>
    <property>press</property>
    <pattern>press</pattern>
    <defaultexpression>"You can't press " + object.article + "."</defaultexpression>
  </verb>
  <turnscript name="KingOnTurn">
    <enabled type="boolean">false</enabled>
    <script>
      moveKing
    </script>
  </turnscript>
  <turnscript name="BishopOnTurn">
    <script>
      moveBishop
      moveBishop2
    </script>
  </turnscript>
  <command>
    <pattern>look #text#</pattern>
    <script><![CDATA[
      direction = text
      // if (direction = "north" or direction = "North" or direction = "NORTH" or direction = "n") {
        // lookNorth
        // }
      // else if (direction = "south" or direction = "South" or direction = "SOUTH" or direction = "s") {
        // lookSouth
        // }
      // else if (direction = "east" or direction = "East" or direction = "EAST" or direction = "e") {
        // lookEast
        // }
      // else if (direction = "west" or direction = "West" or direction = "WEST" or direction = "w") {
        // lookWest
        // }
      // else if (direction = "northeast" or direction = "Northeast" or direction = "NORTHEAST" or direction = "NorthEast" or direction = "ne") {
        // lookNorthEast
        // }
      // else if (direction = "northwest" or direction = "Northwest" or direction = "NORTHWEST" or direction = "NorthWest" or direction = "nw") {
        // lookNorthWest
        // }
      // else if (direction = "southeast" or direction = "Southeast" or direction = "SOUTHEAST" or direction = "SouthEast" or direction = "se") {
        // lookSouthEast
        // }
      // else if (direction = "southwest" or direction = "Southwest" or direction = "SOUTHWEST" or direction = "SouthWest" or direction = "sw") {
        // lookSouthWest
        // }
      // else if (direction = "around") {
        if (direction = "around") {
          msg ("You look closely at the walls and see a complex interlocking, twisting and twining of brambles forming a solid block. You look up, and up and up and see them extending almost as far as you can see, a thin sliver of blue the only impression of a sky that’s left. ")
          if ((Chessboard.parent = player.parent) and (player.parent <> STORAGE)) {
            msg ("You see a chessboard on the floor")
          }
        }
        else {
          msg ("not supported")
        }
    ]]></script>
  </command>
  <object name="STORAGE">
    <inherit name="editor_room" />
    <x type="int">42</x>
    <y type="int">42</y>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <object name="Knight">
      <inherit name="editor_object" />
      <inherit name="male" />
      <position>STORAGE</position>
    </object>
    <object name="Rook">
      <inherit name="editor_object" />
      <position>STORAGE</position>
    </object>
    <object name="Bishop">
      <inherit name="editor_object" />
      <position>STORAGE</position>
      <kill>You can't kill a light</kill>
      <hit>You can't hit a light</hit>
      <look>You see beautiful light, a cool chill runs down your spine. </look>
    </object>
    <object name="Queen">
      <inherit name="editor_object" />
      <position>STORAGE</position>
    </object>
    <object name="Lever">
      <inherit name="editor_object" />
      <inherit name="switchable" />
      <feature_switchable />
      <switchonmsg>You have switched the button on. The light now illuminates the entrance you came in.</switchonmsg>
      <switchoffmsg>The light is still there, you will probbly die</switchoffmsg>
      <press type="script">
        moveLever
      </press>
      <push type="script">
        moveLever
      </push>
      <onswitchon type="script">
        msg ("You Win!!")
      </onswitchon>
      <pull type="script">
        moveLever
      </pull>
    </object>
    <object name="player">
      <inherit name="editor_object" />
      <inherit name="editor_player" />
      <inherit name="female" />
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <playerDeath>null</playerDeath>
      <turn type="int">0</turn>
    </object>
    <object name="Chessboard">
      <inherit name="editor_object" />
      <take />
      <dropmsg>You dropped the Chessboard</dropmsg>
      <position>STORAGE</position>
      <first type="int">0</first>
      <takemsg> </takemsg>
      <look type="script">
      </look>
      <ontake type="script">
        Chessboard.first = Chessboard.first + 1
        if (Chessboard.first = 1) {
          msg ("You pick it up and feel its cool texture in your hands as a light suddenly switches on from within its pane.")
          msg ("Slowly, small squares of black and white spread across its surface.")
          msg ("And several little designs appear upon it.")
          msg ("It looks to be: two white pawns, and one black king…")
          msg ("")
        }
      </ontake>
      <ondrop type="script">
        msg ("You’re not sure if that was a good idea.")
        msg ("Traversing the maze blind sounds like a horrifying prospect.")
      </ondrop>
      <smash type="script">
        if (Chessboard.parent = player) {
          ClearScreen
          finish
        }
      </smash>
      <destroy type="script">
        if (Chessboard.parent = player) {
          ClearScreen
          finish
        }
      </destroy>
      <break type="script">
        if (Chessboard.parent = player) {
          ClearScreen
          finish
        }
      </break>
    </object>
    <object name="King">
      <inherit name="editor_object" />
      <position>STORAGE</position>
      <first type="int">0</first>
    </object>
    <object name="Pawn">
      <inherit name="editor_object" />
      <position>STORAGE</position>
    </object>
    <object name="Goal">
      <inherit name="editor_object" />
      <alias>Mirror, Oval Glass, Looking Glass, OvalGlass, LookingGlass</alias>
      <look type="script">
        if (game.level = "RabbitHole") {
          msg ("A cool shiver tickles down your spine - this thing, this thing that you thought was a mirror - isn’t reflecting anything.")
          msg ("In fact… It seems to contain a world all its own… ")
        }
        else {
          msg ("The mirror seems to contain a world all its own.")
        }
      </look>
      <enter type="script">
        mirrorEntered
      </enter>
      <approach type="script">
        mirrorEntered
      </approach>
      <lookin type="script">
        mirrorEntered
      </lookin>
    </object>
    <object name="Key">
      <inherit name="editor_object" />
      <look>'Tis a passport</look>
      <take />
      <feature_usegive />
      <used type="int">0</used>
      <alias>Passport</alias>
      <use type="script">
        if (game.pov.parent = B2) {
          UnlockExit (A2east)
          UnlockExit (B2west)
          Key.used = 1
          Key.parent = STORAGE
        }
        else {
          msg ("There is nothing to unlock")
        }
      </use>
    </object>
    <object name="Bishop2">
      <inherit name="editor_object" />
      <inherit name="male" />
      <alias>Bishop</alias>
    </object>
    <object name="Sword">
      <inherit name="editor_object" />
      <look>A SWORD!!!!!</look>
    </object>
  </object>
  <turnscript name="QueenOnTurn" />
  <turnscript name="RookOnTurn" />
  <verb>
    <property>enter</property>
    <pattern>enter</pattern>
    <defaultexpression>"You can't enter " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>approach</property>
    <pattern>approach</pattern>
    <defaultexpression>"You can't approach " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>lookin</property>
    <pattern>look in</pattern>
    <defaultexpression>"You can't look in " + object.article + "."</defaultexpression>
  </verb>
  <command>
    <pattern>level #text#</pattern>
    <script>
      level = text
      if (level = "RabbitHole") {
        game.level = "RabbitHole"
        setupRabbitHole
      }
      else if (level = "Pawn") {
        game.level = "Pawn"
        takedownMap
        setupPawn
      }
      else if (level = "PreBishop") {
        AddToInventory (Chessboard)
        game.level = "PreBishop"
        takedownMap
        setupPreBishop
      }
      else if (level = "Bishop") {
        AddToInventory (Chessboard)
        game.level = "Bishop"
        takedownMap
        setupBishop
      }
      else if (level = "PreRook") {
        AddToInventory (Chessboard)
        game.level = "PreRook"
        takedownMap
        setupPreRook
      }
      else if (level = "Rook") {
        AddToInventory (Chessboard)
        game.level = "Rook"
        takedownMap
        setupRook
      }
      else if (level = "PreKnight") {
        AddToInventory (Chessboard)
        game.level = "PreKnight"
        takedownMap
        setupPreKnight
      }
      else if (level = "Knight") {
        AddToInventory (Chessboard)
        game.level = "Knight"
        takedownMap
        setupKnight
      }
      else if (level = "Queen") {
        AddToInventory (Chessboard)
        game.level = "Queen"
        takedownMap
        setupQueen
      }
      else if (level = "PreQueen") {
        AddToInventory (Chessboard)
        game.level = "PreQueen"
        takedownMap
        setupPreQueen
      }
      else {
        msg ("... did you even read that?")
      }
    </script>
  </command>
  <turnscript name="PreBishopOnTurn">
    <script>
      moveRookInPreBishop
      moveKnightInPreBishop
    </script>
  </turnscript>
  <turnscript name="PreKnightOnTurn">
    <script>
      preKnightRookKillZone
      moveRookInPreKnight
    </script>
  </turnscript>
  <turnscript name="checkOnPosition">
    <enabled />
    <script><![CDATA[
      if ((Contains (player.parent, Chessboard)) and (Chessboard.parent <> player) and (player.parent <> STORAGE)) {
        msg ("You see a chessboard")
      }
      if ((Contains (player.parent, Key)) and (Key.parent <> player) and (player.parent <> STORAGE)) {
        msg ("You see a key")
      }
      if ((Contains (player.parent, Sword)) and (Sword.parent <> player) and (player.parent <> STORAGE)) {
        msg ("You see a sword")
      }
      if ((Contains (player.parent,Goal)) and (Key.parent <> player) and (player.parent <> STORAGE)) {
        if (game.level = "RabbitHole") {
          msg ("You see the oval glass hovering two feet in the air")
        }
        else if (game.level = "Pawn") {
          msg ("You see another mirror.")
          msg ("Like the other one, the reflection contains something else. Could this one be the same as the last?")
        }
        else if (game.level = "PreRook") {
          msg ("Yet another strange mirror hovers impossibly just in front of you. Once again, the reflection contains something that’s not there. ")
        }
        else if (game.level = "Rook") {
          msg ("Another mirror? Really? Just how many more of these are there? ")
        }
        else if (game.level = "PreKnight") {
          msg ("You see a mirror")
        }
        else if (game.level = "Knight") {
          msg ("You see a mirror")
        }
        else if (game.level = "PreBishop") {
          msg ("You see a mirror")
        }
        else if (game.level = "Bishop") {
          msg ("You see a mirror")
        }
        else if (game.level = "PreQueen") {
          msg ("You see a mirror")
        }
      }
      if ((player.parent = F7) and (game.level = "Pawn")) {
        EnableTurnScript (KingOnTurn)
      }
      if ((player.parent = B2) and (game.level = "Rook")) {
        if (Got(Key) and (Key.used=0)) {
          msg ("It looks like this key could be used on the western wall")
        }
        else if (Got(Key) and (Key.used=1)) {
          // do nothing
        }
        else if (Key.used = 0) {
          msg ("It looks like you could open the western wall with a key")
        }
      }
      PlPa = player.parent
      KiPa = King.parent
      if ((PlPa.y = KiPa.y) and (game.level = "Pawn") and (King.first=0) and ((KiPa.x-PlPa.x)=1)) {
        King.first = 1
        msg ("A stone statue of a bearded man stands directly in front of you, all in black marble.")
        msg ("There’s something sad, but hauntingly peaceful about his features, hands clasped in a penitent gesture, flat marble eyes staring at the grassy sky.")
        msg ("Now, your knowledge of chess isn’t that great, but it seems like that last Pawn is standing awfully close to the King… ")
      }
      else if ((player.parent = A7) and (KiPa.y = PlPa.y) and (game.level = "Pawn")) {
        msg ("There’s nowhere to go from here!")
      }
      // Special RabbitHole stuff
      if (game.level = "RabbitHole") {
        if (player.parent = E3) {
          if (player.turn = 0) {
            msg ("You see a shadow of the distance - another person?")
            player.turn = 1
          }
        }
        else if (player.parent = E2) {
          if (player.turn = 1) {
            msg ("Your heart skips a beat as you reach out - but before you get the chance - it disappears.")
            player.turn = 2
          }
        }
        else if (player.parent = E1) {
          if (player.turn = 2) {
            msg ("Upon approaching the area the only thing you see is a single mirror in the distance, an oval glass hovering two feet in the air.")
            player.turn = 3
          }
        }
      }
      else if (game.level = "Bishop") {
        if (player.parent = Lever.parent) {
          msg ("You see a lever")
        }
      }
    ]]></script>
  </turnscript>
  <turnscript name="displayASCII">
    <enabled />
    <script>
      showASCIImap
    </script>
  </turnscript>
  <command>
    <pattern>examine #text#</pattern>
    <script><![CDATA[
      if ((text="wall") or (text="Wall") or (text="WALL") or (text="walls") or (text="Walls") or (text="WALLS")) {
        msg ("You look closely at the walls and see a complex interlocking, twisting and twining of brambles forming a solid block. You look up, and up and up and see them extending almost as far as you can see, a thin sliver of blue the only impression of a sky that’s left. ")
        msg ("There’s definitely no way through these things. ")
      }
      else if ((player.parent = D1) and (game.level = "RabbitHole") and ((text="Mirror") or (text="MIRROR") or (text="mirror") or (text="Looking Glass") or (text="LookingGlass") or (text="LOOKING GLASS") or (text="looking glass"))) {
        msg ("A cool shiver tickles down your spine - this thing, this thing that you thought was a mirror - isn’t reflecting anything.")
        msg ("In fact… It seems to contain a world all its own… ")
      }
      else if ((player.parent = Goal.parent) and (game.level <> "RabbitHole") and ((text="Mirror") or (text="MIRROR") or (text="mirror") or (text="Looking Glass") or (text="LookingGlass") or (text="LOOKING GLASS") or (text="looking glass"))) {
        msg ("The mirror seems to contain a world all its own.")
      }
    ]]></script>
  </command>
  <turnscript name="ifDead">
    <enabled />
    <script>
      if ((player.playerDeath = null) or (player.playerDeath = "null")) {
      }
      else {
        msg (" ")
        msg (" ")
        msg (player.playerDeath)
        msg (" ")
        msg (" ")
        msg ("Restart the level")
        wait {
          ClearScreen
          if (game.level = "Pawn") {
            takedownMap
            setupPawn
            player.playerDeath = "null"
          }
          else if (game.level = "PreRook") {
            takedownMap
            setupPreRook
            player.playerDeath = "null"
          }
          else if (game.level = "Rook") {
            takedownMap
            setupRook
            player.playerDeath = "null"
          }
          else if (game.level = "PreBishop") {
            takedownMap
            setupPreBishop
            player.playerDeath = "null"
          }
          else if (game.level = "Bishop") {
            takedownMap
            setupBishop
            player.playerDeath = "null"
          }
          else if (game.level = "PreKnight") {
            takedownMap
            setupPreKnight
            player.playerDeath = "null"
          }
          else if (game.level = "Knight") {
            takedownMap
            setupKnight
            player.playerDeath = "null"
          }
          else if (game.level = "Queen") {
            takedownMap
            setupQueen
            player.playerDeath = "null"
          }
        }
      }
    </script>
  </turnscript>
  <turnscript name="playerTurn">
    <script>
      // for PreQueen (One wall comes down on player's 6th turn in the level.)
      if (game.level = "PreQueen") {
        player.turn = player.turn + 1
        if (player.turn = 6) {
          UnlockExit (C5northeast)
          UnlockExit (C6southeast)
          UnlockExit (C6east)
          UnlockExit (D6west)
          UnlockExit (D6southwest)
          UnlockExit (D5northwest)
          DisableTurnScript (playerTurn)
          player.turn = 0
        }
      }
    </script>
  </turnscript>
  <turnscript name="playerQueenLevel">
    <script>
      if (player.turn = 0) {
        msg ("You take a step away from the throne.")
        msg ("The crown clatters to the floor.")
        player.turn = 1
      }
      else if (player.turn = 1) {
        msg ("You take another step away from the throne.")
        msg ("You drop the scepter on the grass.")
        player.turn = 2
      }
      else if (player.turn = 2) {
        msg ("You take a final step away from the throne.")
        msg ("The cape flutters to the floor.")
        player.turn = 3
      }
      else if (player.turn = 3) {
        msg ("You continue walking, aimlessly, towards some uncertain destination.")
        player.turn = 4
      }
      else if (player.turn = 4) {
        msg ("You’re confused.")
        player.turn = 5
      }
      else if (player.turn = 5) {
        msg ("You’re lost.")
        player.turn = 6
      }
      else if (player.turn = 6) {
        msg ("You’re unsure of how you got there, who you are, what happened before –")
        player.turn = 7
      }
      else if (player.turn = 7) {
        msg ("All you know is – the throne is the last place you want to be.")
        player.turn = 8
      }
      else if (player.turn = 8) {
        msg ("Maybe if you keep walking.")
        player.turn = 9
      }
      else if (player.turn = 9) {
        msg ("Maybe if you keep on moving.")
        player.turn = 10
      }
      else if (player.turn = 10) {
        msg ("Something. Something…")
        player.turn = 11
      }
      else if (player.turn = 11) {
        msg ("Something should appear.")
        player.turn = 12
      }
      else if (player.turn = 12) {
        msg ("There can’t just be grass, right?")
        player.turn = 13
      }
      else if (player.turn = 13) {
        msg ("Surely it must end somewhere…")
        finish
      }
    </script>
  </turnscript>
  <turnscript name="describeWalls">
    <enabled />
    <script>
      descWalls
    </script>
  </turnscript>
  <verb>
    <property>smash</property>
    <pattern>smash</pattern>
    <defaultexpression>"You can't destroy" + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>destroy</property>
    <pattern>destroy</pattern>
    <defaultexpression>"You can't destroy " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>break</property>
    <pattern>break</pattern>
    <defaultexpression>"You can't break " + object.article + "."</defaultexpression>
  </verb>
  <function name="moveKnight"><![CDATA[
    if (Knight.parent = C3) {
      MoveObject (Knight, B1)
      C3.inRoom = " "
    }
    else if (Knight.parent = B1) {
      MoveObject (Knight, A3)
      B1.inRoom = " "
    }
    else if (Knight.parent = A3) {
      MoveObject (Knight, B5)
      A3.inRoom = " "
    }
    else if (Knight.parent = B5) {
      MoveObject (Knight, E4)
      B5.inRoom = " "
    }
    else if (Knight.parent = E4) {
      MoveObject (Knight, F2)
      E4.inRoom = " "
    }
    else if (Knight.parent = F2) {
      MoveObject (Knight, D1)
      F2.inRoom = " "
    }
    else if (Knight.parent = D1) {
      MoveObject (Knight, B2)
      D1.inRoom = " "
    }
    else if (Knight.parent = B2) {
      MoveObject (Knight, A4)
      B2.inRoom = " "
    }
    else if (Knight.parent = A4) {
      MoveObject (Knight, C3)
      A4.inRoom = " "
    }
    else if (Knight.parent = A2) {
      MoveObject (Knight, C3)
      A2.inRoom = " "
    }
    if ((player.parent = Knight.parent) and (player.parent <> STORAGE)) {
      deathByKnight
    }
  ]]></function>
  <function name="moveBishop"><![CDATA[
    if (game.level = "Bishop") {
      if ((player.parent = Bishop.parent) and (player.parent <> STORAGE)) {
        deathByBishop
      }
      if ((player.parent = Lever.parent) and (player.parent <> STORAGE)) {
        msg ("You see a lever in the wall")
      }
      if (Bishop.parent = A1) {
        MoveObject (Bishop, B2)
        A1.inRoom = " "
      }
      else if (Bishop.parent = B2) {
        MoveObject (Bishop, A3)
        B2.inRoom = " "
      }
      else if (Bishop.parent = A3) {
        MoveObject (Bishop, C1)
        A3.inRoom = " "
      }
      else if (Bishop.parent = C1) {
        MoveObject (Bishop, D2)
        C1.inRoom = " "
      }
      else if (Bishop.parent = D2) {
        MoveObject (Bishop, C3)
        D2.inRoom = " "
      }
      else if (Bishop.parent = C3) {
        MoveObject (Bishop, A1)
        C3.inRoom = " "
      }
      else if (Bishop.parent = A5) {
        MoveObject (Bishop, C7)
        A5.inRoom = " "
      }
      else if (Bishop.parent = C7) {
        MoveObject (Bishop, B8)
        C7.inRoom = " "
      }
      else if (Bishop.parent = B8) {
        MoveObject (Bishop, A7)
        B8.inRoom = " "
      }
      else if (Bishop.parent = A7) {
        MoveObject (Bishop, B6)
        A7.inRoom = " "
      }
      else if (Bishop.parent = B6) {
        MoveObject (Bishop, A5)
        B6.inRoom = " "
      }
      else if (Bishop.parent = E1) {
        MoveObject (Bishop, G3)
        E1.inRoom = " "
      }
      else if (Bishop.parent = G3) {
        MoveObject (Bishop, H2)
        G3.inRoom = " "
      }
      else if (Bishop.parent = H2) {
        MoveObject (Bishop, G1)
        H2.inRoom = " "
      }
      else if (Bishop.parent = G1) {
        MoveObject (Bishop, E3)
        G1.inRoom = " "
      }
      else if (Bishop.parent = E3) {
        MoveObject (Bishop, F2)
        E3.inRoom = " "
      }
      else if (Bishop.parent = F2) {
        MoveObject (Bishop, E1)
        F2.inRoom = " "
      }
      else {
        Bishop.parent.inRoom = " "
        MoveObject (Bishop, D3)
      }
      if ((player.parent = Bishop.parent) and (player.parent <> STORAGE)) {
        deathByBishop
      }
    }
  ]]></function>
  <function name="showASCIImap"><![CDATA[
    // RabbitHole -> Pawn -> Rook -> Knight -> Bishop -> Queen
    player.parent.inRoom = "♙"
    if (HasAttribute(King.parent, "inRoom")) {
      King.parent.inRoom = "♚"
    }
    if (HasAttribute(Key.parent, "inRoom")) {
      Key.parent.inRoom = " ஈ "
    }
    if (HasAttribute(Pawn.parent, "inRoom")) {
      Pawn.parent.inRoom = "♙"
    }
    if (HasAttribute(Rook.parent, "inRoom")) {
      Rook.parent.inRoom = "♜"
    }
    if (HasAttribute(Knight.parent, "inRoom")) {
      Knight.parent.inRoom = "♞"
    }
    if (HasAttribute(Bishop.parent, "inRoom")) {
      Bishop.parent.inRoom = "♝"
    }
    if (HasAttribute(Queen.parent, "inRoom")) {
      Queen.parent.inRoom = "♛"
    }
    if (HasAttribute(Goal.parent, "inRoom")) {
      Goal.parent.inRoom = "۝"
    }
    if (HasAttribute(Lever.parent, "inRoom")) {
      Lever.parent.inRoom = "Ի"
    }
    if (HasAttribute(Bishop2.parent, "inRoom")) {
      Bishop2.parent.inRoom = "♝"
    }
    if (Chessboard.parent = player) {
      PrintCentered ("________________________")
      PrintCentered ("|  "+A8.inRoom+"  |  "+B8.inRoom+"  |  "+C8.inRoom+"  |  "+D8.inRoom+"  |  "+E8.inRoom+"  |  "+F8.inRoom+"  |  "+G8.inRoom+"  |  "+H8.inRoom+"  |")
      PrintCentered ("________________________")
      PrintCentered ("| "+A7.inRoom+" | "+B7.inRoom+" | "+C7.inRoom+" | "+D7.inRoom+" | "+E7.inRoom+" | "+F7.inRoom+" | "+G7.inRoom+" | "+H7.inRoom+" |")
      PrintCentered ("________________________")
      PrintCentered ("| "+A6.inRoom+" | "+B6.inRoom+" | "+C6.inRoom+" | "+D6.inRoom+" | "+E6.inRoom+" | "+F6.inRoom+" | "+G6.inRoom+" | "+H6.inRoom+" |")
      PrintCentered ("________________________")
      PrintCentered ("| "+A5.inRoom+" | "+B5.inRoom+" | "+C5.inRoom+" | "+D5.inRoom+" | "+E5.inRoom+" | "+F5.inRoom+" | "+G5.inRoom+" | "+H5.inRoom+" |")
      PrintCentered ("________________________")
      PrintCentered ("| "+A4.inRoom+" | "+B4.inRoom+" | "+C4.inRoom+" | "+D4.inRoom+" | "+E4.inRoom+" | "+F4.inRoom+" | "+G4.inRoom+" | "+H4.inRoom+" |")
      PrintCentered ("________________________")
      PrintCentered ("| "+A3.inRoom+ " | "+B3.inRoom+" | "+C3.inRoom+" | "+D3.inRoom+" | "+E3.inRoom+" | "+F3.inRoom+" | "+G3.inRoom+" | "+H3.inRoom+" |")
      PrintCentered ("________________________")
      PrintCentered ("| "+A2.inRoom+" | "+B2.inRoom+" | "+C2.inRoom+" | "+D2.inRoom+" | "+E2.inRoom+" | "+F2.inRoom+" | "+G2.inRoom+" | "+H2.inRoom+" |")
      PrintCentered ("________________________")
      PrintCentered ("| "+A1.inRoom+" | "+B1.inRoom+" | "+C1.inRoom+" | "+D1.inRoom+" | "+E1.inRoom+" | "+F1.inRoom+" | "+G1.inRoom+" | "+H1.inRoom+" |")
      PrintCentered ("________________________")
    }
  ]]></function>
  <function name="lookNorth" type="int"><![CDATA[
    playerRoom = player.parent
    playerX = playerRoom.x
    playerY = playerRoom.y
    visList = NewObjectList()
    top = 8
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x")) {
        if (room.x = playerX) {
          if (room.y >= playerY) {
            list add (visList, room)
            if (HasAttribute(room, "northWall")) {
              if (room.northWall = 1) {
                if (room.y < top) {
                  top = room.y
                }
              }
            }
          }
        }
      }
    }
    foreach (visRoom, visList) {
      if (visRoom.y < top) {
        if (Contains (visRoom, Knight)) {
          msg ("You see a Knight")
        }
        else if (Contains (visRoom, Pawn)) {
          msg ("You see a Pawn")
        }
        else if (Contains (visRoom, Rook)) {
          msg ("You see a Rook")
        }
        else if (Contains (visRoom, Bishop)) {
          msg ("You see a Bishop")
        }
        else if (Contains (visRoom, Chessboard)) {
          if ((Chessboard.parent  <> player) and (Chessboard.parent.x <> playerX)) {
            msg ("You see a Chessboard")
          }
        }
        else if (Contains (visRoom, King)) {
          msg ("You see a King")
        }
      }
    }
  ]]></function>
  <function name="lookSouth"><![CDATA[
    playerRoom = player.parent
    playerX = playerRoom.x
    playerY = playerRoom.y
    visList = NewObjectList()
    bottom = 0
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x")) {
        if (room.x = playerX) {
          if (room.y <= playerY) {
            list add (visList, room)
            if (HasAttribute(room, "southWall")) {
              if (room.southWall = 1) {
                if (room.y > bottom) {
                  bottom = room.y
                }
              }
            }
          }
        }
      }
    }
    foreach (visRoom, visList) {
      if (visRoom.y > bottom) {
        if (Contains (visRoom, Knight)) {
          msg ("You see the Knight!")
        }
        else if (Contains (visRoom, Pawn)) {
          msg ("You see a Pawn")
        }
        else if (Contains (visRoom, Rook)) {
          msg ("You see a Rook")
        }
        else if (Contains (visRoom, Bishop)) {
          msg ("You see a Bishop")
        }
        else if (Contains (visRoom, Chessboard)) {
          if ((Chessboard.parent  <> player) and (Chessboard.parent.x <> playerX)) {
            msg ("You see a Chessboard")
          }
        }
        else if (Contains (visRoom, King)) {
          msg ("You see a King")
        }
      }
    }
  ]]></function>
  <function name="lookEast"><![CDATA[
    playerRoom = player.parent
    playerX = playerRoom.x
    playerY = playerRoom.y
    visList = newObjectList()
    eastmost = 8
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x")) {
        if (room.x >= playerX) {
          if (room.y = playerY) {
            list add (visList, room)
            if (HasAttribute(room,"eastWall")) {
              if (room.eastWall = 1) {
                if (room.x < eastmost) {
                  eastmost = room.x
                }
              }
            }
          }
        }
      }
    }
    foreach (visRoom, visList) {
      if (visRoom.x < eastmost) {
        if (Contains (visRoom, Knight)) {
          msg ("You see the Knight!")
        }
        else if (Contains (visRoom, Pawn)) {
          msg ("You see a Pawn")
        }
        else if (Contains (visRoom, Rook)) {
          msg ("You see a Rook")
        }
        else if (Contains (visRoom, Bishop)) {
          msg ("You see a Bishop")
        }
        else if (Contains (visRoom, Chessboard)) {
          if ((Chessboard.parent  <> player) and (Chessboard.parent.x <> playerX)) {
            msg ("You see a Chessboard")
          }
        }
        else if (Contains (visRoom, King)) {
          msg ("You see a King")
        }
      }
    }
  ]]></function>
  <function name="lookWest"><![CDATA[
    playerRoom = player.parent
    playerX = playerRoom.x
    playerY = playerRoom.y
    visList = NewObjectList()
    westmost = 0
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x")) {
        if (room.x <= playerX) {
          if (room.y = playerY) {
            list add (visList, room)
            if (HasAttribute(room, "westWall")) {
              if (room.southWall = 1) {
                if (room.x > westmost) {
                  westmost = room.x
                }
              }
            }
          }
        }
      }
    }
    foreach (visRoom, visList) {
      if (visRoom.x > westmost) {
        if (Contains (visRoom, Knight)) {
          msg ("You see the Knight!")
        }
        else if (Contains (visRoom, Pawn)) {
          msg ("You see a Pawn")
        }
        else if (Contains (visRoom, Rook)) {
          msg ("You see a Rook")
        }
        else if (Contains (visRoom, Bishop)) {
          msg ("You see a Bishop")
        }
        else if (Contains (visRoom, Chessboard)) {
          if ((Chessboard.parent  <> player) and (Chessboard.parent.x <> playerX)) {
            msg ("You see a Chessboard")
          }
        }
        else if (Contains (visRoom, King)) {
          msg ("You see a King")
        }
      }
    }
  ]]></function>
  <function name="lookNorthEast"><![CDATA[
    playerRoom = player.parent
    playerX = playerRoom.x
    playerY = playerRoom.y
    visList = NewObjectList()
    far = 8
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x")) {
        if (room.x >= playerX) {
          if (room.y >= playerY) {
            if ((room.y-playerY)=(room.x-playerX)) {
              list add (visList, room)
              if (HasAttribute(room, "northWall") and HasAttribute(room, "eastWall")) {
                if (room.y < far) {
                  far = room.y
                }
              }
              else if (HasAttribute(room, "westWall") and HasAttribute(room, "southWall")) {
                if ((room.y-1) < far) {
                  far = room.y-1
                }
              }
            }
          }
        }
      }
    }
    foreach (visRoom, visList) {
      if (visRoom.y < far) {
        if (Contains (visRoom, Knight)) {
          msg ("You see the Knight!")
        }
        else if (Contains (visRoom, Pawn)) {
          msg ("You see a Pawn")
        }
        else if (Contains (visRoom, Rook)) {
          msg ("You see a Rook")
        }
        else if (Contains (visRoom, Bishop)) {
          msg ("You see a Bishop")
        }
        else if (Contains (visRoom, Chessboard)) {
          if ((Chessboard.parent  <> player) and (Chessboard.parent.x <> playerX)) {
            msg ("You see a Chessboard")
          }
        }
        else if (Contains (visRoom, King)) {
          msg ("You see a King")
        }
      }
    }
  ]]></function>
  <function name="lookNorthWest"><![CDATA[
    playerRoom = player.parent
    playerX = playerRoom.x
    playerY = playerRoom.y
    visList = NewObjectList()
    far = 8
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x")) {
        if (room.x <= playerX) {
          if (room.y >= playerY) {
            if ((room.y-playerY)=(playerX-room.x)) {
              list add (visList, room)
              if (HasAttribute(room, "northWall") and HasAttribute(room, "westWall")) {
                if (room.y < far) {
                  far = room.y
                }
              }
              else if (HasAttribute(room,"southWall") and HasAttribute(room,"eastWall")) {
                if ((room.y-1) < far) {
                  far = room.y-1
                }
              }
            }
          }
        }
      }
    }
    foreach (visRoom, visList) {
      if (visRoom.y < far) {
        if (Contains (visRoom, Knight)) {
          msg ("You see the Knight!")
        }
        else if (Contains (visRoom, Pawn)) {
          msg ("You see a Pawn")
        }
        else if (Contains (visRoom, Rook)) {
          msg ("You see a Rook")
        }
        else if (Contains (visRoom, Bishop)) {
          msg ("You see a Bishop")
        }
        else if (Contains (visRoom, Chessboard)) {
          if ((Chessboard.parent  <> player) and (Chessboard.parent.x <> playerX)) {
            msg ("You see a Chessboard")
          }
        }
        else if (Contains (visRoom, King)) {
          msg ("You see a King")
        }
      }
    }
  ]]></function>
  <function name="lookSouthEast"><![CDATA[
    playerRoom = player.parent
    playerX = playerRoom.x
    playerY = playerRoom.y
    visList = NewObjectList()
    far = 0
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x")) {
        if (room.x >= playerX) {
          if (room.y <= playerY) {
            if ((playerY-room.y)=(room.x-playerX)) {
              list add (visList, room)
              if (HasAttribute(room, "southWall") and HasAttribute(room, "eastWall")) {
                if (room.y > far) {
                  far = room.y
                }
              }
              else if (HasAttribute(room, "northWall") and HasAttribute(room, "westWall")) {
                if ((room.y+1)>far) {
                  far = room.y+1
                }
              }
            }
          }
        }
      }
    }
    foreach (visRoom, visList) {
      if (visRoom.y > far) {
        if (Contains (visRoom, Knight)) {
          msg ("You see the Knight!")
        }
        else if (Contains (visRoom, Pawn)) {
          msg ("You see a Pawn")
        }
        else if (Contains (visRoom, Rook)) {
          msg ("You see a Rook")
        }
        else if (Contains (visRoom, Bishop)) {
          msg ("You see a Bishop")
        }
        else if (Contains (visRoom, Chessboard)) {
          if ((Chessboard.parent  <> player) and (Chessboard.parent.x <> playerX)) {
            msg ("You see a Chessboard")
          }
        }
        else if (Contains (visRoom, King)) {
          msg ("You see a King")
        }
      }
    }
  ]]></function>
  <function name="lookSouthWest"><![CDATA[
    playerRoom = player.parent
    playerX = playerRoom.x
    playerY = playerRoom.y
    visList = NewObjectList()
    far = 0
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x")) {
        if (room.x <= playerX) {
          if (room.y <= playerY) {
            if ((playerY-room.y)=(playerX-room.x)) {
              list add (visList, room)
              if (HasAttribute(room, "southWall") and HasAttribute(room, "westWall")) {
                if (room.y > far) {
                  far = room.y
                }
              }
              else if (HasAttribute(room, "northWall") and HasAttribute(room, "eastWall")) {
                if (room.y+1 > far) {
                  far = room.y+1
                }
              }
            }
          }
        }
      }
    }
    foreach (visRoom, visList) {
      if (visRoom.y > far) {
        if (Contains (visRoom, Knight)) {
          msg ("You see the Knight!")
        }
        else if (Contains (visRoom, Pawn)) {
          msg ("You see a Pawn")
        }
        else if (Contains (visRoom, Rook)) {
          msg ("You see a Rook")
        }
        else if (Contains (visRoom, Bishop)) {
          msg ("You see a Bishop")
        }
        else if (Contains (visRoom, Chessboard)) {
          if ((Chessboard.parent <> player) and (Chessboard.parent.x <> playerX)) {
            msg ("You see a Chessboard")
          }
        }
        else if (Contains (visRoom, King)) {
          msg ("You see a King")
        }
      }
    }
  ]]></function>
  <function name="deathByKnight">
    Knight.parent.inRoom = " "
    MoveObject (Knight, player.parent)
    MoveObject (player, STORAGE)
    player.playerDeath = "You feel a cold steel stab through your entrails. You look down at your stomach only to see a familiar blade sticking out as red oozes down your stomach. You fall to your knees as a thick darkness swarms around you…"
  </function>
  <function name="setupPawn">
    LockExit (A7south)
    LockExit (A7north)
    LockExit (A7northeast)
    LockExit (A7southeast)
    LockExit (B7south)
    LockExit (B7north)
    LockExit (B7northwest)
    LockExit (B7northeast)
    LockExit (B7southwest)
    LockExit (B7southeast)
    LockExit (C7south)
    LockExit (C7north)
    LockExit (C7northwest)
    LockExit (C7northeast)
    LockExit (C7southwest)
    LockExit (C7southeast)
    LockExit (D7south)
    LockExit (D7north)
    LockExit (D7northwest)
    LockExit (D7northeast)
    LockExit (D7southwest)
    LockExit (D7southeast)
    LockExit (E7south)
    LockExit (E7north)
    LockExit (E7northwest)
    LockExit (E7northeast)
    LockExit (E7southwest)
    LockExit (E7southeast)
    LockExit (F7south)
    LockExit (F7north)
    LockExit (F7northwest)
    LockExit (F7northeast)
    LockExit (F7southwest)
    LockExit (F7southeast)
    LockExit (G7south)
    LockExit (G7north)
    LockExit (G7northwest)
    LockExit (G7northeast)
    LockExit (G7southwest)
    LockExit (G7southeast)
    LockExit (H6northwest)
    LockExit (H7northwest)
    LockExit (H7southwest)
    LockExit (H8west)
    LockExit (H8southwest)
    set (A7, "southWall", 1)
    set (A7, "northWall", 1)
    set (B7, "southWall", 1)
    set (B7, "northWall", 1)
    set (C7, "southWall", 1)
    set (C7, "northWall", 1)
    set (D7, "southWall", 1)
    set (D7, "northWall", 1)
    set (E7, "southWall", 1)
    set (E7, "northWall", 1)
    set (F7, "southWall", 1)
    set (F7, "northWall", 1)
    set (G7, "southWall", 1)
    set (G7, "northWall", 1)
    set (H8, "westWall", 1)
    MoveObject (player, A7)
    MoveObject (King, F6)
    King.position = "F6"
    MoveObject (Pawn, G6)
    Pawn.position = "G6"
    MoveObject (Chessboard, B7)
    MoveObject (Goal, H8)
    DisableTurnScript (KingOnTurn)
    msg ("")
    msg ("You stumble to your feet, trying to regain your composure.")
    msg ("Did you just go through a mirror?")
    msg ("You look around and, to your surprise, you find that the mirror has completely disappeared.")
    msg ("Well. Looks like you’re not going back that way.")
    msg ("")
    msg ("You take a better look around at your surroundings.")
    msg ("It seems as if you’re still in the maze… You recognize the same walls, the same surroundings…")
    msg ("Only - you jump in surprise - how didn’t you realize this before?")
    msg ("Somehow, you’re standing on… The sky?")
    msg ("The floor and everything on the ground is blue with moving cloud patterns while - yup - the ceiling is a grassy green.")
  </function>
  <function name="moveKing"><![CDATA[
    if ((player.parent = King.parent) and (player.parent <> STORAGE)) {
      deathByKing
    }
    if ((player.parent = H8) and (King.parent = H7)) {
      MoveObject (King, H8)
      H7.inRoom = " "
    }
    else {
      if (King.parent = F6) {
        MoveObject (King, G6)
        F6.inRoom = " "
      }
      else if (King.parent = G6) {
        MoveObject (King, H6)
        G6.inRoom = " "
      }
      else if (King.parent = H6) {
        MoveObject (King, H7)
        H6.inRoom = " "
      }
      else if (King.parent = H7) {
        MoveObject (King, G7)
        H7.inRoom = " "
      }
      else if (King.parent = G7) {
        MoveObject (King, F7)
        G7.inRoom = " "
      }
      else if (King.parent = F7) {
        MoveObject (King, E7)
        F7.inRoom = " "
      }
      else if (King.parent = E7) {
        MoveObject (King, D7)
        E7.inRoom = " "
      }
      else if (King.parent = D7) {
        MoveObject (King, C7)
        D7.inRoom = " "
      }
      else if (King.parent = C7) {
        MoveObject (King, B7)
        C7.inRoom = " "
      }
      else if (King.parent = B7) {
        MoveObject (King, A7)
        B7.inRoom = " "
      }
    }
    if (Pawn.parent = King.parent) {
      MoveObject (Pawn, STORAGE)
      Pawn.position = "STORAGE"
    }
    if ((player.parent = King.parent) and (player.parent <> STORAGE)) {
      deathByKing
    }
  ]]></function>
  <function name="deathByKing">
    King.parent.inRoom = " "
    MoveObject (King, player.parent)
    MoveObject (player, STORAGE)
    player.playerDeath = "You watch, paralyzed with fear, as the statue moves. The thing which had previously been motionless has instead been following you all along. You barely have time to ponder this before you feel the rough stony hands wrap around your eyes and mouth…"
  </function>
  <function name="setupPreBishop">
    msg ("TODO enemies and their paths")
    MoveObject (player, H1)
    MoveObject (Goal, A8)
    MoveObject (Rook, H5)
    MoveObject (Knight, H4)
    LockExit (A8southeast)
    LockExit (B8southwest)
    LockExit (B8south)
    LockExit (B8southeast)
    LockExit (C8southwest)
    LockExit (C7northwest)
    LockExit (B7northeast)
    LockExit (B7north)
    LockExit (B7northwest)
    LockExit (A7northeast)
    LockExit (A7southeast)
    LockExit (B7southwest)
    LockExit (B6northwest)
    LockExit (B6west)
    LockExit (B6southwest)
    LockExit (B5northwest)
    LockExit (A5northeast)
    LockExit (A6southeast)
    LockExit (A6east)
    LockExit (A6northeast)
    LockExit (A5south)
    LockExit (A5southeast)
    LockExit (B5southwest)
    LockExit (B5south)
    LockExit (B5southeast)
    LockExit (C5southwest)
    LockExit (C4northwest)
    LockExit (C4west)
    LockExit (C4southwest)
    LockExit (C3northwest)
    LockExit (B3northeast)
    LockExit (B4southeast)
    LockExit (B4east)
    LockExit (B4northeast)
    LockExit (B4north)
    LockExit (B4northwest)
    LockExit (A4northeast)
    LockExit (A4north)
    LockExit (A4southeast)
    LockExit (B4southwest)
    LockExit (B3northwest)
    LockExit (B3west)
    LockExit (B3southwest)
    LockExit (B2northwest)
    LockExit (B2west)
    LockExit (B2southwest)
    LockExit (B1northwest)
    LockExit (A1northeast)
    LockExit (A2southeast)
    LockExit (A2east)
    LockExit (A2northeast)
    LockExit (A3southeast)
    LockExit (A3east)
    LockExit (A3northeast)
    LockExit (B1east)
    LockExit (B1northeast)
    LockExit (B2southeast)
    LockExit (B2east)
    LockExit (B2northeast)
    LockExit (B3southeast)
    LockExit (C3southwest)
    LockExit (C2northwest)
    LockExit (C2west)
    LockExit (C2southwest)
    LockExit (C1northwest)
    LockExit (C1west)
    LockExit (D1northeast)
    LockExit (D1north)
    LockExit (D1northwest)
    LockExit (C1northeast)
    LockExit (C2southeast)
    LockExit (C2east)
    LockExit (C2northeast)
    LockExit (C3southeast)
    LockExit (D3southwest)
    LockExit (D2northwest)
    LockExit (D2west)
    LockExit (D2southwest)
    LockExit (D2south)
    LockExit (D2southeast)
    LockExit (E2southwest)
    LockExit (E1northwest)
    LockExit (C3northeast)
    LockExit (C4southeast)
    LockExit (C4east)
    LockExit (C4northeast)
    LockExit (C5southeast)
    LockExit (D5southwest)
    LockExit (D5south)
    LockExit (D5southeast)
    LockExit (E5southwest)
    LockExit (E4northwest)
    LockExit (E4west)
    LockExit (E4southwest)
    LockExit (E3northwest)
    LockExit (D3northeast)
    LockExit (D3north)
    LockExit (D3northwest)
    LockExit (B5northeast)
    LockExit (C5northwest)
    LockExit (C5north)
    LockExit (C5northeast)
    LockExit (D5northwest)
    LockExit (D5north)
    LockExit (D5northeast)
    LockExit (E5northwest)
    LockExit (E6southwest)
    LockExit (D6southeast)
    LockExit (D6south)
    LockExit (D6southwest)
    LockExit (C6southeast)
    LockExit (C6south)
    LockExit (C6southwest)
    LockExit (B6southeast)
    LockExit (B6northeast)
    LockExit (C6northwest)
    LockExit (C6north)
    LockExit (C6northeast)
    LockExit (D6northwest)
    LockExit (D6north)
    LockExit (D6northeast)
    LockExit (E6northwest)
    LockExit (E7southwest)
    LockExit (D7southeast)
    LockExit (D7south)
    LockExit (D7southwest)
    LockExit (C7southeast)
    LockExit (C7south)
    LockExit (C7southwest)
    LockExit (B7southeast)
    LockExit (D8east)
    LockExit (D8southeast)
    LockExit (D7northeast)
    LockExit (E7northwest)
    LockExit (E8southwest)
    LockExit (E8west)
    LockExit (F8east)
    LockExit (F8southeast)
    LockExit (F7northeast)
    LockExit (G7northwest)
    LockExit (G8southwest)
    LockExit (G8west)
    LockExit (G8east)
    LockExit (G8southeast)
    LockExit (G7northeast)
    LockExit (H7northwest)
    LockExit (H8southwest)
    LockExit (H8west)
    LockExit (E5northeast)
    LockExit (E6southeast)
    LockExit (E6east)
    LockExit (E6northeast)
    LockExit (E7southeast)
    LockExit (F7southwest)
    LockExit (F7south)
    LockExit (F7southeast)
    LockExit (G7southwest)
    LockExit (G6northwest)
    LockExit (F6northeast)
    LockExit (F6north)
    LockExit (F6northwest)
    LockExit (F6west)
    LockExit (F6southwest)
    LockExit (F5northwest)
    LockExit (F5northeast)
    LockExit (F6southeast)
    LockExit (G6southwest)
    LockExit (G6south)
    LockExit (G6southeast)
    LockExit (G6east)
    LockExit (G6northeast)
    LockExit (G7southeast)
    LockExit (H7southwest)
    LockExit (H6northwest)
    LockExit (H6west)
    LockExit (H6southwest)
    LockExit (H5northwest)
    LockExit (G5northeast)
    LockExit (G5north)
    LockExit (G5northeast)
    LockExit (F5southeast)
    LockExit (G5southwest)
    LockExit (G5south)
    LockExit (G5southeast)
    LockExit (H5southwest)
    LockExit (H4northwest)
    LockExit (G4northeast)
    LockExit (G4north)
    LockExit (G4northwest)
    LockExit (F4northeast)
    LockExit (E3southeast)
    LockExit (F3southwest)
    LockExit (F3south)
    LockExit (F3southeast)
    LockExit (G3southwest)
    LockExit (G2northwest)
    LockExit (F2northeast)
    LockExit (F2north)
    LockExit (F2northwest)
    LockExit (E2northeast)
    LockExit (E2southeast)
    LockExit (F2southwest)
    LockExit (F2south)
    LockExit (F2southeast)
    LockExit (G2southwest)
    LockExit (G1northwest)
    LockExit (F1northeast)
    LockExit (F1north)
    LockExit (F1northwest)
    LockExit (E1northeast)
    LockExit (H1north)
    LockExit (H1northwest)
    LockExit (G1northeast)
    LockExit (G2southeast)
    LockExit (G2east)
    LockExit (G2northeast)
    LockExit (G3southeast)
    LockExit (G3east)
    LockExit (G3northeast)
    LockExit (G3north)
    LockExit (G3northwest)
    LockExit (F3northeast)
    LockExit (F3north)
    LockExit (F3northwest)
    LockExit (E3northeast)
    LockExit (E4southeast)
    LockExit (E4east)
    LockExit (E4northeast)
    LockExit (E5southeast)
    LockExit (F5southwest)
    LockExit (F4northwest)
    LockExit (F4west)
    LockExit (F4southwest)
    LockExit (F4south)
    LockExit (F4southeast)
    LockExit (G4southwest)
    LockExit (G4south)
    LockExit (G4southeast)
    LockExit (H4southwest)
    LockExit (H3northwest)
    LockExit (H3west)
    LockExit (H3southwest)
    LockExit (H2northwest)
    LockExit (H2west)
    LockExit (H2southwest)
    LockExit (H2south)
    // descWalls
    foreach (exit, AllExits()) {
      if ((exit.locked) and (exit.parent = player.parent)) {
        if ((exit.alias = "north") or (exit.alias = "south") or(exit.alias = "east") or(exit.alias = "west")) {
          msg ("There is a wall to the "+exit.alias)
        }
      }
    }
    EnableTurnScript (PreBishopOnTurn)
  </function>
  <function name="mirrorEntered"><![CDATA[
    // RabbitHole -> Pawn -> Rook -> Knight -> Bishop -> Queen
    if (game.level = "RabbitHole") {
      msg ("You raise a hand tentatively expecting a smooth, flat, surface. ")
      msg ("Instead - it goes right through.")
      msg ("Before you get the chance to think or do anything about it, you find yourself tumbling through the looking glass. ")
      msg ("")
      game.level = "Pawn"
      takedownMap
      setupPawn
    }
    else if (game.level = "Pawn") {
      game.level = "PreRook"
      msg ("You eagerly run towards the mirror with no hesitations this time running straight through the frame.")
      msg ("The same feeling of disorientation and slight nausea rushes through you as you leave the strange, upside down, world behind you.")
      msg ("")
      DisableTurnScript (KingOnTurn)
      takedownMap
      setupPreRook
    }
    else if (game.level = "PreRook") {
      game.level = "Rook"
      msg ("You take a tentative step into its depths. ")
      msg ("")
      takedownMap
      setupRook
    }
    else if (game.level = "Rook") {
      game.level = "PreKnight"
      msg ("You take a confident step inside its unworldly contents. ")
      msg ("")
      takedownMap
      setupPreKnight
    }
    else if (game.level = "PreKnight") {
      game.level = "Knight"
      msg ("You take a lazy step inside - you’ve pretty much got the hang of this now. ")
      msg ("")
      takedownMap
      setupKnight
    }
    else if (game.level = "Knight") {
      game.level = "PreBishop"
      takedownMap
      setupPreBishop
    }
    else if (game.level = "PreBishop") {
      game.level = "Bishop"
      takedownMap
      setupBishop
    }
    else if (game.level = "Bishop") {
      if ((Goal.parent = BishopFinish.parent) and (player.parent <> STORAGE)) {
        msg ("Nothing happens, you can't seem to get in yet. ")
      }
      else {
        game.level = "PreQueen"
        takedownMap
        setupPreQueen
      }
    }
    else if (game.level = "PreQueen") {
      game.level = "Queen"
      takedownMap
      setupQueen
    }
    else if (game.level = "Queen") {
      // this should eventually be deleted. There is no mirror in Queen
      finish
    }
  ]]></function>
  <function name="setupBishop">
    MoveObject (player, B1)
    MoveObject (Goal, H6)
    MoveObject (Lever, B3)
    MoveObject (Bishop, A1)
    LockExit (F8east)
    LockExit (F8southeast)
    LockExit (F7northeast)
    LockExit (F7east)
    LockExit (F7southeast)
    LockExit (F6northeast)
    LockExit (F6east)
    LockExit (F6southeast)
    LockExit (F5northeast)
    LockExit (F5east)
    LockExit (F5southeast)
    LockExit (F5south)
    LockExit (F5southwest)
    LockExit (E5southeast)
    LockExit (E4northeast)
    LockExit (E4east)
    LockExit (E4southeast)
    LockExit (E3northeast)
    LockExit (F3northwest)
    LockExit (F3north)
    LockExit (F3northeast)
    LockExit (G3northwest)
    LockExit (G4southwest)
    LockExit (G4west)
    LockExit (G4northwest)
    LockExit (G5southwest)
    LockExit (G5west)
    LockExit (G5northwest)
    LockExit (G5north)
    LockExit (G5northeast)
    LockExit (H5northwest)
    LockExit (H6southwest)
    LockExit (H6west)
    LockExit (H6northwest)
    LockExit (H6north)
    LockExit (E1west)
    LockExit (E1northwest)
    LockExit (E2southwest)
    LockExit (E2west)
    LockExit (E2northwest)
    LockExit (E3southwest)
    LockExit (E3west)
    LockExit (E3northwest)
    LockExit (E4southwest)
    LockExit (E4west)
    LockExit (E4northwest)
    LockExit (E5southwest)
    LockExit (D5southeast)
    LockExit (D5south)
    LockExit (D5southwest)
    LockExit (C5southeast)
    LockExit (C5south)
    LockExit (C5southwest)
    LockExit (B5southeast)
    LockExit (B4northeast)
    LockExit (B4east)
    LockExit (B4southeast)
    LockExit (B3northeast)
    LockExit (C3northwest)
    LockExit (C3north)
    LockExit (C3northeast)
    LockExit (D3northwest)
    LockExit (D3north)
    LockExit (D3northeast)
    LockExit (D3east)
    LockExit (D3southeast)
    LockExit (D2northeast)
    LockExit (D2east)
    LockExit (D2southeast)
    LockExit (D1northeast)
    LockExit (D1east)
    LockExit (A3north)
    LockExit (A3northeast)
    LockExit (B3northwest)
    LockExit (B4southwest)
    LockExit (B4west)
    LockExit (B4northwest)
    LockExit (B5southwest)
    LockExit (A5southeast)
    LockExit (A5south)
    // special walls
    LockExit (A3northeast)
    LockExit (B3northwest)
    LockExit (B3north)
    LockExit (B3northeast)
    LockExit (C3northwest)
    LockExit (D5southeast)
    LockExit (E5southwest)
    LockExit (E5south)
    LockExit (E5southeast)
    LockExit (F5southwest)
    LockExit (G5northeast)
    LockExit (H5northwest)
    LockExit (H5north)
    // descWalls
    foreach (exit, AllExits()) {
      if ((exit.locked) and (exit.parent = player.parent)) {
        if ((exit.alias = "north") or (exit.alias = "south") or(exit.alias = "east") or(exit.alias = "west")) {
          msg ("There is a wall to the "+exit.alias)
        }
      }
    }
    EnableTurnScript (BishopOnTurn)
  </function>
  <function name="takedownMap"><![CDATA[
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x")) {
        room.inRoom = " "
      }
    }
    player.turn = 0
    foreach (exit, AllExits()) {
      UnlockExit (exit)
      exit.lockmessage = "You encounter a brambly wall blocking your path."
    }
    if (HasAttribute(King.parent, "inRoom")) {
      King.parent.inRoom = " "
      MoveObject (King, STORAGE)
      King.position = "STORAGE"
      DisableTurnScript (KingOnTurn)
    }
    if (HasAttribute(Pawn.parent, "inRoom")) {
      Pawn.parent.inRoom = " "
      MoveObject (Pawn, STORAGE)
      Pawn.position = "STORAGE"
    }
    if (HasAttribute(Knight.parent, "inRoom")) {
      Knight.parent.inRoom = " "
      MoveObject (Knight, STORAGE)
      Knight.position = "STORAGE"
      DisableTurnScript (KnightOnTurn)
    }
    if (HasAttribute(Bishop.parent, "inRoom")) {
      Bishop.parent.inRoom = " "
      MoveObject (Bishop, STORAGE)
      Bishop.position = "STORAGE"
      DisableTurnScript (BishopOnTurn)
    }
    if (HasAttribute(Queen.parent, "inRoom")) {
      Queen.parent.inRoom = " "
      MoveObject (Queen, STORAGE)
      Queen.position = "STORAGE"
      DisableTurnScript (QueenOnTurn)
    }
    if (HasAttribute(Rook.parent, "inRoom")) {
      Rook.parent.inRoom = " "
      MoveObject (Rook, STORAGE)
      Rook.position = "STORAGE"
      DisableTurnScript (RookOnTurn)
    }
    if (HasAttribute(Goal.parent, "inRoom")) {
      Goal.parent.inRoom = " "
      MoveObject (Goal, STORAGE)
      Goal.position = "STORAGE"
    }
    if (HasAttribute(player.parent, "inRoom")) {
      player.parent.inRoom = " "
      MoveObject (player, STORAGE)
    }
    if (Chessboard.parent <> player) {
      MoveObject (Chessboard, STORAGE)
    }
    DisableTurnScript (PreBishopOnTurn)
    DisableTurnScript (PreKnightOnTurn)
  ]]></function>
  <function name="setupRabbitHole">
    LockExit (E8west)
    LockExit (E8east)
    LockExit (E8southeast)
    LockExit (E8southwest)
    LockExit (E7west)
    LockExit (E7east)
    LockExit (E7southeast)
    LockExit (E7southwest)
    LockExit (E7northeast)
    LockExit (E7northwest)
    LockExit (E6west)
    LockExit (E6east)
    LockExit (E6southeast)
    LockExit (E6southwest)
    LockExit (E6northeast)
    LockExit (E6northwest)
    LockExit (E5west)
    LockExit (E5east)
    LockExit (E5southeast)
    LockExit (E5southwest)
    LockExit (E5northeast)
    LockExit (E5northwest)
    LockExit (E4west)
    LockExit (E4east)
    LockExit (E4southeast)
    LockExit (E4southwest)
    LockExit (E4northeast)
    LockExit (E4northwest)
    LockExit (E3west)
    LockExit (E3east)
    LockExit (E3southeast)
    LockExit (E3southwest)
    LockExit (E3northeast)
    LockExit (E3northwest)
    LockExit (E2west)
    LockExit (E2east)
    LockExit (E2southeast)
    LockExit (E2southwest)
    LockExit (E2northeast)
    LockExit (E2northwest)
    LockExit (E1east)
    LockExit (E1northeast)
    LockExit (E1northwest)
    LockExit (D1west)
    LockExit (D1north)
    LockExit (D1northwest)
    LockExit (D1northeast)
    MoveObject (player, E8)
    MoveObject (Goal, D1)
  </function>
  <function name="setupRook">
    msg ("TODO enemies and their paths")
    MoveObject (player, A7)
    MoveObject (Goal, A2)
    MoveObject (Key, H1)
    LockExit (A8south)
    LockExit (A8southeast)
    LockExit (B8southwest)
    LockExit (B8south)
    LockExit (B8southeast)
    LockExit (B8east)
    LockExit (C8west)
    LockExit (C8southwest)
    LockExit (C7northwest)
    LockExit (B7northeast)
    LockExit (B7north)
    LockExit (B7northwest)
    LockExit (A7northeast)
    LockExit (A7north)
    LockExit (C8east)
    LockExit (C8southeast)
    LockExit (C7northeast)
    LockExit (D7northwest)
    LockExit (D7north)
    LockExit (D7northeast)
    LockExit (E7northwest)
    LockExit (E7north)
    LockExit (E7northeast)
    LockExit (F7northwest)
    LockExit (F7north)
    LockExit (F7northeast)
    LockExit (G7northwest)
    LockExit (G8southwest)
    LockExit (F8southeast)
    LockExit (F8south)
    LockExit (F8southwest)
    LockExit (E8southeast)
    LockExit (E8south)
    LockExit (E8southwest)
    LockExit (D8southeast)
    LockExit (D8south)
    LockExit (D8southwest)
    LockExit (D8west)
    LockExit (H8south)
    LockExit (H8southwest)
    LockExit (G8southeast)
    LockExit (G7northeast)
    LockExit (H7northwest)
    LockExit (H7north)
    LockExit (A7south)
    LockExit (A7southeast)
    LockExit (B7southwest)
    LockExit (B7south)
    LockExit (B7southeast)
    LockExit (C7southwest)
    LockExit (C7south)
    LockExit (C7southeast)
    LockExit (D7southwest)
    LockExit (D6northwest)
    LockExit (D6west)
    LockExit (D6southwest)
    LockExit (D6south)
    LockExit (D6southeast)
    LockExit (E6southwest)
    LockExit (E5northwest)
    LockExit (D5northeast)
    LockExit (D5north)
    LockExit (D5northwest)
    LockExit (C5northeast)
    LockExit (C5north)
    LockExit (C5northwest)
    LockExit (B5northeast)
    LockExit (B5north)
    LockExit (B5northwest)
    LockExit (A5northeast)
    LockExit (A5north)
    LockExit (D7southeast)
    LockExit (E7southwest)
    LockExit (E7south)
    LockExit (E7southeast)
    LockExit (F7southwest)
    LockExit (F7south)
    LockExit (F7southeast)
    LockExit (G7southwest)
    LockExit (G6northwest)
    LockExit (G6west)
    LockExit (G6southwest)
    LockExit (G5northwest)
    LockExit (F5northeast)
    LockExit (F5north)
    LockExit (F5northwest)
    LockExit (E5northeast)
    LockExit (E6southeast)
    LockExit (E6east)
    LockExit (E6northeast)
    LockExit (E6north)
    LockExit (E6northwest)
    LockExit (D6northeast)
    LockExit (H7south)
    LockExit (H7southwest)
    LockExit (G7southeast)
    LockExit (G6northeast)
    LockExit (G6east)
    LockExit (G6southeast)
    LockExit (G5northeast)
    LockExit (H5northwest)
    LockExit (H5north)
    LockExit (A5southeast)
    LockExit (B5southwest)
    LockExit (B5south)
    LockExit (B5southeast)
    LockExit (C5southwest)
    LockExit (C5south)
    LockExit (C5southeast)
    LockExit (D5southwest)
    LockExit (D5south)
    LockExit (D5southeast)
    LockExit (E5southwest)
    LockExit (E4northwest)
    LockExit (D4northeast)
    LockExit (D4north)
    LockExit (D4northwest)
    LockExit (C4northeast)
    LockExit (C4north)
    LockExit (C4northwest)
    LockExit (B4northeast)
    LockExit (B4north)
    LockExit (B4northwest)
    LockExit (A4northeast)
    LockExit (E5southwest)
    LockExit (F5southeast)
    LockExit (F5south)
    LockExit (F5southwest)
    LockExit (G5southeast)
    LockExit (G5south)
    LockExit (G5southwest)
    LockExit (H5southwest)
    LockExit (H4northwest)
    LockExit (G4northeast)
    LockExit (G4north)
    LockExit (G4northwest)
    LockExit (F4northeast)
    LockExit (F4north)
    LockExit (F4northwest)
    LockExit (E4northeast)
    LockExit (A4southeast)
    LockExit (B4southwest)
    LockExit (B4south)
    LockExit (B4southeast)
    LockExit (C4southwest)
    LockExit (C4south)
    LockExit (C4southeast)
    LockExit (D4southwest)
    LockExit (D4south)
    LockExit (D4southeast)
    LockExit (E4southwest)
    LockExit (E4south)
    LockExit (E4southeast)
    LockExit (F4southwest)
    LockExit (F4south)
    LockExit (F4southeast)
    LockExit (G4southwest)
    LockExit (G4south)
    LockExit (G4southeast)
    LockExit (H4southwest)
    LockExit (H3northwest)
    LockExit (G3northeast)
    LockExit (G3north)
    LockExit (G3northwest)
    LockExit (F3northeast)
    LockExit (F3north)
    LockExit (F3northwest)
    LockExit (E3northeast)
    LockExit (E3north)
    LockExit (E3northwest)
    LockExit (E3west)
    LockExit (E3southwest)
    LockExit (E2northwest)
    LockExit (D2northeast)
    LockExit (D2north)
    LockExit (D2northwest)
    LockExit (C2northeast)
    LockExit (C3southeast)
    LockExit (C3east)
    LockExit (C3northeast)
    LockExit (C3north)
    LockExit (C3northwest)
    LockExit (B3northeast)
    LockExit (B3north)
    LockExit (B3northwest)
    LockExit (A3northeast)
    LockExit (A3south)
    LockExit (A3southeast)
    LockExit (B3southwest)
    LockExit (B3south)
    LockExit (B3southeast)
    LockExit (C3southwest)
    LockExit (C2northwest)
    LockExit (B2northeast)
    LockExit (B2north)
    LockExit (B2northwest)
    LockExit (A2northeast)
    LockExit (A2north)
    LockExit (A2south)
    LockExit (A2southeast)
    LockExit (B2southwest)
    LockExit (B2south)
    LockExit (B2southeast)
    LockExit (C2southwest)
    LockExit (C1northwest)
    LockExit (C1west)
    LockExit (C1east)
    LockExit (C1northeast)
    LockExit (C2southeast)
    LockExit (D2southwest)
    LockExit (D2south)
    LockExit (D2southeast)
    LockExit (E2southwest)
    LockExit (E1west)
    LockExit (E1east)
    LockExit (E1northeast)
    LockExit (E2southeast)
    LockExit (E2east)
    LockExit (E2northeast)
    LockExit (E3southeast)
    LockExit (F3southwest)
    LockExit (F3south)
    LockExit (F3southeast)
    LockExit (G3southwest)
    LockExit (G2northwest)
    LockExit (G2west)
    LockExit (G2southwest)
    LockExit (G1northwest)
    LockExit (G1west)
    LockExit (G1east)
    LockExit (G1northeast)
    LockExit (G2southeast)
    LockExit (H2southwest)
    LockExit (H1northwest)
    LockExit (H1west)
    // special wall
    LockExit (A2east)
    LockExit (B2west)
    // descWalls
    foreach (exit, AllExits()) {
      if ((exit.locked) and (exit.parent = player.parent)) {
        if ((exit.alias = "north") or (exit.alias = "south") or(exit.alias = "east") or(exit.alias = "west")) {
          msg ("There is a wall to the "+exit.alias)
        }
      }
    }
  </function>
  <function name="setupPreRook">
    msg ("TODO enemies and their paths")
    MoveObject (player, E1)
    MoveObject (Goal, A5)
    LockExit (A8south)
    LockExit (A8southeast)
    LockExit (B8southwest)
    LockExit (B7west)
    LockExit (B7northwest)
    LockExit (B6west)
    LockExit (B6southwest)
    LockExit (B5northwest)
    LockExit (A5north)
    LockExit (A5northeast)
    LockExit (A5southeast)
    LockExit (A5south)
    LockExit (B5southwest)
    LockExit (B4west)
    LockExit (B4northwest)
    LockExit (B3west)
    LockExit (B3southwest)
    LockExit (B2northwest)
    LockExit (A2north)
    LockExit (A2south)
    LockExit (A2northeast)
    LockExit (A2southeast)
    LockExit (B2southwest)
    LockExit (B1west)
    LockExit (B1northwest)
    LockExit (B7southwest)
    LockExit (B6northwest)
    LockExit (B4southwest)
    LockExit (B3northwest)
    LockExit (B8east)
    LockExit (B8southeast)
    LockExit (B7northeast)
    LockExit (C7northwest)
    LockExit (C7north)
    LockExit (C7northeast)
    LockExit (D7northwest)
    LockExit (D7north)
    LockExit (D7northeast)
    LockExit (E7northwest)
    LockExit (E8southwest)
    LockExit (E8west)
    LockExit (B7southeast)
    LockExit (C7south)
    LockExit (C7southeast)
    LockExit (C7southwest)
    LockExit (D7southwest)
    LockExit (D7south)
    LockExit (D7southeast)
    LockExit (E7southwest)
    LockExit (E6northwest)
    LockExit (E6west)
    LockExit (E6southwest)
    LockExit (E5northwest)
    LockExit (D5northeast)
    LockExit (D5north)
    LockExit (D5northwest)
    LockExit (C5northeast)
    LockExit (C5north)
    LockExit (C5northwest)
    LockExit (B5northeast)
    LockExit (B6southeast)
    LockExit (B5southeast)
    LockExit (C5southwest)
    LockExit (C5south)
    LockExit (C5southeast)
    LockExit (D5southwest)
    LockExit (D5south)
    LockExit (D5southeast)
    LockExit (E5southwest)
    LockExit (E4northwest)
    LockExit (E4west)
    LockExit (E4southwest)
    LockExit (E3northwest)
    LockExit (D3northeast)
    LockExit (D3north)
    LockExit (D3northwest)
    LockExit (C3northeast)
    LockExit (C3north)
    LockExit (C3northwest)
    LockExit (B3northeast)
    LockExit (B4southeast)
    LockExit (B4east)
    LockExit (B4northeast)
    LockExit (B1east)
    LockExit (B1northeast)
    LockExit (B2southeast)
    LockExit (B2east)
    LockExit (B2northeast)
    LockExit (B3southeast)
    LockExit (C3southwest)
    LockExit (C3south)
    LockExit (C3southeast)
    LockExit (D3southwest)
    LockExit (D3south)
    LockExit (D3southeast)
    LockExit (E3southwest)
    LockExit (E2northwest)
    LockExit (E2west)
    LockExit (E2southwest)
    LockExit (E1northwest)
    LockExit (E1west)
    LockExit (E1east)
    LockExit (E1northeast)
    LockExit (E2southeast)
    LockExit (E2east)
    LockExit (E2northeast)
    LockExit (E3southeast)
    LockExit (F3southwest)
    LockExit (F3south)
    LockExit (F3southeast)
    LockExit (G3southwest)
    LockExit (G2northwest)
    LockExit (G2west)
    LockExit (G2southwest)
    LockExit (G1northwest)
    LockExit (G1west)
    LockExit (H1north)
    LockExit (H1northwest)
    LockExit (G1northeast)
    LockExit (G2southeast)
    LockExit (G2east)
    LockExit (G2northeast)
    LockExit (G3southeast)
    LockExit (G3east)
    LockExit (G3northeast)
    LockExit (G3north)
    LockExit (G3northwest)
    LockExit (F3northeast)
    LockExit (F3north)
    LockExit (F3northwest)
    LockExit (E3northeast)
    LockExit (E4southeast)
    LockExit (E4east)
    LockExit (E4northeast)
    LockExit (E5southeast)
    LockExit (F5southwest)
    LockExit (F5south)
    LockExit (F5southeast)
    LockExit (G5southwest)
    LockExit (G5south)
    LockExit (G5southeast)
    LockExit (H5southwest)
    LockExit (H4northwest)
    LockExit (H4west)
    LockExit (H4southwest)
    LockExit (H4south)
    LockExit (H5northwest)
    LockExit (G5northeast)
    LockExit (G5north)
    LockExit (G5northwest)
    LockExit (F5northeast)
    LockExit (F5north)
    LockExit (F5northwest)
    LockExit (E5northeast)
    LockExit (E6southeast)
    LockExit (E6east)
    LockExit (E6northeast)
    LockExit (E7southeast)
    LockExit (F7southwest)
    LockExit (F7south)
    LockExit (F7southeast)
    LockExit (G7southwest)
    LockExit (G7south)
    LockExit (G7southeast)
    LockExit (H7southwest)
    LockExit (H6northwest)
    LockExit (H6west)
    LockExit (H6southwest)
    LockExit (E8east)
    LockExit (E8southeast)
    LockExit (E7northeast)
    LockExit (F7northwest)
    LockExit (F7north)
    LockExit (F7northeast)
    LockExit (G7northwest)
    LockExit (G7north)
    LockExit (G7northeast)
    LockExit (H7northwest)
    LockExit (H8southwest)
    LockExit (H8west)
    // descWalls
    foreach (exit, AllExits()) {
      if ((exit.locked) and (exit.parent = player.parent)) {
        if ((exit.alias = "north") or (exit.alias = "south") or(exit.alias = "east") or(exit.alias = "west")) {
          msg ("There is a wall to the "+exit.alias)
        }
      }
    }
  </function>
  <function name="setupKnight">
    msg ("TODO enemies and their paths")
    MoveObject (player, B1)
    MoveObject (Goal, D4)
    MoveObject (Knight, B3)
    MoveObject (Sword, B2)
    LockExit (C8east)
    LockExit (C8southeast)
    LockExit (C8south)
    LockExit (C8southwest)
    LockExit (B8southeast)
    LockExit (B8south)
    LockExit (B8southwest)
    LockExit (A8southeast)
    LockExit (A7northeast)
    LockExit (A7east)
    LockExit (A7southeast)
    LockExit (A6northeast)
    LockExit (B6northwest)
    LockExit (B6north)
    LockExit (B6northeast)
    LockExit (C6northwest)
    LockExit (C6north)
    LockExit (C6northeast)
    LockExit (C6east)
    LockExit (C6southeast)
    LockExit (C6south)
    LockExit (C6southwest)
    LockExit (B6southeast)
    LockExit (B6south)
    LockExit (B6southwest)
    LockExit (A6southeast)
    LockExit (A5northeast)
    LockExit (A5east)
    LockExit (A5southeast)
    LockExit (A4northeast)
    LockExit (A4east)
    LockExit (A4southeast)
    LockExit (A4south)
    LockExit (A3north)
    LockExit (A3northeast)
    LockExit (B3northwest)
    LockExit (B4southwest)
    LockExit (B4west)
    LockExit (B4northwest)
    LockExit (B5southwest)
    LockExit (B5west)
    LockExit (B5northwest)
    LockExit (B5north)
    LockExit (B5northeast)
    LockExit (C5northwest)
    LockExit (C5north)
    LockExit (C5northeast)
    LockExit (D5northwest)
    LockExit (D6southwest)
    LockExit (D6west)
    LockExit (D6northwest)
    LockExit (D6north)
    LockExit (D6northeast)
    LockExit (E6northwest)
    LockExit (E6north)
    LockExit (E6northeast)
    LockExit (F6northwest)
    LockExit (F6north)
    LockExit (F6northeast)
    LockExit (G6northwest)
    LockExit (G6north)
    LockExit (G6northeast)
    LockExit (G6east)
    LockExit (G6southeast)
    LockExit (G5northeast)
    LockExit (G5east)
    LockExit (G5southeast)
    LockExit (G4northeast)
    LockExit (G4east)
    LockExit (G4southeast)
    LockExit (G3northeast)
    LockExit (G3east)
    LockExit (G3southeast)
    LockExit (G2northeast)
    LockExit (G2east)
    LockExit (G2southeast)
    LockExit (G1northeast)
    LockExit (G1east)
    LockExit (C1west)
    LockExit (C1northwest)
    LockExit (C2southwest)
    LockExit (B2southeast)
    LockExit (B1northeast)
    LockExit (B1east)
    LockExit (B1west)
    LockExit (B1northwest)
    LockExit (B2southwest)
    LockExit (B2west)
    LockExit (B2northwest)
    LockExit (B3southwest)
    LockExit (A3southeast)
    LockExit (A3south)
    LockExit (B2northeast)
    LockExit (B3southeast)
    LockExit (B3east)
    LockExit (B3northeast)
    LockExit (B4southeast)
    LockExit (B4east)
    LockExit (B4northeast)
    LockExit (B5southeast)
    LockExit (C5southwest)
    LockExit (C4northwest)
    LockExit (C4west)
    LockExit (C4southwest)
    LockExit (C4south)
    LockExit (C4southeast)
    LockExit (D4southwest)
    LockExit (D4south)
    LockExit (D4southeast)
    LockExit (D4east)
    LockExit (D4northeast)
    LockExit (D4north)
    LockExit (D4northwest)
    LockExit (C4northeast)
    LockExit (C5southeast)
    LockExit (D5southwest)
    LockExit (D5south)
    LockExit (D5southeast)
    LockExit (E5southwest)
    LockExit (E4northwest)
    LockExit (E4west)
    LockExit (E4southwest)
    LockExit (E3northwest)
    LockExit (E3west)
    LockExit (E3southwest)
    LockExit (E2northwest)
    LockExit (D2northeast)
    LockExit (D2north)
    LockExit (D2northwest)
    LockExit (C2northeast)
    LockExit (C2north)
    LockExit (C2northwest)
    LockExit (C3west)
    LockExit (C3northwest)
    LockExit (C3north)
    LockExit (C3northeast)
    LockExit (C3southwest)
    LockExit (C3south)
    LockExit (C3southeast)
    LockExit (D3northwest)
    LockExit (D3north)
    LockExit (D3northeast)
    LockExit (D3east)
    LockExit (D3southeast)
    LockExit (D3south)
    LockExit (D3southwest)
    // descWalls
    foreach (exit, AllExits()) {
      if ((exit.locked) and (exit.parent = player.parent)) {
        if ((exit.alias = "north") or (exit.alias = "south") or(exit.alias = "east") or(exit.alias = "west")) {
          msg ("There is a wall to the "+exit.alias)
        }
      }
    }
  </function>
  <function name="setupPreKnight">
    msg ("TODO enemies and their paths")
    MoveObject (player, E1)
    MoveObject (Goal, H1)
    MoveObject (Rook, H5)
    LockExit (A8south)
    LockExit (A8southeast)
    LockExit (B8southwest)
    LockExit (B7west)
    LockExit (B7northwest)
    LockExit (B6west)
    LockExit (B6southwest)
    LockExit (B5northwest)
    LockExit (A5north)
    LockExit (A5northeast)
    LockExit (A5southeast)
    LockExit (A5south)
    LockExit (B5southwest)
    LockExit (B4west)
    LockExit (B4northwest)
    LockExit (B3west)
    LockExit (B3southwest)
    LockExit (B2northwest)
    LockExit (A2north)
    LockExit (A2south)
    LockExit (A2northeast)
    LockExit (A2southeast)
    LockExit (B2southwest)
    LockExit (B1west)
    LockExit (B1northwest)
    LockExit (B7southwest)
    LockExit (B6northwest)
    LockExit (B4southwest)
    LockExit (B3northwest)
    LockExit (B8east)
    LockExit (B8southeast)
    LockExit (B7northeast)
    LockExit (C7northwest)
    LockExit (C7north)
    LockExit (C7northeast)
    LockExit (D7northwest)
    LockExit (D7north)
    LockExit (D7northeast)
    LockExit (E7northwest)
    LockExit (E8southwest)
    LockExit (E8west)
    LockExit (B7southeast)
    LockExit (C7south)
    LockExit (C7southeast)
    LockExit (C7southwest)
    LockExit (D7southwest)
    LockExit (D7south)
    LockExit (D7southeast)
    LockExit (E7southwest)
    LockExit (E6northwest)
    LockExit (E6west)
    LockExit (E6southwest)
    LockExit (E5northwest)
    LockExit (D5northeast)
    LockExit (D5north)
    LockExit (D5northwest)
    LockExit (C5northeast)
    LockExit (C5north)
    LockExit (C5northwest)
    LockExit (B5northeast)
    LockExit (B6southeast)
    LockExit (B5southeast)
    LockExit (C5southwest)
    LockExit (C5south)
    LockExit (C5southeast)
    LockExit (D5southwest)
    LockExit (D5south)
    LockExit (D5southeast)
    LockExit (E5southwest)
    LockExit (E4northwest)
    LockExit (E4west)
    LockExit (E4southwest)
    LockExit (E3northwest)
    LockExit (D3northeast)
    LockExit (D3north)
    LockExit (D3northwest)
    LockExit (C3northeast)
    LockExit (C3north)
    LockExit (C3northwest)
    LockExit (B3northeast)
    LockExit (B4southeast)
    LockExit (B4east)
    LockExit (B4northeast)
    LockExit (B1east)
    LockExit (B1northeast)
    LockExit (B2southeast)
    LockExit (B2east)
    LockExit (B2northeast)
    LockExit (B3southeast)
    LockExit (C3southwest)
    LockExit (C3south)
    LockExit (C3southeast)
    LockExit (D3southwest)
    LockExit (D3south)
    LockExit (D3southeast)
    LockExit (E3southwest)
    LockExit (E2northwest)
    LockExit (E2west)
    LockExit (E2southwest)
    LockExit (E1northwest)
    LockExit (E1west)
    LockExit (E1east)
    LockExit (E1northeast)
    LockExit (E2southeast)
    LockExit (E2east)
    LockExit (E2northeast)
    LockExit (E3southeast)
    LockExit (F3southwest)
    LockExit (F3south)
    LockExit (F3southeast)
    LockExit (G3southwest)
    LockExit (G2northwest)
    LockExit (G2west)
    LockExit (G2southwest)
    LockExit (G1northwest)
    LockExit (G1west)
    LockExit (H1north)
    LockExit (H1northwest)
    LockExit (G1northeast)
    LockExit (G2southeast)
    LockExit (G2east)
    LockExit (G2northeast)
    LockExit (G3southeast)
    LockExit (G3east)
    LockExit (G3northeast)
    LockExit (G3north)
    LockExit (G3northwest)
    LockExit (F3northeast)
    LockExit (F3north)
    LockExit (F3northwest)
    LockExit (E3northeast)
    LockExit (E4southeast)
    LockExit (E4east)
    LockExit (E4northeast)
    LockExit (E5southeast)
    LockExit (F5southwest)
    LockExit (F5south)
    LockExit (F5southeast)
    LockExit (G5southwest)
    LockExit (G5south)
    LockExit (G5southeast)
    LockExit (H5southwest)
    LockExit (H4northwest)
    LockExit (H4west)
    LockExit (H4southwest)
    LockExit (H4south)
    LockExit (H5northwest)
    LockExit (G5northeast)
    LockExit (G5north)
    LockExit (G5northwest)
    LockExit (F5northeast)
    LockExit (F5north)
    LockExit (F5northwest)
    LockExit (E5northeast)
    LockExit (E6southeast)
    LockExit (E6east)
    LockExit (E6northeast)
    LockExit (E7southeast)
    LockExit (F7southwest)
    LockExit (F7south)
    LockExit (F7southeast)
    LockExit (G7southwest)
    LockExit (G7south)
    LockExit (G7southeast)
    LockExit (H7southwest)
    LockExit (H6northwest)
    LockExit (H6west)
    LockExit (H6southwest)
    LockExit (E8east)
    LockExit (E8southeast)
    LockExit (E7northeast)
    LockExit (F7northwest)
    LockExit (F7north)
    LockExit (F7northeast)
    LockExit (G7northwest)
    LockExit (G7north)
    LockExit (G7northeast)
    LockExit (H7northwest)
    LockExit (H8southwest)
    LockExit (H8west)
    // descWalls
    foreach (exit, AllExits()) {
      if ((exit.locked) and (exit.parent = player.parent)) {
        if ((exit.alias = "north") or (exit.alias = "south") or(exit.alias = "east") or(exit.alias = "west")) {
          msg ("There is a wall to the "+exit.alias)
        }
      }
    }
    EnableTurnScript (PreKnightOnTurn)
  </function>
  <function name="setupQueen">
    msg ("setupQueen to be implemented")
    MoveObject (player, A1)
    EnableTurnScript (playerQueenLevel)
  </function>
  <function name="changeUnicode"><![CDATA[
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x")) {
        room.onexit => {
          room.inRoom = " "
        }
      }
    }
  ]]></function>
  <function name="deathByBishop">
    Bishop.parent.inRoom = " "
    MoveObject (Bishop, player.parent)
    MoveObject (player, STORAGE)
    player.playerDeath = "A blink of an eye. And suddenly you’re lying on the ground, an open wound at your throat. Just what happened?"
  </function>
  <function name="deathByRook">
    Rook.parent.inRoom = " "
    MoveObject (Rook, player.parent)
    MoveObject (player, STORAGE)
    player.playerDeath = "The brambles of the maze dart out from all around you wrapping you in a deathly vice-grip. It’s only a matter of time."
  </function>
  <function name="setupPreQueen">
    msg ("TODO enemies and their paths")
    MoveObject (player, A8)
    MoveObject (Goal, E4)
    LockExit (A8south)
    LockExit (A8southeast)
    LockExit (B8southwest)
    LockExit (B8south)
    LockExit (B8southeast)
    LockExit (C8southwest)
    LockExit (C7northwest)
    LockExit (B7northeast)
    LockExit (B7north)
    LockExit (B7northwest)
    LockExit (A7northeast)
    LockExit (A7north)
    LockExit (C8east)
    LockExit (C8southeast)
    LockExit (C7northeast)
    LockExit (D7northwest)
    LockExit (D8southwest)
    LockExit (D8west)
    LockExit (C5northeast)
    LockExit (C6southeast)
    LockExit (C6east)
    LockExit (C6northeast)
    LockExit (C7southeast)
    LockExit (D7southwest)
    LockExit (D7south)
    LockExit (D7southeast)
    LockExit (E7southwest)
    LockExit (E7south)
    LockExit (E7southeast)
    LockExit (E7east)
    LockExit (E7northeast)
    LockExit (E8southeast)
    LockExit (F8southwest)
    LockExit (F7northwest)
    LockExit (F7west)
    LockExit (F7southwest)
    LockExit (F6northwest)
    LockExit (E6northeast)
    LockExit (E6north)
    LockExit (E6northwest)
    LockExit (D6northeast)
    LockExit (D6north)
    LockExit (D6northwest)
    LockExit (D6west)
    LockExit (D6southwest)
    LockExit (D5northwest)
    LockExit (G8east)
    LockExit (G8southeast)
    LockExit (G7northeast)
    LockExit (H7northwest)
    LockExit (H8southwest)
    LockExit (H8west)
    LockExit (A6south)
    LockExit (A6southeast)
    LockExit (B6southwest)
    LockExit (B5northwest)
    LockExit (A5northeast)
    LockExit (A5north)
    LockExit (B1northeast)
    LockExit (B2southeast)
    LockExit (C2southwest)
    LockExit (C2south)
    LockExit (C2southeast)
    LockExit (D2southwest)
    LockExit (D1northwest)
    LockExit (C1northeast)
    LockExit (C1north)
    LockExit (C1northwest)
    LockExit (A3northeast)
    LockExit (A4southeast)
    LockExit (A4east)
    LockExit (A4northeast)
    LockExit (A5southeast)
    LockExit (B5southwest)
    LockExit (B5south)
    LockExit (B5southeast)
    LockExit (C5southwest)
    LockExit (C4northwest)
    LockExit (B4northeast)
    LockExit (B4north)
    LockExit (B4northwest)
    LockExit (B4west)
    LockExit (B4southwest)
    LockExit (B4south)
    LockExit (B4southeast)
    LockExit (C4southwest)
    LockExit (C3northwest)
    LockExit (B3northeast)
    LockExit (B3north)
    LockExit (B3northwest)
    LockExit (F6southeast)
    LockExit (G6southwest)
    LockExit (G6south)
    LockExit (G6southeast)
    LockExit (H6southwest)
    LockExit (H5northwest)
    LockExit (H5west)
    LockExit (H5southwest)
    LockExit (H4northwest)
    LockExit (H4west)
    LockExit (H4southwest)
    LockExit (H3northwest)
    LockExit (H3west)
    LockExit (H3southwest)
    LockExit (H2northwest)
    LockExit (H2west)
    LockExit (H2southwest)
    LockExit (H1northwest)
    LockExit (G1northeast)
    LockExit (G1north)
    LockExit (G1northwest)
    LockExit (F1northeast)
    LockExit (F1north)
    LockExit (F1northwest)
    LockExit (E1northeast)
    LockExit (E2southeast)
    LockExit (F2southwest)
    LockExit (F2south)
    LockExit (F2southeast)
    LockExit (G2southwest)
    LockExit (G2south)
    LockExit (G2southeast)
    LockExit (G2east)
    LockExit (G2northeast)
    LockExit (G3southeast)
    LockExit (G3east)
    LockExit (G3northeast)
    LockExit (G4southeast)
    LockExit (G4east)
    LockExit (G4northeast)
    LockExit (G5southeast)
    LockExit (G5east)
    LockExit (G5northeast)
    LockExit (G5north)
    LockExit (G5northwest)
    LockExit (F5northeast)
    LockExit (D2northeast)
    LockExit (D3southeast)
    LockExit (D3east)
    LockExit (D3northeast)
    LockExit (D3north)
    LockExit (D3northwest)
    LockExit (C3northeast)
    LockExit (C4southeast)
    LockExit (C4east)
    LockExit (C4northeast)
    LockExit (C5southeast)
    LockExit (D5southwest)
    LockExit (D5south)
    LockExit (D5southeast)
    LockExit (D5east)
    LockExit (D5northeast)
    LockExit (D6southeast)
    LockExit (E6southwest)
    LockExit (E6south)
    LockExit (E6southeast)
    LockExit (F6southwest)
    LockExit (F5northwest)
    LockExit (F5west)
    LockExit (F5southwest)
    LockExit (F5south)
    LockExit (F5southeast)
    LockExit (G5southwest)
    LockExit (G4northwest)
    LockExit (G4west)
    LockExit (G4southwest)
    LockExit (G3northwest)
    LockExit (F3northeast)
    LockExit (F3north)
    LockExit (F3northwest)
    LockExit (F3west)
    LockExit (F3southwest)
    LockExit (F2northwest)
    LockExit (E2northeast)
    LockExit (E3southeast)
    LockExit (E3east)
    LockExit (E3northeast)
    LockExit (E4southeast)
    LockExit (F4southwest)
    LockExit (F4south)
    LockExit (F4southeast)
    LockExit (F4east)
    LockExit (F4northeast)
    LockExit (F4north)
    LockExit (F4northwest)
    LockExit (E4northeast)
    LockExit (E5southeast)
    LockExit (E5east)
    LockExit (E5northeast)
    LockExit (E5north)
    LockExit (E5northwest)
    LockExit (E5west)
    LockExit (E5southwest)
    LockExit (E4northwest)
    LockExit (D4northeast)
    LockExit (D4north)
    LockExit (D4northwest)
    LockExit (D4west)
    LockExit (D4southwest)
    LockExit (D4south)
    LockExit (D4southeast)
    LockExit (E4southwest)
    LockExit (E3northwest)
    LockExit (E3west)
    LockExit (E2northwest)
    // descWalls
    foreach (exit, AllExits()) {
      if ((exit.locked) and (exit.parent = player.parent)) {
        if ((exit.alias = "north") or (exit.alias = "south") or(exit.alias = "east") or(exit.alias = "west")) {
          msg ("There is a wall to the "+exit.alias)
        }
      }
    }
    EnableTurnScript (playerTurn)
  </function>
  <function name="descWalls">
    msg ("")
    foreach (exit, AllExits()) {
      if ((exit.locked) and (exit.parent = player.parent)) {
        if ((exit.alias = "north") or (exit.alias = "south") or(exit.alias = "east") or(exit.alias = "west")) {
          msg ("There is a wall to the "+exit.alias)
        }
      }
    }
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x") and (room = player.parent)) {
        if (room.x = 0) {
          msg ("There is a wall to the west")
        }
        if (room.x = 7) {
          msg ("There is a wall to the east")
        }
        if (room.y = 0) {
          msg ("There is a wall to the south")
        }
        if (room.y = 7) {
          msg ("There is a wall to the north")
        }
      }
    }
  </function>
  <function name="moveLever">
    if (Lever.parent = B3) {
      Bishop.parent.inRoom = " "
      Bishop2.parent.inRoom = " "
      MoveObject (Lever, C8)
      MoveObject (Bishop, A5)
      MoveObject (Bishop2, D5)
      msg ("You have pulled the lever.")
      msg ("The wall in front of you disappeared!")
      msg ("Another lever appears NorthEast of where you are now.")
      UnlockExit (A3northeast)
      UnlockExit (B3northwest)
      UnlockExit (B3north)
      UnlockExit (B3northeast)
      UnlockExit (C3northwest)
    }
    else if (Lever.parent = C8) {
      Bishop.parent.inRoom = " "
      Bishop2.parent.inRoom = " "
      MoveObject (Lever, H4)
      MoveObject (Bishop2, H5)
      MoveObject (Bishop, E1)
      msg ("You pulled the lever. You hear the sounds of another lever appearing but you can't see it from here.")
      msg ("and the wall to the SouthEast disappeared!")
      UnlockExit (D5southeast)
      UnlockExit (E5southwest)
      UnlockExit (E5south)
      UnlockExit (E5southeast)
      UnlockExit (F5southwest)
    }
    else if (Lever.parent = H4) {
      Bishop.parent.inRoom = " "
      Bishop2.parent.inRoom = " "
      MoveObject (Lever, STORAGE)
      MoveObject (Bishop, STORAGE)
      MoveObject (Bishop2, STORAGE)
      msg ("The wall to the North disappeared!")
      msg ("You see a mirror to the North and it's illuminate slightly.")
      UnlockExit (H5north)
      DisableTurnScript (BishopOnTurn)
    }
  </function>
  <function name="moveBishop2"><![CDATA[
    if (game.level = "Bishop") {
      if ((player.parent = Bishop2.parent) and (player.parent <> STORAGE)) {
        deathByBishop
      }
      if (Bishop2.parent = D5) {
        MoveObject (Bishop2, C6)
        D5.inRoom = " "
      }
      else if (Bishop2.parent = C6) {
        MoveObject (Bishop2, D7)
        C6.inRoom = " "
      }
      else if (Bishop2.parent = D7) {
        MoveObject (Bishop2, E8)
        D7.inRoom = " "
      }
      else if (Bishop2.parent = E8) {
        MoveObject (Bishop2, F7)
        E8.inRoom = " "
      }
      else if (Bishop2.parent = F7) {
        MoveObject (Bishop2, E6)
        F7.inRoom = " "
      }
      else if (Bishop2.parent = E6) {
        MoveObject (Bishop2, D5)
        E6.inRoom = " "
      }
      else if (Bishop2.parent = D5) {
        MoveObject (Bishop2, E8)
        D5.inRoom = " "
      }
      else if (Bishop2.parent = H5) {
        MoveObject (Bishop2, G4)
        H5.inRoom = " "
      }
      else if (Bishop2.parent = G4) {
        MoveObject (Bishop2, H3)
        G4.inRoom = " "
      }
      else if (Bishop2.parent = H3) {
        MoveObject (Bishop2, G2)
        H3.inRoom = " "
      }
      else if (Bishop2.parent = G2) {
        MoveObject (Bishop2, F3)
        G2.inRoom = " "
      }
      else if (Bishop2.parent = F3) {
        MoveObject (Bishop2, H5)
        F3.inRoom = " "
      }
    }
  ]]></function>
  <function name="moveRookInPreKnight"><![CDATA[
    if (player.playerDeath = "null") {
      if (Rook.parent = H5) {
        MoveObject (Rook, F5)
        H5.inRoom = " "
      }
      else if (Rook.parent = F5) {
        MoveObject (Rook, D5)
        F5.inRoom = " "
      }
      else if (Rook.parent = D5) {
        MoveObject (Rook, B5)
        D5.inRoom = " "
      }
      else if (Rook.parent = B5) {
        MoveObject (Rook, B3)
        B5.inRoom = " "
      }
      else if (Rook.parent = B3) {
        MoveObject (Rook, D3)
        B3.inRoom = " "
      }
      else if (Rook.parent = D3) {
        MoveObject (Rook, F3)
        D3.inRoom = " "
      }
      else if (Rook.parent = F3) {
        MoveObject (Rook, G3)
        F3.inRoom = " "
      }
      else if (Rook.parent = G3) {
        MoveObject (Rook, E3)
        G3.inRoom = " "
      }
      else if (Rook.parent = E3) {
        MoveObject (Rook, E5)
        E3.inRoom = " "
      }
      else if (Rook.parent = E5) {
        MoveObject (Rook, E7)
        E5.inRoom = " "
      }
      else if (Rook.parent = E7) {
        MoveObject (Rook, C7)
        E7.inRoom = " "
      }
      else if (Rook.parent = C7) {
        MoveObject (Rook, B7)
        C7.inRoom = " "
      }
      else if (Rook.parent = B7) {
        MoveObject (Rook, B5)
        B7.inRoom = " "
      }
      else if (Rook.parent = B5) {
        MoveObject (Rook, D5)
        B5.inRoom = " "
      }
      else if (Rook.parent = D5) {
        MoveObject (Rook, F5)
        D5.inRoom = " "
      }
      else if (Rook.parent = F5) {
        MoveObject (Rook, H5)
        F5.inRoom = " "
      }
    }
    if ((player.parent = Rook.parent) and (player.parent <> STORAGE)) {
      deathByRook
    }
  ]]></function>
  <function name="moveRookInPreBishop"><![CDATA[
    if (Rook.parent = H5) {
      MoveObject (Rook, E5)
      H5.inRoom = " "
    }
    else if (Rook.parent = E5) {
      MoveObject (Rook, B5)
      E5.inRoom = " "
    }
    else if (Rook.parent = B5) {
      MoveObject (Rook, B7)
      B5.inRoom = " "
    }
    else if (Rook.parent = B7) {
      MoveObject (Rook, E7)
      B7.inRoom = " "
    }
    else if (Rook.parent = E7) {
      MoveObject (Rook, G7)
      E7.inRoom = " "
    }
    else if (Rook.parent = G7) {
      MoveObject (Rook, G6)
      G7.inRoom = " "
    }
    else if (Rook.parent = G6) {
      MoveObject (Rook, F6)
      G6.inRoom = " "
    }
    else if (Rook.parent = F6) {
      MoveObject (Rook, F4)
      F6.inRoom = " "
    }
    else if (Rook.parent = F4) {
      MoveObject (Rook, H4)
      F4.inRoom = " "
    }
    else if (Rook.parent = H4) {
      MoveObject (Rook, H7)
      H4.inRoom = " "
    }
    else if (Rook.parent = H7) {
      MoveObject (Rook, E7)
      H7.inRoom = " "
    }
    else if (Rook.parent = E7) {
      MoveObject (Rook, B7)
      E7.inRoom = " "
    }
    else if (Rook.parent = B7) {
      MoveObject (Rook, B5)
      B7.inRoom = " "
    }
    else if (Rook.parent = B5) {
      MoveObject (Rook, E5)
      B5.inRoom = " "
    }
    else if (Rook.parent = E5) {
      MoveObject (Rook, H5)
      E5.inRoom = " "
    }
    else if (Rook.parent = H5) {
      MoveObject (Rook, H2)
      H5.inRoom = " "
    }
    if ((player.parent = Rook.parent) and (player.parent <> STORAGE)) {
      deathByRook
    }
  ]]></function>
  <function name="moveKnightInPreBishop"><![CDATA[
    if (Knight.parent = H4) {
      MoveObject (Knight, G2)
      H4.inRoom = " "
    }
    else if (Knight.parent = G2) {
      MoveObject (Knight, E1)
      G2.inRoom = " "
    }
    else if (Knight.parent = E1) {
      MoveObject (Knight, D3)
      E1.inRoom = " "
    }
    else if (Knight.parent = D3) {
      MoveObject (Knight, B4)
      D3.inRoom = " "
    }
    else if (Knight.parent = B4) {
      MoveObject (Knight, D4)
      B4.inRoom = " "
    }
    else if (Knight.parent = D4) {
      MoveObject (Knight, B5)
      D4.inRoom = " "
    }
    else if (Knight.parent = B5) {
      MoveObject (Knight, D6)
      B5.inRoom = " "
    }
    else if (Knight.parent = D6) {
      MoveObject (Knight, E8)
      D6.inRoom = " "
    }
    else if (Knight.parent = E8) {
      MoveObject (Knight, C7)
      E8.inRoom = " "
    }
    else if (Knight.parent = C7) {
      MoveObject (Knight, B5)
      C7.inRoom = " "
    }
    else if (Knight.parent = B5) {
      MoveObject (Knight, D6)
      B5.inRoom = " "
    }
    else if (Knight.parent = D6) {
      MoveObject (Knight, E8)
      D6.inRoom = " "
    }
    else if (Knight.parent = E8) {
      MoveObject (Knight, C7)
      E8.inRoom = " "
    }
    else if (Knight.parent = C7) {
      MoveObject (Knight, B5)
      C7.inRoom = " "
    }
    else if (Knight.parent = B5) {
      MoveObject (Knight, D6)
      B5.inRoom = " "
    }
    else if (Knight.parent = D6) {
      MoveObject (Knight, H4)
      D6.inRoom = " "
    }
    if ((player.parent = Knight.parent) and (player.parent <> STORAGE)) {
      deathByKnight
    }
  ]]></function>
  <function name="preKnightRookKillZone">
    if (Rook.parent=B7) {
      if (player.parent = B8) {
        deathByRook
      }
      if (player.parent = B7) {
        deathByRook
      }
      if (player.parent = B6) {
        deathByRook
      }
      if (player.parent = B5) {
        deathByRook
      }
      if (player.parent = B4) {
        deathByRook
      }
      if (player.parent = B3) {
        deathByRook
      }
      if (player.parent = B2) {
        deathByRook
      }
      if (player.parent = B1) {
        deathByRook
      }
      if (player.parent = C7) {
        deathByRook
      }
      if (player.parent = D7) {
        deathByRook
      }
      if (player.parent = G7) {
        deathByRook
      }
      if (player.parent = H7) {
        deathByRook
      }
    }
    if (Rook.parent=C7) {
      if (player.parent = B7) {
        deathByRook
      }
      if (player.parent = C7) {
        deathByRook
      }
      if (player.parent = E7) {
        deathByRook
      }
      if (player.parent = F7) {
        deathByRook
      }
      if (player.parent = G7) {
        deathByRook
      }
      if (player.parent = H7) {
        deathByRook
      }
    }
    if (Rook.parent=E7) {
      if (player.parent = E8) {
        deathByRook
      }
      if (player.parent = E6) {
        deathByRook
      }
      if (player.parent = E5) {
        deathByRook
      }
      if (player.parent = E7) {
        deathByRook
      }
      if (player.parent = E4) {
        deathByRook
      }
      if (player.parent = E3) {
        deathByRook
      }
      if (player.parent = E2) {
        deathByRook
      }
      if (player.parent = E1) {
        deathByRook
      }
      if (player.parent = B7) {
        deathByRook
      }
      if (player.parent = C7) {
        deathByRook
      }
      if (player.parent = D7) {
        deathByRook
      }
      if (player.parent = F7) {
        deathByRook
      }
      if (player.parent = G7) {
        deathByRook
      }
      if (player.parent = H7) {
        deathByRook
      }
    }
    if (Rook.parent=B5) {
      if (player.parent = A5) {
        deathByRook
      }
      if (player.parent = C5) {
        deathByRook
      }
      if (player.parent = B5) {
        deathByRook
      }
      if (player.parent = D5) {
        deathByRook
      }
      if (player.parent = E5) {
        deathByRook
      }
      if (player.parent = F5) {
        deathByRook
      }
      if (player.parent = G5) {
        deathByRook
      }
      if (player.parent = H5) {
        deathByRook
      }
      if (player.parent = B8) {
        deathByRook
      }
      if (player.parent = B7) {
        deathByRook
      }
      if (player.parent = B6) {
        deathByRook
      }
      if (player.parent = B5) {
        deathByRook
      }
      if (player.parent = B4) {
        deathByRook
      }
      if (player.parent = B3) {
        deathByRook
      }
      if (player.parent = B2) {
        deathByRook
      }
      if (player.parent = B1) {
        deathByRook
      }
    }
    if (Rook.parent=D5) {
      if (player.parent = A5) {
        deathByRook
      }
      if (player.parent = B5) {
        deathByRook
      }
      if (player.parent = C5) {
        deathByRook
      }
      if (player.parent = D5) {
        deathByRook
      }
      if (player.parent = E5) {
        deathByRook
      }
      if (player.parent = F5) {
        deathByRook
      }
      if (player.parent = G5) {
        deathByRook
      }
      if (player.parent = H5) {
        deathByRook
      }
    }
    if (Rook.parent=E5) {
      if (player.parent = E8) {
        deathByRook
      }
      if (player.parent = E7) {
        deathByRook
      }
      if (player.parent = E6) {
        deathByRook
      }
      if (player.parent = E5) {
        deathByRook
      }
      if (player.parent = E4) {
        deathByRook
      }
      if (player.parent = E3) {
        deathByRook
      }
      if (player.parent = E2) {
        deathByRook
      }
      if (player.parent = E1) {
        deathByRook
      }
      if (player.parent = A5) {
        deathByRook
      }
      if (player.parent = B5) {
        deathByRook
      }
      if (player.parent = C5) {
        deathByRook
      }
      if (player.parent = D5) {
        deathByRook
      }
      if (player.parent = E5) {
        deathByRook
      }
      if (player.parent = F5) {
        deathByRook
      }
      if (player.parent = G5) {
        deathByRook
      }
      if (player.parent = H5) {
        deathByRook
      }
    }
    if (Rook.parent=H5) {
      if (player.parent = A5) {
        deathByRook
      }
      if (player.parent = B5) {
        deathByRook
      }
      if (player.parent = C5) {
        deathByRook
      }
      if (player.parent = D5) {
        deathByRook
      }
      if (player.parent = E5) {
        deathByRook
      }
      if (player.parent = F5) {
        deathByRook
      }
      if (player.parent = G5) {
        deathByRook
      }
      if (player.parent = H5) {
        deathByRook
      }
      if (player.parent = H8) {
        deathByRook
      }
      if (player.parent = H7) {
        deathByRook
      }
      if (player.parent = H6) {
        deathByRook
      }
      if (player.parent = H5) {
        deathByRook
      }
      if (player.parent = H4) {
        deathByRook
      }
    }
    if (Rook.parent=B3) {
      if (player.parent = B8) {
        deathByRook
      }
      if (player.parent = B7) {
        deathByRook
      }
      if (player.parent = B6) {
        deathByRook
      }
      if (player.parent = B5) {
        deathByRook
      }
      if (player.parent = B4) {
        deathByRook
      }
      if (player.parent = B3) {
        deathByRook
      }
      if (player.parent = B2) {
        deathByRook
      }
      if (player.parent = B1) {
        deathByRook
      }
      if (player.parent = B3) {
        deathByRook
      }
      if (player.parent = C3) {
        deathByRook
      }
      if (player.parent = D3) {
        deathByRook
      }
      if (player.parent = E3) {
        deathByRook
      }
      if (player.parent = F3) {
        deathByRook
      }
      if (player.parent = G3) {
        deathByRook
      }
    }
    if (Rook.parent=D3) {
      if (player.parent = B3) {
        deathByRook
      }
      if (player.parent = C3) {
        deathByRook
      }
      if (player.parent = D3) {
        deathByRook
      }
      if (player.parent = E3) {
        deathByRook
      }
      if (player.parent = F3) {
        deathByRook
      }
      if (player.parent = G3) {
        deathByRook
      }
    }
    if (Rook.parent=E3) {
      if (player.parent = E8) {
        deathByRook
      }
      if (player.parent = E7) {
        deathByRook
      }
      if (player.parent = E6) {
        deathByRook
      }
      if (player.parent = E5) {
        deathByRook
      }
      if (player.parent = E4) {
        deathByRook
      }
      if (player.parent = E3) {
        deathByRook
      }
      if (player.parent = E2) {
        deathByRook
      }
      if (player.parent = E1) {
        deathByRook
      }
      if (player.parent = B3) {
        deathByRook
      }
      if (player.parent = C3) {
        deathByRook
      }
      if (player.parent = D3) {
        deathByRook
      }
      if (player.parent = E3) {
        deathByRook
      }
      if (player.parent = F3) {
        deathByRook
      }
      if (player.parent = G3) {
        deathByRook
      }
    }
    if (Rook.parent=F3) {
      if (player.parent = B3) {
        deathByRook
      }
      if (player.parent = C3) {
        deathByRook
      }
      if (player.parent = D3) {
        deathByRook
      }
      if (player.parent = E3) {
        deathByRook
      }
      if (player.parent = F3) {
        deathByRook
      }
      if (player.parent = G3) {
        deathByRook
      }
    }
    if (Rook.parent=G3) {
      if (player.parent = B3) {
        deathByRook
      }
      if (player.parent = C3) {
        deathByRook
      }
      if (player.parent = D3) {
        deathByRook
      }
      if (player.parent = E3) {
        deathByRook
      }
      if (player.parent = F3) {
        deathByRook
      }
      if (player.parent = G2) {
        deathByRook
      }
      if (player.parent = G1) {
        deathByRook
      }
    }
  </function>
</asl>