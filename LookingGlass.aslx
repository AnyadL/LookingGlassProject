<!--Saved by Quest 5.5.5328.26617-->
<asl version="550">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <template name="DefaultSelfDescription">You want to know what you look like? Stand up from your computer, go to the nearest bathroom, and look in a mirror. Don't worry, we'll be here when you get back. This is a text adventure game. You don't even have to pause.</template>
  <game name="Looking Glass">
    <gameid>77da0769-8bb2-44aa-9cba-5afd9d9eb11f</gameid>
    <version>1.0</version>
    <firstpublished>2014</firstpublished>
    <author>Sporadic Pixels</author>
    <enablehyperlinks type="boolean">false</enablehyperlinks>
    <gridmap type="boolean">false</gridmap>
    <showpanes type="boolean">false</showpanes>
    <mapscale type="int">20</mapscale>
    <autodescription type="boolean">false</autodescription>
    <autodisplayverbs type="boolean">false</autodisplayverbs>
    <showdescriptiononenter type="boolean">false</showdescriptiononenter>
    <category>Puzzle</category>
    <description><![CDATA[A puzzle game inspired by the literal and metaphorical representations of Chess. <br/>Features exploring an overworld and delving into pocket rooms to solve isolated puzzles. <br/>All the while you are avoiding the denizens of this universe. ]]></description>
    <setcustomwidth type="boolean">false</setcustomwidth>
    <setcustompadding type="boolean">false</setcustompadding>
    <showcommandbar />
    <mapsize type="int">300</mapsize>
    <attr name="changeroom_newline" type="boolean">false</attr>
    <positionList type="stringlist" />
    <level>RabbitHole</level>
    <showlocation />
    <showtitle />
    <cover type="string"></cover>
    <pov type="object">player</pov>
    <start type="script"><![CDATA[
      takedownMap
      msg ("You find yourself walking through a wooded glade, maybe because you lost something, maybe because you were looking for someone. The more you walk, the more unclear it becomes. Have you always been walking? Was there some sort of purpose once?")
      msg ("Suddenly you round a corner, you turn a few too many times in the darkness of the wood, and you find yourself standing in the center of a bright, field.")
      msg ("You blink and wipe your eyes in disbelief. The forest is no more. Inexplicably all there is is an endless set of green hills.")
      msg ("The sound of cracking and twisting like a thousand bones rattling together punctuates the air jolting you from your thoughts. Dark shapes materialize and thrust themselves from the ground, twisting around themselves, connecting and coalescing, These tendrils pulse and grow together forming walls impossibly high, walls extending far into the sky.")
      msg ("These walls – these walls of thorns – enclose around you forming an uncertain path. ")
      msg (" ")
      // RabbitHole -> Pawn -> Rook -> Knight -> Bishop -> Queen
      msg ("FOR TESTING: Pick a level: (RabbitHole, Pawn, PreRook, Rook, PreKnight, Knight, PreBishop, Bishop, PreQueen, Queen)")
      msg ("Type: level [level]")
      msg ("Example: level RabbitHole")
      msg ("The actual order of the puzzles is as shown above")
      msg ("To go between levels, solve the puzzles and 'enter' the mirrors")
      // setupRabbitHole
      // Move(player, E8)
      foreach (exit, AllExits()) {
        exit.lockmessage = "You encounter a brambly wall blocking your path."
      }
      foreach (room, AllObjects()) {
        if (HasAttribute(room, "x")) {
          room.alias = "Looking Glass"
        }
      }
    ]]></start>
    <roomenter type="script">
      // descWalls
    </roomenter>
    <object name="Counter">
      <inherit name="editor_object" />
      <count type="int">0</count>
    </object>
  </game>
  <command name="go">
    <pattern type="string"><![CDATA[^go to (?<exit>.*)$|^go (?<exit>.*)$|^(?<exit>north|east|south|west|northeast|northwest|southeast|southwest|in|out|up|down|n|e|s|w|ne|nw|se|sw|o|u|d)$]]></pattern>
    <unresolved>You can't go there.</unresolved>
    <script>
      if (exit.visible) {
        if (exit.locked) {
          msg (exit.lockmessage)
        }
        else if (exit.runscript) {
          if (HasScript(exit, "script")) {
            do (exit, "script")
          }
        }
        else if (exit.lookonly) {
          msg ("There's a wall blocking your path.")
        }
        else {
          game.pov.parent = exit.to
        }
      }
      else {
        msg ("There's a wall blocking your path.")
      }
    </script>
  </command>
  <object name="A1">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">0</x>
    <y type="int">0</y>
    <description type="string"></description>
    <enter type="script">
    </enter>
    <onexit type="script">
      A1.inRoom = " "
    </onexit>
    <exit name="A1east" alias="east" to="B1">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
      <look type="script">
        if (Contains (B1,Trial)) {
          msg ("saw trial")
        }
      </look>
    </exit>
    <exit name="A1north" alias="north" to="A2">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
      <look type="script">
        lookNorth
      </look>
    </exit>
    <exit name="A1northeast" alias="northeast" to="B2">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
      <look>looked B2</look>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("How'd you get here?")
        }
        else if (game.level = "Rook") {
          msg ("How'd you get here?")
        }
        else if (game.level = "Bishop") {
          msg ("You are in an empty cell block area. The room is deathly quiet except for the soft whirring of the security camera.")
          msg ("There are locked but empty cells to your west and south.")
        }
      </script>
    </turnscript>
  </object>
  <object name="A2">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">0</x>
    <y type="int">1</y>
    <alias type="string"></alias>
    <enter type="script">
    </enter>
    <onexit type="script">
      A2.inRoom = " "
    </onexit>
    <exit name="A2south" alias="south" to="A1">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A2southeast" alias="southeast" to="B1">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A2east" alias="east" to="B2">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A2northeast" alias="northeast" to="B3">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A2north" alias="north" to="A3">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
        }
        else if (game.level = "Rook") {
          msg ("You find yourself in a nondescript room.")
        }
        else if (game.level = "Bishop") {
          msg ("You are standing directly under the camera, though it's too high to reach.")
          msg ("There are locked but empty cells to your west.")
        }
      </script>
    </turnscript>
  </object>
  <object name="A3">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Blackite</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">0</x>
    <y type="int">2</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      A3.inRoom = " "
    </onexit>
    <exit name="A3southeast" alias="southeast" to="B2">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A3south" alias="south" to="A2">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A3north" alias="north" to="A4">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A3northeast" alias="northeast" to="B4">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A3east" alias="east" to="B3">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script><![CDATA[
        if (game.level = "Knight") {
          if (Chessboard.parent <> player) {
            msg ("As soon as you see the sky again the chessboard flickers, and all the icons reappear.")
            MoveObject (Chessboard, player)
          }
          msg ("You are in a small clearing surrounded by dense forest. There is a crevasse in the earth making a dark path that leads down.")
        }
        else if (game.level = "Rook") {
          msg ("The walls of the cramped corridor press against you. Past the north exit you see a familiar set of train tracks.")
        }
        else if (game.level = "Bishop") {
          msg ("Bits of ash lay scattered on the floor. You are keenly aware of the ever present whirring of the security camera.")
          msg ("There are locked but empty cells to your west and north.")
        }
      ]]></script>
    </turnscript>
    <exit name="A3down" alias="down" to="D6">
      <inherit name="downdirection" />
      <locked />
    </exit>
  </object>
  <object name="A4">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">0</x>
    <y type="int">3</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      A4.inRoom = " "
    </onexit>
    <exit name="A4south" alias="south" to="A3">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A4southeast" alias="southeast" to="B3">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A4east" alias="east" to="B4">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A4northeast" alias="northeast" to="B5">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A4north" alias="north" to="A5">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You’re in a wooded glade, green sunlight streaming from above.")
        }
        else if (game.level = "Rook") {
          msg ("To your south you see cramped corridor, these were probably once for maintenance but have long since been in a state of disrepair.")
        }
      </script>
    </turnscript>
  </object>
  <object name="A5">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">0</x>
    <y type="int">4</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      A5.inRoom = " "
    </onexit>
    <exit name="A5southeast" alias="southeast" to="B4">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A5south" alias="south" to="A4">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A5east" alias="east" to="B5">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A5northeast" alias="northeast" to="B6">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A5north" alias="north" to="A6">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You’re in a darker part of the forest, long shadows cast themselves across your path. ")
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="A6">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">0</x>
    <y type="int">5</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      A6.inRoom = " "
    </onexit>
    <exit name="A6south" alias="south" to="A5">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A6southeast" alias="southeast" to="B5">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A6east" alias="east" to="B6">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A6northeast" alias="northeast" to="B7">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A6north" alias="north" to="A7">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You faintly hear the sound of childish laughter, as if someone just pulled a prank on you.")
          MoveObject (player, H8)
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="A7">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">0</x>
    <y type="int">6</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      A7.inRoom = " "
    </onexit>
    <exit name="A7southeast" alias="southeast" to="B6">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A7south" alias="south" to="A6">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A7east" alias="east" to="B7">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A7northeast" alias="northeast" to="B8">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A7north" alias="north" to="A8">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("The surrounding forest is so dense that hardly any light reaches you.")
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="A8">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">0</x>
    <y type="int">7</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      A8.inRoom = " "
    </onexit>
    <exit name="A8south" alias="south" to="A7">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A8southeast" alias="southeast" to="B7">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="A8east" alias="east" to="B8">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          MoveObject (player, H8)
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="B1">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">1</x>
    <y type="int">0</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      B1.inRoom = " "
    </onexit>
    <exit name="B1west" alias="west" to="A1">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B1northwest" alias="northwest" to="A2">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B1northeast" alias="northeast" to="C2">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B1east" alias="east" to="C1">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B1north" alias="north" to="B2">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You’re in a wooded glade, green sunlight streaming from above. ")
        }
        else if (game.level = "Rook") {
          msg ("How'd you get here?")
        }
        else if (game.level = "Bishop") {
          msg ("You are in an empty cell block area. The room is deathly quiet except for the soft whirring of the security camera.")
          msg ("There are locked but empty cells to your south.")
        }
      </script>
    </turnscript>
  </object>
  <object name="B2">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">1</x>
    <y type="int">1</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      B2.inRoom = " "
    </onexit>
    <exit name="B2southwest" alias="southwest" to="A1">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B2south" alias="south" to="B1">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B2southeast" alias="southeast" to="C1">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B2east" alias="east" to="C2">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B2northeast" alias="northeast" to="C3">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B2north" alias="north" to="B3">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B2northwest" alias="northwest" to="A3">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B2west" alias="west" to="A2">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script><![CDATA[
        if (game.level = "Knight" ) {
          if (Knight.parent = B3) {
            msg ("A thick wall of shadows lies to your north, with no clear way around.")
          }
          else {
            msg ("You’re in a clearing, clear afternoon sunlight streams down from above.")
          }
        }
        else if ((game.level = "Rook")) {
          if (Key.parent <> STORAGE) {
            msg ("You see what appears to be something like a toll booth just before a solid door with no handle.")
          }
          else {
            msg ("You see what appears to be something like a toll booth just before an open doorway.")
          }
          msg ("Beside the booth there is a sign in a language you can't read, showing what looks like a passport with a green stamp on it. That might explain the green stamp chained to the booth itself.")
          if ((Key.parent <> player) and (Key.parent <> STORAGE)) {
            msg ("Not knowing what to do, you look franctically around and then at the chessboard, you see a strange symbol in the corner. Its not like any chess piece you've seen but maybe it can help.")
          }
        }
        else if (game.level = "Bishop") {
          msg ("You are in an empty cell block area. The room is deathly quiet except for the soft whirring of the security camera.")
        }
      ]]></script>
    </turnscript>
  </object>
  <object name="B3">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">1</x>
    <y type="int">2</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      B3.inRoom = " "
    </onexit>
    <firstenter type="script"><![CDATA[
      if (game.level = "Knight") {
        if (door.parent <> STORAGE) {
          MoveObject (door, B3)
        }
      }
    ]]></firstenter>
    <exit name="B3southeast" alias="southeast" to="C2">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B3south" alias="south" to="B2">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B3southwest" alias="southwest" to="A2">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B3west" alias="west" to="A3">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B3northwest" alias="northwest" to="A4">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B3north" alias="north" to="B4">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B3northeast" alias="northeast" to="C4">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B3east" alias="east" to="C3">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script><![CDATA[
        if (game.level = "Knight" ) {
          if (Knight.parent = B3) {
            msg ("You seem to have come to the other side of the shadows.")
            msg ("Only this time, an armored arm sticks out from the depths as if asking for something… ")
          }
          else {
            msg ("You are standing on a field of dead grass.")
          }
          if (door.parent <> STORAGE) {
            msg ("To your east you see a door that leads into the white house, though it seems to be nailed shut.")
          }
          else {
            msg ("With the door no more, you can easily enter the house to your east.")
          }
        }
        else if (game.level = "Rook") {
          msg ("The walls of the cramped corridor press against you. Past the east exit you see a familiar set of train tracks.")
        }
        else if (game.level = "Bishop") {
          msg ("You are in an empty cell block area. The room is deathly quiet except for the soft whirring of the security camera.")
          msg ("There is an exit to your north.")
        }
      ]]></script>
    </turnscript>
  </object>
  <object name="B4">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">1</x>
    <y type="int">3</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      B4.inRoom = " "
    </onexit>
    <exit name="B4southwest" alias="southwest" to="A3">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B4south" alias="south" to="B3">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B4east" alias="east" to="C4">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B4southeast" alias="southeast" to="C3">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B4northeast" alias="northeast" to="C5">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B4north" alias="north" to="B5">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B4northwest" alias="northwest" to="A5">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B4west" alias="west" to="A4">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You’re west of a white house. There are no entrances from this side. ")
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a hallway. The north exit seems to lead outside.")
        }
      </script>
    </turnscript>
  </object>
  <object name="B5">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">1</x>
    <y type="int">4</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      B5.inRoom = " "
    </onexit>
    <firstenter type="script">
      if ((game.level = "Knight") and (monster.parent = STORAGE)) {
        C5.inRoom = " "
        MoveObject (Knight, STORAGE)
      }
    </firstenter>
    <exit name="B5southeast" alias="southeast" to="C4">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B5south" alias="south" to="B4">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B5southwest" alias="southwest" to="A4">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B5west" alias="west" to="A5">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B5northwest" alias="northwest" to="A6">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B5north" alias="north" to="B6">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B5northeast" alias="northeast" to="C6">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B5east" alias="east" to="C5">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          if (monster.parent = C5) {
            msg ("A menacing suit of armour blocks all attempt to go east.")
          }
          else if (Knight.descShown = 0) {
            msg ("To your surprise, you see the shadow in the distance covering where the floating armor once was. ")
            msg ("As you watch, the shadows slowly slither away leaving the once-floating-armor lying suitably inert on the ground. The steel has been wrenched apart like an open wound. What once resembled a chest, arms, legs, and a helm, is no more. All that’s left is useless hunks of metal barely recognizable. ")
            MoveObject (Knight, STORAGE)
            Knight.descShown = 1
          }
          else {
            msg ("With the armour gone, it is now possible to go east.")
          }
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="B6">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">1</x>
    <y type="int">5</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      B6.inRoom = " "
    </onexit>
    <exit name="B6southwest" alias="southwest" to="A5">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B6south" alias="south" to="B5">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B6southeast" alias="southeast" to="C5">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B6east" alias="east" to="C6">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B6northeast" alias="northeast" to="C7">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B6north" alias="north" to="B7">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B6northwest" alias="northwest" to="A7">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B6west" alias="west" to="A6">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("The surrounding forest is so dense that hardly any light reaches you.")
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="B7">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">1</x>
    <y type="int">6</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      B7.inRoom = " "
    </onexit>
    <exit name="B7southeast" alias="southeast" to="C6">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B7south" alias="south" to="B6">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B7southwest" alias="southwest" to="A6">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B7west" alias="west" to="A7">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B7northwest" alias="northwest" to="A8">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B7north" alias="north" to="B8">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B7northeast" alias="northeast" to="C8">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B7east" alias="east" to="C7">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("The surrounding forest is so dense that hardly any light reaches you.")
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="B8">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">1</x>
    <y type="int">7</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      B8.inRoom = " "
    </onexit>
    <exit name="B8southwest" alias="southwest" to="A7">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B8south" alias="south" to="B7">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B8southeast" alias="southeast" to="C7">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B8east" alias="east" to="C8">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="B8west" alias="west" to="A8">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("The surrounding forest is so dense that hardly any light reaches you.")
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="C1">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">2</x>
    <y type="int">0</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      C1.inRoom = " "
    </onexit>
    <exit name="C1west" alias="west" to="B1">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C1northwest" alias="northwest" to="B2">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C1north" alias="north" to="C2">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C1northeast" alias="northeast" to="D2">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C1east" alias="east" to="D1">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You’re in a darker part of the forest, long shadows cast themselves across your path. ")
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are in an empty cell block area. The room is deathly quiet except for the soft whirring of the security camera.")
          msg ("There are locked but empty cells to your south.")
        }
      </script>
    </turnscript>
  </object>
  <object name="C2">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">2</x>
    <y type="int">1</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      C2.inRoom = " "
    </onexit>
    <description type="script">
    </description>
    <firstenter type="script">
    </firstenter>
    <exit name="C2southwest" alias="southwest" to="B1">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C2south" alias="south" to="C1">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C2southeast" alias="southeast" to="D1">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C2east" alias="east" to="D2">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C2northeast" alias="northeast" to="D3">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C2north" alias="north" to="C3">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C2northwest" alias="northwest" to="B3">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C2west" alias="west" to="B2">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You are south of a white house. You can't see an entrance from this side.")
        }
        else if (game.level = "Rook") {
          msg ("To your west, you see an open entrance to what appears to be a hallway.")
          msg ("To your east, you see a hole in the concrete just wide enough for you to stand away from the railroad tracks.")
        }
        else if (game.level = "Bishop") {
          msg ("You are in an empty cell block area. The room is deathly quiet except for the soft whirring of the security camera.")
        }
      </script>
    </turnscript>
  </object>
  <object name="C3">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">2</x>
    <y type="int">2</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      C3.inRoom = " "
    </onexit>
    <firstenter type="script"><![CDATA[
      if (game.level = "Knight") {
        if (door.parent <> STORAGE) {
          MoveObject (door, C3)
        }
      }
    ]]></firstenter>
    <exit name="C3southeast" alias="southeast" to="D2">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C3south" alias="south" to="C2">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C3southwest" alias="southwest" to="B2">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C3west" alias="west" to="B3">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C3northwest" alias="northwest" to="B4">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C3north" alias="north" to="C4">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C3northeast" alias="northeast" to="D4">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C3east" alias="east" to="D3">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script><![CDATA[
        if (game.level = "Knight" ) {
          if (Chessboard.parent <> player) {
            msg ("As soon as you get to the top of the stairs the chessboard flickers, and all the icons reappear.")
            MoveObject (Chessboard, player)
          }
          msg ("You are in a living room.")
          msg ("There is a locked trophy case and a mantlepiece, though neither displays anything of interest.")
          if (door.parent = C3) {
            msg ("To your west there is a wooden door that appears to be nailed shut.")
          }
          else {
            msg ("To your west lies an open doorframe, with large pieces of wood lying on the ground.")
          }
          msg ("An ornate rug has been folded in half, revealing an open trap door leading down.")
        }
        else if (game.level = "Rook") {
          msg ("To your west you see cramped corridor, these were probably once for maintenance but have long since been in a state of disrepair. ")
        }
        else if (game.level = "Bishop") {
          msg ("You are in an empty cell block area. The room is deathly quiet except for the soft whirring of the security camera.")
          msg ("There are locked but empty cells to your north")
        }
      ]]></script>
    </turnscript>
    <exit name="C3down" alias="down" to="H8">
      <inherit name="downdirection" />
    </exit>
  </object>
  <object name="C4">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">2</x>
    <y type="int">3</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      C4.inRoom = " "
    </onexit>
    <exit name="C4southwest" alias="southwest" to="B3">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C4south" alias="south" to="C3">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C4southeast" alias="southeast" to="D3">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C4east" alias="east" to="D4">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C4northeast" alias="northeast" to="D5">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C4north" alias="north" to="C5">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C4northwest" alias="northwest" to="B5">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C4west" alias="west" to="B4">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You are in a messy bedroom, with childish drawings and discarded games scattered over the floor. There is an open door to your east.  ")
        }
        else if (game.level = "Rook") {
        }
      </script>
    </turnscript>
  </object>
  <object name="C5">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">2</x>
    <y type="int">4</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      C5.inRoom = " "
    </onexit>
    <description type="script">
    </description>
    <exit name="C5southeast" alias="southeast" to="D4">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C5south" alias="south" to="C4">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C5southwest" alias="southwest" to="B4">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C5west" alias="west" to="B5">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C5northwest" alias="northwest" to="B6">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C5north" alias="north" to="C6">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C5northeast" alias="northeast" to="D6">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C5east" alias="east" to="D5">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You are north of the white house, with an open window to your south.")
          if (monster.parent = C5) {
            msg ("However, A menacing suit of armour seems to be guarding this entrance.")
          }
          else {
            msg ("You are surrounded by pieces of scrap metal.")
          }
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="C6">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">2</x>
    <y type="int">5</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      C6.inRoom = " "
    </onexit>
    <firstenter type="script">
    </firstenter>
    <exit name="C6southwest" alias="southwest" to="B5">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C6south" alias="south" to="C5">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C6southeast" alias="southeast" to="D5">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C6east" alias="east" to="D6">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C6northeast" alias="northeast" to="D7">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C6north" alias="north" to="C7">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C6northwest" alias="northwest" to="B7">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C6west" alias="west" to="B6">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("The surrounding forest is so dense that hardly any light reaches you.")
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="C7">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">2</x>
    <y type="int">6</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      C7.inRoom = " "
    </onexit>
    <exit name="C7southeast" alias="southeast" to="D6">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C7south" alias="south" to="C6">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C7southwest" alias="southwest" to="B6">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C7west" alias="west" to="B7">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C7northwest" alias="northwest" to="B8">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C7north" alias="north" to="C8">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C7northeast" alias="northeast" to="D8">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C7east" alias="east" to="D7">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          MoveObject (player, H8)
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="C8">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">2</x>
    <y type="int">7</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      C8.inRoom = " "
    </onexit>
    <exit name="C8southwest" alias="southwest" to="B7">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C8south" alias="south" to="C7">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C8southeast" alias="southeast" to="D7">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C8east" alias="east" to="D8">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="C8west" alias="west" to="B8">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("The surrounding forest is so dense that hardly any light reaches you.")
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="D1">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">3</x>
    <y type="int">0</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      D1.inRoom = " "
    </onexit>
    <exit name="D1west" alias="west" to="C1">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D1northwest" alias="northwest" to="C2">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D1north" alias="north" to="D2">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D1northeast" alias="northeast" to="E2">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D1east" alias="east" to="E1">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You’re in a darker part of the forest, long shadows cast themselves across your path. ")
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are in an empty cell block area. The room is deathly quiet except for the soft whirring of the security camera.")
          msg ("There are locked but empty cells to your east and south.")
        }
      </script>
    </turnscript>
  </object>
  <object name="D2">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">3</x>
    <y type="int">1</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      D2.inRoom = " "
    </onexit>
    <exit name="D2southwest" alias="southwest" to="C1">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D2south" alias="south" to="D1">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D2southeast" alias="southeast" to="E1">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D2east" alias="east" to="E2">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D2northeast" alias="northeast" to="E3">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D2north" alias="north" to="D3">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D2northwest" alias="northwest" to="C3">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D2west" alias="west" to="C2">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You are south of the white house. you can't see any entrances on this side.")
        }
        else if (game.level = "Rook") {
          msg ("It's cramped and dark, but at least you're off the tracks.")
        }
        else if (game.level = "Bishop") {
          msg ("You are in an empty cell block area. The room is deathly quiet except for the soft whirring of the security camera.")
          msg ("There are locked but empty cells to your east.")
        }
      </script>
    </turnscript>
  </object>
  <object name="D3">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">3</x>
    <y type="int">2</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      D3.inRoom = " "
    </onexit>
    <exit name="D3southeast" alias="southeast" to="E2">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D3south" alias="south" to="D2">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D3southwest" alias="southwest" to="C2">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D3west" alias="west" to="C3">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D3northwest" alias="northwest" to="C4">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D3north" alias="north" to="D4">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D3northeast" alias="northeast" to="E4">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D3east" alias="east" to="E3">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You are in a simple black-and-white-tiled kitchen.")
          msg ("There is a table likely used in preparing food, but it doesn't look like it's been used recently.")
          msg ("A dark stairway leads up, but you see a solid wall at the top of it.")
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are in an empty cell block area. The room is deathly quiet except for the soft whirring of the security camera.")
          msg ("There are locked but empty cells to your north and east.")
        }
      </script>
    </turnscript>
  </object>
  <object name="D4">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">3</x>
    <y type="int">3</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      D4.inRoom = " "
    </onexit>
    <exit name="D4southwest" alias="southwest" to="C3">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D4south" alias="south" to="D3">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D4southeast" alias="southeast" to="E3">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D4east" alias="east" to="E4">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D4northeast" alias="northeast" to="E5">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D4north" alias="north" to="D5">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D4northwest" alias="northwest" to="C5">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D4west" alias="west" to="C4">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You’re in an nondescript room. ")
        }
      </script>
    </turnscript>
  </object>
  <object name="D5">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">3</x>
    <y type="int">4</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      D5.inRoom = " "
    </onexit>
    <firstenter type="script">
      if ((game.level = "Knight") and (monster.parent = STORAGE)) {
        C5.inRoom = " "
        MoveObject (Knight, STORAGE)
      }
    </firstenter>
    <exit name="D5southeast" alias="southeast" to="E4">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D5south" alias="south" to="D4">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D5southwest" alias="southwest" to="C4">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D5west" alias="west" to="C5">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D5northwest" alias="northwest" to="C6">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D5north" alias="north" to="D6">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D5northeast" alias="northeast" to="E6">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D5east" alias="east" to="E5">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You’re north of a white house. There are no entrances from this side.")
          if (monster.parent = C5) {
            msg ("You see something glint to your west.")
          }
          else if (Knight.descShown = 0) {
            msg ("To your surprise, you see the shadow in the distance covering where there was once floating armor. ")
            msg ("As you watch, the shadows slowly slither away leaving the once-floating-armor lying suitably inert on the ground. The steel has been wrenched apart like an open wound. What once resembled a chest, arms, legs, and a helm, is no more. All that’s left is useless hunks of metal barely recognizable. ")
            MoveObject (Knight, STORAGE)
            Knight.descShown = 1
          }
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="D6">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">3</x>
    <y type="int">5</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      D6.inRoom = " "
    </onexit>
    <exit name="D6southwest" alias="southwest" to="C5">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D6south" alias="south" to="D5">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D6southeast" alias="southeast" to="E5">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D6east" alias="east" to="E6">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D6northeast" alias="northeast" to="E7">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D6north" alias="north" to="D7">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D6northwest" alias="northwest" to="C7">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D6west" alias="west" to="C6">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          if (player.seenUnderground = 0) {
            msg ("Surprisingly, despite following a path down, you find yourself in another dense forest. You see a discarded knight chess piece on the grass at your feet, but it disappears shortly afterwards.")
            player.seenUnderground = 1
          }
          msg ("The surrounding forest is so dense that hardly any light reaches you.")
          msg ("You see what looks like a large stone wall with a path that leads upwards.")
          if (Chessboard.parent = player) {
            msg ("You look down as the chessboard in your hands flickers, and all the icons on it disappear, including yours.")
            MoveObject (Chessboard, STORAGE)
          }
        }
        else if (game.level = "Rook") {
          msg ("The walls of the cramped corridor press against you. Past the north exit you see a familiar set of train tracks.")
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
    <exit name="D6up" alias="up" to="A3">
      <inherit name="updirection" />
      <locked />
    </exit>
  </object>
  <object name="D7">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">3</x>
    <y type="int">6</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      D7.inRoom = " "
    </onexit>
    <exit name="D7southeast" alias="southeast" to="E6">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D7south" alias="south" to="D6">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D7southwest" alias="southwest" to="C6">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D7west" alias="west" to="C7">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D7northwest" alias="northwest" to="C8">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D7north" alias="north" to="D8">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D7northeast" alias="northeast" to="E8">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D7east" alias="east" to="E7">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("The surrounding forest is so dense that hardly any light reaches you.")
        }
        else if (game.level = "Rook") {
          msg ("To your south you see cramped corridor, these were probably once for maintenance but have long since been in a state of disrepair.")
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="D8">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">3</x>
    <y type="int">7</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      D8.inRoom = " "
    </onexit>
    <exit name="D8southwest" alias="southwest" to="C7">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D8south" alias="south" to="D7">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D8southeast" alias="southeast" to="E7">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D8east" alias="east" to="E8">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="D8west" alias="west" to="C8">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("The surrounding forest is so dense that hardly any light reaches you.")
        }
        else if (game.level = "Rook") {
          msg ("You are on a train platform that extends to the east.")
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="E1">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">4</x>
    <y type="int">0</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      E1.inRoom = " "
    </onexit>
    <exit name="E1west" alias="west" to="D1">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E1northwest" alias="northwest" to="D2">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E1north" alias="north" to="E2">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E1northeast" alias="northeast" to="F2">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E1east" alias="east" to="F1">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You're in a darker part of the forest, long shadows cast themselves across your path.")
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in what appears to be a large armory. Unfortunatly, it's empty")
          if (Lever.parent = H4) {
            msg ("High up on the eastern wall you see two security cameras, diligently searching the area.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="E2">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">4</x>
    <y type="int">1</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      E2.inRoom = " "
    </onexit>
    <exit name="E2southwest" alias="southwest" to="D1">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E2south" alias="south" to="E1">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E2southeast" alias="southeast" to="F1">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E2east" alias="east" to="F2">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E2northeast" alias="northeast" to="F3">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E2north" alias="north" to="E3">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E2northwest" alias="northwest" to="D3">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E2west" alias="west" to="D2">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You're in a darker part of the forest, long shadows cast themselves across your path.")
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in what appears to be a large armory. Unfortunatly, it's empty")
          if (Lever.parent = H4) {
            msg ("High up on the eastern wall you see two security cameras, diligently searching the area.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="E3">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">4</x>
    <y type="int">2</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      E3.inRoom = " "
    </onexit>
    <exit name="E3southeast" alias="southeast" to="F2">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E3south" alias="south" to="E2">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E3southwest" alias="southwest" to="D2">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E3west" alias="west" to="D3">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E3northwest" alias="northwest" to="D4">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E3north" alias="north" to="E4">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E3northeast" alias="northeast" to="F4">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E3east" alias="east" to="F3">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You are east of the white house. In the corner you see an open window, letting you travel west.")
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in what appears to be a large armory. Unfortunatly, it's empty")
          if (Lever.parent = H4) {
            msg ("High up on the eastern wall you see two security cameras, diligently searching the area.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="E4">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">4</x>
    <y type="int">3</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      E4.inRoom = " "
    </onexit>
    <exit name="E4southwest" alias="southwest" to="D3">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E4south" alias="south" to="E3">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E4southeast" alias="southeast" to="F3">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E4east" alias="east" to="F4">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E4northeast" alias="northeast" to="F5">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E4north" alias="north" to="E5">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E4northwest" alias="northwest" to="D5">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E4west" alias="west" to="D4">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You are east of the white house. You don't see a way to enter it from here..")
        }
        else if (game.level = "Rook") {
          msg ("There's a hole in the northern wall, though you can see train tracks on the other side.")
        }
      </script>
    </turnscript>
  </object>
  <object name="E5">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">4</x>
    <y type="int">4</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      E5.inRoom = " "
    </onexit>
    <exit name="E5southeast" alias="southeast" to="F4">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E5south" alias="south" to="E4">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E5southwest" alias="southwest" to="D4">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E5west" alias="west" to="D5">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E5northwest" alias="northwest" to="D6">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E5north" alias="north" to="E6">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E5northeast" alias="northeast" to="F6">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E5east" alias="east" to="F5">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You are in a wooded glade, green sunlight streaming from above")
        }
        else if (game.level = "Rook") {
          msg ("To your north you see cramped corridor, these were probably once for maintenance but have long since been in a state of disrepair. ")
          msg ("There's a hole on the southern wall, though you can see train tracks on the other side.")
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard. There is an exit to you south.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="E6">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">4</x>
    <y type="int">5</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      E6.inRoom = " "
    </onexit>
    <exit name="E6southwest" alias="southwest" to="D5">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E6south" alias="south" to="E5">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E6southeast" alias="southeast" to="F5">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E6east" alias="east" to="F6">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E6northeast" alias="northeast" to="F7">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E6north" alias="north" to="E7">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E6northwest" alias="northwest" to="D7">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E6west" alias="west" to="D6">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script><![CDATA[
        if (game.level = "Knight" ) {
          msg ("You are in a wooded glade, green sunlight streaming from above.<br/>A particularly large tree looms over you.")
        }
        else if (game.level = "Rook") {
          msg ("The walls of the cramped corridor press against you. Past the south exit you see a familiar set of train tracks.")
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      ]]></script>
    </turnscript>
  </object>
  <object name="E7">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">4</x>
    <y type="int">6</y>
    <description type="string"></description>
    <enter type="script">
    </enter>
    <onexit type="script">
      E7.inRoom = " "
    </onexit>
    <firstenter type="script">
    </firstenter>
    <exit name="E7southeast" alias="southeast" to="F6">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E7south" alias="south" to="E6">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E7southwest" alias="southwest" to="D6">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E7west" alias="west" to="D7">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E7northwest" alias="northwest" to="D8">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E7north" alias="north" to="E8">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E7northeast" alias="northeast" to="F8">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E7east" alias="east" to="F7">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("The surrounding forest is so dense that hardly any light reaches you.")
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="E8">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">4</x>
    <y type="int">7</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      E8.inRoom = " "
    </onexit>
    <exit name="E8southwest" alias="southwest" to="D7">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E8south" alias="south" to="E7">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E8southeast" alias="southeast" to="F7">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E8east" alias="east" to="F8">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="E8west" alias="west" to="D8">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          MoveObject (player, H8)
        }
        else if (game.level = "Rook") {
          msg ("You are on a train platfrom that extends to the west and east.")
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="F1">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">5</x>
    <y type="int">0</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      F1.inRoom = " "
    </onexit>
    <exit name="F1west" alias="west" to="E1">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F1northwest" alias="northwest" to="E2">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F1north" alias="north" to="F2">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F1northeast" alias="northeast" to="G2">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F1east" alias="east" to="G1">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You’re in a darker part of the forest, long shadows cast themselves across your path. ")
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in what appears to be a large armory. Unfortunatly, it's empty")
          if (Lever.parent = H4) {
            msg ("High up on the eastern wall you see two security cameras, diligently searching the area.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="F2">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">5</x>
    <y type="int">1</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      F2.inRoom = " "
    </onexit>
    <exit name="F2southwest" alias="southwest" to="E1">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F2south" alias="south" to="F1">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F2southeast" alias="southeast" to="G1">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F2east" alias="east" to="G2">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F2northeast" alias="northeast" to="G3">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F2north" alias="north" to="F3">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F2northwest" alias="northwest" to="E3">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F2west" alias="west" to="E2">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You’re in a wooded glade, green sunlight streaming from above.")
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in what appears to be a large armory. Unfortunatly, it's empty")
          if (Lever.parent = H4) {
            msg ("High up on the eastern wall you see two security cameras, diligently searching the area.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="F3">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">5</x>
    <y type="int">2</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      F3.inRoom = " "
    </onexit>
    <exit name="F3southeast" alias="southeast" to="G2">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F3south" alias="south" to="F2">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F3southwest" alias="southwest" to="E2">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F3west" alias="west" to="E3">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F3northwest" alias="northwest" to="E4">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F3north" alias="north" to="F4">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F3northeast" alias="northeast" to="G4">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F3east" alias="east" to="G3">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You’re in a clearing, clear afternoon sunlight streams down from above. ")
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in what appears to be a large armory. Unfortunatly, it's empty")
          if (Lever.parent = H4) {
            msg ("High up on the eastern wall you see two security cameras, diligently searching the area.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="F4">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">5</x>
    <y type="int">3</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      F4.inRoom = " "
    </onexit>
    <exit name="F4southwest" alias="southwest" to="E3">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F4south" alias="south" to="F3">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F4southeast" alias="southeast" to="G3">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F4east" alias="east" to="G4">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F4northeast" alias="northeast" to="G5">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F4north" alias="north" to="F5">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F4northwest" alias="northwest" to="E5">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F4west" alias="west" to="E4">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You’re in a clearing, clear afternoon sunlight streams down from above. ")
        }
        else if (game.level = "Rook") {
        }
      </script>
    </turnscript>
  </object>
  <object name="F5">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">5</x>
    <y type="int">4</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      F5.inRoom = " "
    </onexit>
    <exit name="F5southeast" alias="southeast" to="G4">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F5south" alias="south" to="F4">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F5southwest" alias="southwest" to="E4">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F5west" alias="west" to="E5">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F5northwest" alias="northwest" to="E6">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F5north" alias="north" to="F6">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F5northeast" alias="northeast" to="G6">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F5east" alias="east" to="G5">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You’re in a wooded glade, green sunlight streaming from above.")
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="F6">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">5</x>
    <y type="int">5</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      F6.inRoom = " "
    </onexit>
    <exit name="F6southwest" alias="southwest" to="E5">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F6south" alias="south" to="F5">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F6southeast" alias="southeast" to="G5">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F6east" alias="east" to="G6">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F6northeast" alias="northeast" to="G7">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F6north" alias="north" to="F7">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F6northwest" alias="northwest" to="E7">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F6west" alias="west" to="E6">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You’re in a darker part of the forest, long shadows cast themselves across your path. ")
        }
        else if (game.level = "Rook") {
          msg ("The hole is cramped and dark, but at least you're off the train tracks.")
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="F7">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">5</x>
    <y type="int">6</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      F7.inRoom = " "
    </onexit>
    <beforefirstenter type="script">
    </beforefirstenter>
    <firstenter type="script">
    </firstenter>
    <exit name="F7southeast" alias="southeast" to="G6">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F7south" alias="south" to="F6">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F7southwest" alias="southwest" to="E6">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F7west" alias="west" to="E7">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F7northwest" alias="northwest" to="E8">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F7north" alias="north" to="F8">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F7northeast" alias="northeast" to="G8">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F7east" alias="east" to="G7">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("The surrounding forest is so dense that hardly any light reaches you.")
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="F8">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">5</x>
    <y type="int">7</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      F8.inRoom = " "
    </onexit>
    <exit name="F8southwest" alias="southwest" to="E7">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F8south" alias="south" to="F7">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F8southeast" alias="southeast" to="G7">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F8east" alias="east" to="G8">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="F8west" alias="west" to="E8">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("The surrounding forest is so dense that hardly any light reaches you.")
        }
        else if (game.level = "Rook") {
          msg ("You are on a train platform that extends to the west.")
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in a large and empty courtyard.")
          if (Lever.parent = C8) {
            msg ("Along the walls are several spotlights, two of which shine directly into the courtyard... As if they were looking for you.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="G1">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">6</x>
    <y type="int">0</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      G1.inRoom = " "
    </onexit>
    <exit name="G1west" alias="west" to="F1">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G1northwest" alias="northwest" to="F2">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G1north" alias="north" to="G2">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G1northeast" alias="northeast" to="H2">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G1east" alias="east" to="H1">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You’re in a darker part of the forest, long shadows cast themselves across your path.")
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in what appears to be a large armory. Unfortunatly, it's empty")
          if (Lever.parent = H4) {
            msg ("High up on the eastern wall you see two security cameras, diligently searching the area.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="G2">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">6</x>
    <y type="int">1</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      G2.inRoom = " "
    </onexit>
    <exit name="G2southwest" alias="southwest" to="F1">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G2south" alias="south" to="G1">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G2southeast" alias="southeast" to="H1">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G2east" alias="east" to="H2">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G2northeast" alias="northeast" to="H3">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G2north" alias="north" to="G3">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G2northwest" alias="northwest" to="F3">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G2west" alias="west" to="F2">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You’re in a darker part of the forest, long shadows cast themselves across your path.")
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in what appears to be a large armory. Unfortunatly, it's empty")
          if (Lever.parent = H4) {
            msg ("High up on the eastern wall you see two security cameras, diligently searching the area.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="G3">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">6</x>
    <y type="int">2</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      G3.inRoom = " "
    </onexit>
    <exit name="G3southeast" alias="southeast" to="H2">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G3south" alias="south" to="G2">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G3southwest" alias="southwest" to="F2">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G3west" alias="west" to="F3">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G3northwest" alias="northwest" to="F4">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G3north" alias="north" to="G4">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G3northeast" alias="northeast" to="H4">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G3east" alias="east" to="H3">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You’re in a darker part of the forest, long shadows cast themselves across your path.")
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in what appears to be a large armory. Unfortunatly, it's empty")
          if (Lever.parent = H4) {
            msg ("High up on the eastern wall you see two security cameras, diligently searching the area.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="G4">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">6</x>
    <y type="int">3</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      G4.inRoom = " "
    </onexit>
    <exit name="G4southwest" alias="southwest" to="F3">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G4south" alias="south" to="G3">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G4southeast" alias="southeast" to="H3">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G4east" alias="east" to="H4">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G4northeast" alias="northeast" to="H5">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G4north" alias="north" to="G5">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G4northwest" alias="northwest" to="F5">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G4west" alias="west" to="F4">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You’re in a darker part of the forest, long shadows cast themselves across your path.")
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in what appears to be a large armory. Unfortunatly, it's empty")
          if (Lever.parent = H4) {
            msg ("High up on the eastern wall you see two security cameras, diligently searching the area.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="G5">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">6</x>
    <y type="int">4</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      G5.inRoom = " "
    </onexit>
    <exit name="G5southeast" alias="southeast" to="H4">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G5south" alias="south" to="G4">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G5southwest" alias="southwest" to="F4">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G5west" alias="west" to="F5">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G5northwest" alias="northwest" to="F6">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G5north" alias="north" to="G6">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G5northeast" alias="northeast" to="H6">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G5east" alias="east" to="H5">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You’re in a darker part of the forest, long shadows cast themselves across your path.")
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in what appears to be a large armory. Unfortunatly, it's empty")
          if (Lever.parent = H4) {
            msg ("High up on the eastern wall you see two security cameras, diligently searching the area.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="G6">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">6</x>
    <y type="int">5</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      G6.inRoom = " "
    </onexit>
    <exit name="G6southwest" alias="southwest" to="F5">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G6south" alias="south" to="G5">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G6southeast" alias="southeast" to="H5">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G6east" alias="east" to="H6">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G6northeast" alias="northeast" to="H7">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G6north" alias="north" to="G7">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G6northwest" alias="northwest" to="F7">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G6west" alias="west" to="F6">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("You’re in a darker part of the forest, long shadows cast themselves across your path.")
        }
        else if (game.level = "Rook") {
          msg ("To your west you see a hole in the concrete just wide enough for you to stand away from the railroad tracks. ")
        }
        else if (game.level = "Bishop") {
        }
      </script>
    </turnscript>
  </object>
  <object name="G7">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">6</x>
    <y type="int">6</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      G7.inRoom = " "
    </onexit>
    <firstenter type="script">
    </firstenter>
    <exit name="G7southeast" alias="southeast" to="H6">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G7south" alias="south" to="G6">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G7southwest" alias="southwest" to="F6">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G7west" alias="west" to="F7">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G7northwest" alias="northwest" to="F8">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G7north" alias="north" to="G8">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G7northeast" alias="northeast" to="H8">
      <inherit name="northeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G7east" alias="east" to="H7">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight") {
          MoveObject (player, H8)
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
        }
      </script>
    </turnscript>
  </object>
  <object name="G8">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">6</x>
    <y type="int">7</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      G8.inRoom = " "
    </onexit>
    <exit name="G8southwest" alias="southwest" to="F7">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G8south" alias="south" to="G7">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G8southeast" alias="southeast" to="H7">
      <inherit name="southeastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G8east" alias="east" to="H8">
      <inherit name="eastdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="G8west" alias="west" to="F8">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          msg ("The surrounding forest is so dense that hardly any light reaches you.")
        }
        else if (game.level = "Rook") {
          msg ("To your east you see what looks to be a train platform. To your west is an open doorway.")
        }
        else if (game.level = "Bishop") {
        }
      </script>
    </turnscript>
  </object>
  <object name="H1">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">7</x>
    <y type="int">0</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      H1.inRoom = " "
    </onexit>
    <exit name="H1west" alias="west" to="G1">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H1northwest" alias="northwest" to="G2">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H1north" alias="north" to="H2">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
        }
        else if (game.level = "Rook") {
          msg ("You are standing on a train platform that extends to the north.")
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in what appears to be a large armory. Unfortunatly, it's empty")
          if (Lever.parent = H4) {
            msg ("High up on the eastern wall you see two security cameras, diligently searching the area.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="H2">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">7</x>
    <y type="int">1</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      H2.inRoom = " "
    </onexit>
    <exit name="H2southwest" alias="southwest" to="G1">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H2south" alias="south" to="H1">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H2north" alias="north" to="H3">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H2northwest" alias="northwest" to="G3">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H2west" alias="west" to="G2">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
        }
        else if (game.level = "Rook") {
          msg ("You are standing on a train platform that extends to the north and south.")
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in what appears to be a large armory. Unfortunatly, it's empty")
          if (Lever.parent = H4) {
            msg ("High up on the eastern wall you see two security cameras, diligently searching the area.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="H3">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">7</x>
    <y type="int">2</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      H3.inRoom = " "
    </onexit>
    <exit name="H3south" alias="south" to="H2">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H3southwest" alias="southwest" to="G2">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H3west" alias="west" to="G3">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H3northwest" alias="northwest" to="G4">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H3north" alias="north" to="H4">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
        }
        else if (game.level = "Rook") {
          msg ("You are standing on a train platform that extends to the south.")
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in what appears to be a large armory. Unfortunatly, it's empty")
          if (Lever.parent = H4) {
            msg ("High up on the eastern wall you see two security cameras, diligently searching the area.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="H4">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">7</x>
    <y type="int">3</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      H4.inRoom = " "
    </onexit>
    <exit name="H4southwest" alias="southwest" to="G3">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H4west" alias="west" to="G4">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H4northwest" alias="northwest" to="G5">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H4north" alias="north" to="H5">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H4south" alias="south" to="H3">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in what appears to be a large armory. Unfortunatly, it's empty")
          if (Lever.parent = H4) {
            msg ("High up on the eastern wall you see two security cameras, diligently searching the area.")
          }
        }
      </script>
    </turnscript>
  </object>
  <object name="H5">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">7</x>
    <y type="int">4</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      H5.inRoom = " "
    </onexit>
    <exit name="H5south" alias="south" to="H4">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H5southwest" alias="southwest" to="G4">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H5west" alias="west" to="G5">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H5northwest" alias="northwest" to="G6">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H5north" alias="north" to="H6">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are standing in what appears to be a large armory. Unfortunatly, it's empty")
          if (Lever.parent = H4) {
            msg ("High up on the eastern wall you see two security cameras, diligently searching the area.")
          }
          msg ("To the north you see an open doorway with the word Security printed above it.")
        }
      </script>
    </turnscript>
  </object>
  <object name="H6">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">7</x>
    <y type="int">5</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      H6.inRoom = " "
    </onexit>
    <exit name="H6southwest" alias="southwest" to="G5">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H6south" alias="south" to="H5">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H6north" alias="north" to="H7">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H6northwest" alias="northwest" to="G7">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H6west" alias="west" to="G6">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
          msg ("You are in a nondescript room.")
        }
      </script>
    </turnscript>
  </object>
  <object name="H7">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_borderwidth" type="int">1</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <inRoom> </inRoom>
    <x type="int">7</x>
    <y type="int">6</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      H7.inRoom = " "
    </onexit>
    <firstenter type="script">
    </firstenter>
    <exit name="H7south" alias="south" to="H6">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H7southwest" alias="southwest" to="G6">
      <inherit name="southwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H7west" alias="west" to="G7">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H7northwest" alias="northwest" to="G8">
      <inherit name="northwestdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H7north" alias="north" to="H8">
      <inherit name="northdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
        }
        else if (game.level = "Rook") {
        }
        else if (game.level = "Bishop") {
        }
      </script>
    </turnscript>
  </object>
  <object name="H8">
    <inherit name="editor_room" />
    <attr name="grid_label" type="string"></attr>
    <attr name="grid_fill">Black</attr>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <description>There is  a closed door to the north</description>
    <inRoom> </inRoom>
    <x type="int">7</x>
    <y type="int">7</y>
    <enter type="script">
    </enter>
    <onexit type="script">
      H8.inRoom = " "
    </onexit>
    <exit name="H8south" alias="south" to="H7">
      <inherit name="southdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <exit name="H8west" alias="west" to="G8">
      <inherit name="westdirection" />
      <attr name="grid_length" type="int">0</attr>
    </exit>
    <turnscript>
      <enabled />
      <script>
        if (game.level = "Knight" ) {
          if (player.seenUnderground = 0) {
            msg ("Surprisingly, despite following a path down, you find yourself in another dense forest. You see a discarded knight chess piece on the grass at your feet, but it disappears shortly afterwards.")
            player.seenUnderground = 1
          }
          msg ("The surrounding forest is so dense that hardly any light reaches you.")
          msg ("However, you can make out a solid stone wall, with stairs leading up towards a source of light.")
          if (Chessboard.parent = player) {
            msg ("You look down as the chessboard in your hands flickers, and all the icons on it dissapear, including yours.")
            MoveObject (Chessboard, STORAGE)
          }
        }
        else if (game.level = "Rook") {
          msg ("The absence of light in this room makes it hard to see anything at all.")
        }
        else if (game.level = "Bishop") {
        }
      </script>
    </turnscript>
    <exit name="H8southwest" alias="southwest" to="G7">
      <inherit name="southwestdirection" />
      <locked type="boolean">false</locked>
    </exit>
    <exit name="H8up" alias="up" to="C3">
      <inherit name="updirection" />
    </exit>
  </object>
  <turnscript name="KnightOnTurn">
    <enabled />
    <script>
      moveKnight
    </script>
  </turnscript>
  <verb>
    <property>press</property>
    <pattern>press</pattern>
    <defaultexpression>"You can't press " + object.article + "."</defaultexpression>
  </verb>
  <turnscript name="KingOnTurn">
    <enabled type="boolean">false</enabled>
    <script>
      moveKing
    </script>
  </turnscript>
  <turnscript name="BishopOnTurn">
    <script>
      moveBishop
      moveBishop2
    </script>
  </turnscript>
  <command>
    <pattern>look #text#</pattern>
    <script><![CDATA[
      direction = text
      // if (direction = "north" or direction = "North" or direction = "NORTH" or direction = "n") {
        // lookNorth
        // }
      // else if (direction = "south" or direction = "South" or direction = "SOUTH" or direction = "s") {
        // lookSouth
        // }
      // else if (direction = "east" or direction = "East" or direction = "EAST" or direction = "e") {
        // lookEast
        // }
      // else if (direction = "west" or direction = "West" or direction = "WEST" or direction = "w") {
        // lookWest
        // }
      // else if (direction = "northeast" or direction = "Northeast" or direction = "NORTHEAST" or direction = "NorthEast" or direction = "ne") {
        // lookNorthEast
        // }
      // else if (direction = "northwest" or direction = "Northwest" or direction = "NORTHWEST" or direction = "NorthWest" or direction = "nw") {
        // lookNorthWest
        // }
      // else if (direction = "southeast" or direction = "Southeast" or direction = "SOUTHEAST" or direction = "SouthEast" or direction = "se") {
        // lookSouthEast
        // }
      // else if (direction = "southwest" or direction = "Southwest" or direction = "SOUTHWEST" or direction = "SouthWest" or direction = "sw") {
        // lookSouthWest
        // }
      // else if (direction = "around") {
        if (direction = "around") {
          msg ("You look closely at the walls and see a complex interlocking, twisting and twining of brambles forming a solid block. You look up, and up and up and see them extending almost as far as you can see, a thin sliver of blue the only impression of a sky that’s left. ")
          if ((Chessboard.parent = player.parent) and (player.parent <> STORAGE)) {
            msg ("You see a chessboard on the floor")
          }
        }
        else {
          msg ("not supported")
        }
    ]]></script>
  </command>
  <object name="STORAGE">
    <inherit name="editor_room" />
    <x type="int">42</x>
    <y type="int">42</y>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <object name="Knight">
      <inherit name="editor_object" />
      <position>STORAGE</position>
      <descShown type="int">0</descShown>
      <alias>Shadow, Hand, Knight, arm</alias>
      <kiss>You've been spurned</kiss>
      <attack type="script">
        if (game.level = "Knight") {
          if (player.parent = Knight.parent) {
            if (Sword.parent = player) {
              msg ("You swing the sword out, but the hand catches it mid-swing and takes it from you. ")
              msg ("And for a moment, you think you see a white cheshire grin smiling back at you from the depths. ")
              MoveObject (Sword, STORAGE)
              MoveObject (monster, STORAGE)
              UnlockExit (B2north)
              UnlockExit (B3south)
              UnlockExit (B5east)
              UnlockExit (C5west)
              UnlockExit (C5south)
              UnlockExit (C4north)
              MoveObject (Knight, C5)
            }
            else {
              msg ("You flail out horribly ineffectively and nothing happens. ")
              msg ("You wonder how effective you would be trying to kill a foe you cannot see even if you were armed.")
            }
          }
          else {
            msg ("You aren't close enough to the Knight to kill it.")
          }
        }
      </attack>
      <kill type="script">
        if (game.level = "Knight") {
          if (player.parent = Knight.parent) {
            if (Sword.parent = player) {
              msg ("You swing the sword out, but the hand catches it mid-swing and takes it from you. ")
              msg ("And for a moment, you think you see a white cheshire grin smiling back at you from the depths. ")
              MoveObject (Sword, STORAGE)
              MoveObject (monster, STORAGE)
              UnlockExit (B2north)
              UnlockExit (B3south)
              UnlockExit (B5east)
              UnlockExit (C5west)
              UnlockExit (C5south)
              UnlockExit (C4north)
              MoveObject (Knight, C5)
            }
            else {
              msg ("You flail out horribly ineffectively and nothing happens. ")
              msg ("You wonder how effective you would be trying to kill a foe you cannot see even if you were armed.")
            }
          }
          else {
            msg ("You aren't close enough to the Knight to kill it.")
          }
        }
      </kill>
    </object>
    <object name="Rook">
      <inherit name="editor_object" />
      <position>STORAGE</position>
      <alias>rook</alias>
    </object>
    <object name="Bishop">
      <inherit name="editor_object" />
      <position>STORAGE</position>
      <kill>You can't kill a light</kill>
      <hit>You can't hit a light</hit>
      <look>You see beautiful light, a cool chill runs down your spine. </look>
      <alias>light, bishop</alias>
    </object>
    <object name="Queen">
      <inherit name="editor_object" />
      <position>STORAGE</position>
    </object>
    <object name="Lever">
      <inherit name="editor_object" />
      <inherit name="switchable" />
      <attr name="feature_switchable" type="boolean">false</attr>
      <switchonmsg>You have switched the lever. The light now illuminates the entrance you came in.</switchonmsg>
      <switchoffmsg>The light is still there, you will probably die</switchoffmsg>
      <attr name="feature_edible" type="boolean">false</attr>
      <eat>Even through the dim light, the rusted lever does not look terribly appetizing.</eat>
      <lick>Tastes metalic</lick>
      <throw>It is pretty firmly bolted to the ground. It would kinda be a problem if it wasn't.</throw>
      <takemsg>And how do you propose to take something that is bolted to the floor?</takemsg>
      <enter>You are not small enough.</enter>
      <approach>You are now standing over the lever.</approach>
      <lookin>The lever is exactly what it appears to be—a rusty old switch.</lookin>
      <speak>What do you expect it to say? The Gettysburg address?</speak>
      <press type="script">
        moveLever
      </press>
      <push type="script">
        moveLever
      </push>
      <onswitchon type="script">
        msg ("You Win!!")
      </onswitchon>
      <pull type="script">
        moveLever
      </pull>
      <attack type="script">
        if (Sword.parent = player) {
          msg ("The distinctive clang of metal on metal pierces the silence, but has no other noticeable effect.")
        }
        else {
          msg ("You punch with the lever with great force. And now your hand really, really hurts.")
        }
      </attack>
    </object>
    <object name="player">
      <inherit name="editor_object" />
      <inherit name="editor_player" />
      <inherit name="female" />
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <playerDeath>null</playerDeath>
      <turn type="int">0</turn>
      <alias>me, self, player, pc, myself</alias>
      <eat>You... want to eat yourself? Are you that hungry, or just some sort of weirdly egotistical cannibal?</eat>
      <turnon>If you want to turn yourself “on”, I would prefer you do it in the privacy of your own home. Leave me out of it.</turnon>
      <throw>Throw yourself? Do you mean jump? Because actually throwing yourself would be, you know, physically impossible.</throw>
      <jump>You jump about a foot in the air.</jump>
      <takemsg>If you wish to “possess” yourself, you will likely need to reach a level of enlightenment that few have ever attained. I will be of positively no help in this, but good luck with that!</takemsg>
      <press>Where were you on the night of the eighteenth? Do you have an alibi? Do you? DO YOU???</press>
      <enter>Enter yourself. Do you, you know, think about what it is you type before you do it?</enter>
      <approach>Are you trying to approach yourself? What, are you trying to pick yourself up? What kind of narcissist are you?</approach>
      <lookin>Who am I? What is my purpose in life? Where am I going? Why? Why? WHY???</lookin>
      <smash>You run and throw yourself against the nearest wall. There. You've smashed yourself. It probably hurt more than you expected, didn't it?</smash>
      <destroy>Do you mean to destroy yourself, or just your virtual alter ego? If it's the latter, quitting the game would be more efficient, if yourself, I would suggest extensive counselling.</destroy>
      <break>Breaking the player is my duty, thank you very much. You try to win, and I try to break you. Stop messing with the balance of these things!</break>
      <look>You want to know what you look like? Stand up from your computer, go to the nearest bathroom, and look in a mirror. Don't worry, we'll be here when you get back. This is a text adventure game. You don't even have to pause.</look>
      <attack type="script">
        if (Sword.parent = player) {
          msg ("Suicide is a little dark for this game, no? How about we just play a game of patty-cake instead?")
        }
        else {
          msg ("You slap yourself. You feel slightly more awake.")
        }
      </attack>
      <speak type="script">
        msg ("“Hello self.”")
        msg ("“Ah, it's my dear old friend, me. How am I doing these days.”")
        msg ("“Smashingly! Well, aside from being lost in a maze in a text adventure game.”")
        msg ("“Ah, that's terrible, but I'm sure you'll figure it out eventually.”")
        msg ("“Not necessarily, dear chap, as this is one of those adventure games in which you CAN die!”")
        msg ("“Oh how dreadful! How's the writing?”")
        msg ("“All right. Sometimes when I type in random verbs, strange things pop up. Like, I was expecting when I told the game I wanted to talk to myself get that line about how talking to yourself is probably a sign you're going crazy. Like I haven't seen that before.”")
        msg ("“Bit of a cliche, isn't it? What did you get instead?”")
        msg ("“This wondrous conversation!”")
        msg ("“Oh, wonderful! I do say that talking to myself is an engaging bit of gabbing, wouldn't you say, old boy?”")
        msg ("“Right, yes, of course! Although I don't understand why I imagine myself as a 19th century British Gentleman.”")
        msg ("“Because monocles are absolutely smashing, my boy! And top hats! We musn't forget those!”")
        msg ("“And I have been on a bit of a Harry Potter kick lately, so I've been feeling a bit British!”")
        msg ("“Ah, and Downton Abbey! We musn't forget that one, my good fellow!”")
        msg ("“Ah yes! We must not forget that one at all!”")
        msg ("(A hearty laugh is shared by all.)")
        msg ("“Say old chap, I don't suppose anyone would read this entire block of text, would they?”")
        msg ("“Bah! Of course not! This is going to be played by millenials! If it's over one hundred forty characters, their eyes glaze over!”")
        msg ("“Smashing, smashing! It wouldn't do to have our rich, fantasy atmosphere broken up by Downton Abbey references!”")
        msg ("“No, my good man, it wouldn't do at all!”")
      </speak>
      <seenUnderground type="int">0</seenUnderground>
    </object>
    <object name="Chessboard">
      <inherit name="editor_object" />
      <inherit name="switchable" />
      <take />
      <dropmsg>You dropped the Chessboard</dropmsg>
      <position>STORAGE</position>
      <first type="int">0</first>
      <takemsg> </takemsg>
      <alias>Chessboard, glass, tablet</alias>
      <buy>It is yours.</buy>
      <eat>Your attempt to nibble on the corner, but you just can't seem to get a good bite.</eat>
      <kiss>You can see the print of your lips on the pane.</kiss>
      <lick>Tastes dusty</lick>
      <listen>It is eerily silent</listen>
      <smell>It's a scent that you can't quite place.</smell>
      <attr name="feature_switchable" type="boolean">false</attr>
      <throw>With a cry of ”I don't have to take this, I have free will!”, you chuck the chessboard as hard as you can. You watch in satisfaction for a moment as it flies away from you, and then in confusion as it begins to somehow, defy gravity and start flying back towards you like a boomerang. Before you can react, it hits you in the head with some force, and you feel a rush of pain, and your head begins to throb. You hear a voice distant, and yet somehow surrounding you, “this is the designer of the game... you don't have free will in here. Now shut up, and keep the chessboard in your inventory.” You pick up the chessboard with a sigh.</throw>
      <press>You try pressing the places where the symbols are to see if there is any reaction, but there is not.</press>
      <enter>From what you can gather, you've already entered a chessboard. This one is little more than a map.</enter>
      <speak>You find it to be a very dry conversationalist.</speak>
      <look type="script">
      </look>
      <ontake type="script">
        Chessboard.first = Chessboard.first + 1
        if (Chessboard.first = 1) {
          msg ("You pick it up and feel its cool texture in your hands as a light suddenly switches on from within its pane.")
          msg ("Slowly, small squares of black and white spread across its surface.")
          msg ("And several little designs appear upon it.")
          msg ("It looks to be: two white pawns, and one black king…")
          msg ("There’s also a piece that seems different from a conventional set of chess pieces. ")
          msg ("It seems to be a flat diamond coin of some sort. ")
          msg ("")
        }
      </ontake>
      <ondrop type="script">
        msg ("You’re not sure if that was a good idea.")
        msg ("Traversing the maze blind sounds like a horrifying prospect.")
      </ondrop>
      <smash type="script">
        if (Chessboard.parent = player) {
          ClearScreen
          finish
        }
      </smash>
      <destroy type="script">
        if (Chessboard.parent = player) {
          ClearScreen
          finish
        }
      </destroy>
      <break type="script">
        if (Chessboard.parent = player) {
          ClearScreen
          finish
        }
      </break>
      <attack type="script">
        if (Chessboard.parent = player) {
          ClearScreen
          finish
        }
      </attack>
      <lock type="script">
        DisableTurnScript (displayASCII)
      </lock>
      <unlock type="script">
        EnableTurnScript (displayASCII)
      </unlock>
      <turnon type="script">
        if (ListContains(ScopeReachable(), this)) {
          if (this.switchedon) {
            msg (DynamicTemplate("AlreadySwitchedOn", this))
          }
          else {
            if (HasString(this, "switchonmsg")) {
              msg (this.switchonmsg)
            }
            else {
              msg (DynamicTemplate("SwitchedOn", this))
            }
            this.switchedon = true
          }
        }
        else {
          msg (DynamicTemplate("DefaultTurnOn", this))
        }
      </turnon>
      <approach type="script">
      </approach>
    </object>
    <object name="King">
      <inherit name="editor_object" />
      <position>STORAGE</position>
      <first type="int">0</first>
      <alias>statue, king</alias>
    </object>
    <object name="Pawn">
      <inherit name="editor_object" />
      <position>STORAGE</position>
    </object>
    <object name="Goal">
      <inherit name="editor_object" />
      <inherit name="edible" />
      <alias>Mirror, Oval Glass, Looking Glass, OvalGlass, LookingGlass</alias>
      <attr name="feature_edible" type="boolean">false</attr>
      <eat>As much as you would like to know what would happen if someone attempted to eat a dimensional portal, you are reasonably sure that it would involve some sort of slow, painful death.</eat>
      <listen>There's a whole world through this mirror.</listen>
      <speak>”Mirror mirror, over there, who's the fairest of the fair?” It still refused to show your reflection. Jerk.</speak>
      <turnon>You run your hands all along the body of the mirror, but there is no sort of contraption to turn it “on” or “off”.</turnon>
      <turnoff>You run your hands all along the body of the mirror, but there is no sort of contraption to turn it “on” or “off”.</turnoff>
      <throw>You attempt to pick up the mirror to throw it, but it seems bound by supernatural force. So much for that idea.</throw>
      <takemsg>What would you do carrying a portal around on your person?</takemsg>
      <press>You put your hand on what appears to be the surface, but your hand just goes through. You withdraw it before it can transport you.</press>
      <smash type="script">
        if (Sword.parent = player) {
          msg ("You swing the sword at the mirror, which immediately crashes and shatters into a thousand pieces, and then dissolves. You look about seeing if there are any remnants of the mirror about, but you notice a small, black spot where the mirror was. It then suddenly enlarges, and sucks you in. You are exposed to a series of colours, shapes and sounds so rapidly that you cannot process them at all. Suddenly, you are floating about ten feet in the air about ten feet behind where you were standing a moment ago, and see yourself moving backwards through the moment you experienced a moment ago, as the mirror unshatters and the sword returns to its sheath. You are immediately returned to your body, wondering what just happened.")
        }
        else {
          msg ("You punch the mirror, but your hand just passes through, which you withdraw quickly as you feel the portal pulling you in further. Physical attacks will do nothing.")
        }
      </smash>
      <destroy type="script">
        if (Sword.parent = player) {
          msg ("You swing the sword at the mirror, which immediately crashes and shatters into a thousand pieces, and then dissolves. You look about seeing if there are any remnants of the mirror about, but you notice a small, black spot where the mirror was. It then suddenly enlarges, and sucks you in. You are exposed to a series of colours, shapes and sounds so rapidly that you cannot process them at all. Suddenly, you are floating about ten feet in the air about ten feet behind where you were standing a moment ago, and see yourself moving backwards through the moment you experienced a moment ago, as the mirror unshatters and the sword returns to its sheath. You are immediately returned to your body, wondering what just happened.")
        }
        else {
          msg ("You punch the mirror, but your hand just passes through, which you withdraw quickly as you feel the portal pulling you in further. Physical attacks will do nothing.")
        }
      </destroy>
      <break type="script">
        if (Sword.parent = player) {
          msg ("You swing the sword at the mirror, which immediately crashes and shatters into a thousand pieces, and then dissolves. You look about seeing if there are any remnants of the mirror about, but you notice a small, black spot where the mirror was. It then suddenly enlarges, and sucks you in. You are exposed to a series of colours, shapes and sounds so rapidly that you cannot process them at all. Suddenly, you are floating about ten feet in the air about ten feet behind where you were standing a moment ago, and see yourself moving backwards through the moment you experienced a moment ago, as the mirror unshatters and the sword returns to its sheath. You are immediately returned to your body, wondering what just happened.")
        }
        else {
          msg ("You punch the mirror, but your hand just passes through, which you withdraw quickly as you feel the portal pulling you in further. Physical attacks will do nothing.")
        }
      </break>
      <attack type="script">
        if (Sword.parent = player) {
          msg ("You swing the sword at the mirror, which immediately crashes and shatters into a thousand pieces, and then dissolves. You look about seeing if there are any remnants of the mirror about, but you notice a small, black spot where the mirror was. It then suddenly enlarges, and sucks you in. You are exposed to a series of colours, shapes and sounds so rapidly that you cannot process them at all. Suddenly, you are floating about ten feet in the air about ten feet behind where you were standing a moment ago, and see yourself moving backwards through the moment you experienced a moment ago, as the mirror unshatters and the sword returns to its sheath. You are immediately returned to your body, wondering what just happened.")
        }
        else {
          msg ("You punch the mirror, but your hand just passes through, which you withdraw quickly as you feel the portal pulling you in further. Physical attacks will do nothing.")
        }
      </attack>
      <look type="script"><![CDATA[
        if (game.level = "RabbitHole") {
          msg ("A cool shiver tickles down your spine - this thing, this thing that you thought was a mirror - isn’t reflecting anything.")
          msg ("In fact… It seems to contain a world all its own… ")
        }
        else if (game.level = "Pawn") {
          msg ("You see a large mirror in the corner, is it possible this one’s the same as the other? ")
        }
        else if (game.level = "PreRook") {
          msg ("You see another strange mirror. Like the other one, the reflection contains something else. Could this one be the same as the last?")
        }
        else if (game.level = "Rook") {
          msg ("You see yet another mirror.")
        }
        else if (game.level = "PreKnight") {
          msg ("Yet another strange mirror hovers impossibly just in front of you. Once again, the reflection contains something that’s not there. ")
        }
        else if (game.level = "Knight") {
          msg ("And sure enough - another mirror. ")
        }
        else if (game.level = "PreBishop") {
          msg ("Another mirror? Really? Just how many more of these are there? ")
        }
        else if (game.level = "Bishop") {
          if (Lever.parent <> STORAGE) {
            msg ("There’s the mirror. Yet again.")
          }
          else {
            msg ("There’s the mirror. Yet again.")
          }
        }
        else if (game.level = "PreQueen") {
          msg ("This mirror’s larger than the other ones. ")
        }
      ]]></look>
      <enter type="script">
        mirrorEntered
      </enter>
      <approach type="script">
        mirrorEntered
      </approach>
      <lookin type="script">
        mirrorEntered
      </lookin>
      <walkin type="script">
        mirrorEntered
      </walkin>
      <touch type="script">
        mirrorEntered
      </touch>
    </object>
    <object name="Key">
      <inherit name="editor_object" />
      <look>'Tis a passport</look>
      <take />
      <feature_usegive />
      <used type="int">0</used>
      <alias>Passport</alias>
      <buy>It's already yours.</buy>
      <smell>Smells musty.</smell>
      <read>As you examine the passport, you notice that it is very worn. You can see a person in the photo, but you cannot make out the details the face, only that the picture is not you. You try to read the name, but it is equally difficult to make out the particulars.</read>
      <ripapart>You don't have the strength.</ripapart>
      <destroy>You can't destroy the passport.</destroy>
      <smash>You don't have the strength.</smash>
      <break>You don't have the strength.</break>
      <givesingle />
      <throw>You throw the passport, and it flutters to the ground a few feet in front of you. You feel like a big person, having thrown something, and you go over to pick it up with a sense of satisfaction.</throw>
      <eat>You ate enough paper for one lifetime when you were six.</eat>
      <turnon>You flip through it, but it seems to be no more than a standard passport, with nothing particular to manipulate.</turnon>
      <press>You squeeze the passport, but it returns to its original shape.</press>
      <enter>I don't think you can enter a passport.</enter>
      <speak>Given the amount of magic that you've seen today, you were hoping the passport may talk back. No such luck.</speak>
      <attack type="script">
        if ((Sword.parent = player) and (Key.parent = player)) {
          msg ("You know, if you want to cut something out of the passport, scissors might be a better option")
        }
        else if (Key.parent = player) {
          msg ("You punch the passport. It flies about a foot and a half away. You pick it back up. Don't you feel accomplished?")
        }
      </attack>
      <use type="script">
        // if (Checkpoint.parent = player.parent) {
          // msg ("You place the passport on the counter of the checkpoint and it wordlessly opens.")
          // UnlockExit (B2west)
          // }
      </use>
      <approach type="script">
      </approach>
      <selfuseon type="scriptdictionary" />
      <giveto type="scriptdictionary">
        <item key="Checkpoint">
          if (Checkpoint.parent = player.parent) {
            msg ("You place the passport on the counter of the checkpoint and it wordlessly opens.")
            UnlockExit (B2west)
          }
          else {
            msg ("You aren't close enough to the checkpoint")
          }
        </item>
      </giveto>
      <stamp type="script">
        if (game.level = "Rook") {
          if (player.parent = stamp.parent) {
            UnlockExit (B2west)
            UnlockExit (A2east)
            msg ("You stamp the passport. You notice the passage west of you soundlessly open. The passport however crumbles to dust.")
            MoveObject (Key, STORAGE)
          }
        }
      </stamp>
    </object>
    <object name="Bishop2">
      <inherit name="editor_object" />
      <inherit name="male" />
      <alias>Bishop</alias>
    </object>
    <object name="Sword">
      <inherit name="editor_object" />
      <look>A SWORD!!!!!</look>
      <take />
      <takemsg>Try not to kill yourself with it</takemsg>
      <dropmsg>Probably for the best.</dropmsg>
      <feature_usegive />
      <givesingle type="boolean">false</givesingle>
      <lick>Tastes like a Sword</lick>
      <eat>Unfortunately, you repertoire of circus tricks does not include sword swallowing.</eat>
      <turnon>You see no button on the weapon. You were hoping it could light up or glow in the dark.</turnon>
      <throw>You throw the sword which twirls awkwardly in the air and lands a few feet away. It's definitely no throwing dagger. Embarrassed, you walk over and pick it up again.</throw>
      <press>You put your hand against the flat side of the blade to test its material. It feels like cold steel.</press>
      <enter>You don't enter it, it enters you. And it's bad news when that happens.</enter>
      <approach>You kneel down beside the sword.</approach>
      <lookin>It is a plain, steel blade.</lookin>
      <speak>Sadly, we are not in a game where the sword is an enchanted one that bursts into song. Maybe for the sequel.</speak>
      <givetoanything type="script">
        if (Knight.parent = player.parent) {
          msg ("The black glove takes the handle of the sword, and then vanishes. You hear the sound of bending metal in the distance.")
          MoveObject (monster, STORAGE)
          UnlockExit (B2north)
          UnlockExit (B3south)
          UnlockExit (B5east)
          UnlockExit (C5west)
          UnlockExit (C5south)
          UnlockExit (C4north)
          MoveObject (Knight, C5)
        }
      </givetoanything>
      <break type="script">
        if (Sword.parent = player) {
          msg ("You try, but you cannot break the sword.")
        }
      </break>
      <destroy type="script">
        if (Sword.parent = player) {
          msg ("You try, but you cannot destroy the sword.")
        }
      </destroy>
      <smash type="script">
        if (Sword.parent = player) {
          msg ("You try, but you cannot smash the sword.")
        }
      </smash>
      <attack type="script">
      </attack>
      <selfuseon type="scriptdictionary">
        <item key="door">
          msg ("It takes effort, but you eventually smash through the door.")
          MoveObject (door, STORAGE)
          UnlockExit (C3west)
          UnlockExit (B3east)
        </item>
        <item key="Knight">
          msg ("The black glove effortlessly snatches the sword away from you as you swing, and then vanishes.")
          MoveObject (monster, STORAGE)
          UnlockExit (B2north)
          UnlockExit (B3south)
          UnlockExit (B5east)
          UnlockExit (C5west)
          UnlockExit (C5south)
          UnlockExit (C4north)
          MoveObject (Knight, C5)
        </item>
      </selfuseon>
      <give type="scriptdictionary" />
      <giveto type="scriptdictionary" />
    </object>
    <object name="door">
      <inherit name="editor_object" />
      <inherit name="openable" />
      <look>A simple wooden door, firmly bolted shut.</look>
      <alias>door</alias>
      <eat>You do realize you're not a termite, right?</eat>
      <turnon>Do you mean to “open” or “close” the door? Perhaps you could do one of those.</turnon>
      <turnoff>Do you mean to “open” or “close” the door? Perhaps you could do one of those.</turnoff>
      <feature_container />
      <open type="boolean">false</open>
      <close type="boolean">false</close>
      <throw>And how do you propose to throw something that is bolted to the wall?</throw>
      <takemsg>Doors typically don't go into your inventory. It's a bizarre convention of adventure games, I know, but just go with it.</takemsg>
      <press>You press on the door</press>
      <approach>You move to stand next to the door.</approach>
      <speak>It's like talking to a wall.</speak>
      <break type="script">
        if (Sword.parent = player) {
          msg ("It takes effort, but you eventually smash through the door.")
          MoveObject (door, STORAGE)
          UnlockExit (C3west)
          UnlockExit (B3east)
        }
        else {
          msg ("You do not have the strength to break the door.")
        }
      </break>
      <smash type="script">
        if (Sword.parent = player) {
          msg ("It takes effort, but you eventually smash through the door.")
          MoveObject (door, STORAGE)
          UnlockExit (C3west)
          UnlockExit (B3east)
        }
        else {
          msg ("You do not have the strength to smash through the door.")
        }
      </smash>
      <destroy type="script">
        if (Sword.parent = player) {
          msg ("It takes effort, but you eventually smash through the door.")
          MoveObject (door, STORAGE)
          UnlockExit (C3west)
          UnlockExit (B3east)
        }
        else {
          msg ("You do not have the strength to destroy the door.")
        }
      </destroy>
      <attack type="script">
        if (Sword.parent = player) {
          msg ("It takes effort, but you eventually smash through the door.")
          MoveObject (door, STORAGE)
          UnlockExit (C3west)
          UnlockExit (B3east)
        }
        else {
          msg ("“You stupid door with your stupid face!” you cry as you kick it hard. Now your foot really hurts. Ow.")
        }
      </attack>
      <openscript type="script">
        msg ("The door is bolted shut.")
      </openscript>
      <closescript type="script">
        msg ("It is bolted shut.")
      </closescript>
      <breakdown type="script">
        if (Sword.parent = player) {
          msg ("It takes effort, but you eventually smash through the door.")
          MoveObject (door, STORAGE)
          UnlockExit (C3west)
          UnlockExit (B3east)
        }
        else {
          msg ("“You stupid door with your stupid face!” you cry as you kick it hard. Now your foot really hurts. Ow.")
        }
      </breakdown>
    </object>
    <object name="monster">
      <inherit name="editor_object" />
      <inherit name="switchable" />
      <look>A floating suit of armor. A friend once told you that they were pretty dangerous, though you don't believe him.</look>
      <alias>pawn, monster</alias>
      <eat>You go up and lick the armour, which floats away from you, and you hear some kind of strange whispering sounds. It tastes... metallic.</eat>
      <lick>You go up and lick the armour, which floats away from you, and you hear some kind of strange whispering sounds. It tastes... metallic.</lick>
      <attr name="feature_switchable" type="boolean">false</attr>
      <throw>You attempt to grab the suit of armour to throw it, but somehow, no matter how hard you try, you cannot seem to get your hands to touch, let alone hold, the armour.</throw>
      <takemsg>You attempt to grab the suit of armour, but somehow, no matter how hard you try, you cannot seem to get your hands to touch, let alone hold, the armour.</takemsg>
      <enter>It looks lovely, but you would have to grab it somehow, and no matter how hard you try, you cannot grasp it. The world seems to somehow bend to prevent it falling into your grasp.</enter>
      <approach>You walk up to the strange suit of armour.</approach>
      <speak>If it's alive, it doesn't seem to be very interested in conversation.</speak>
      <turnon type="script">
        if (ListContains(ScopeReachable(), this)) {
          if (this.switchedon) {
            msg (DynamicTemplate("AlreadySwitchedOn", this))
          }
          else {
            if (HasString(this, "switchonmsg")) {
              msg (this.switchonmsg)
            }
            else {
              msg (DynamicTemplate("SwitchedOn", this))
            }
            this.switchedon = true
          }
        }
        else {
          msg (DynamicTemplate("DefaultTurnOn", this))
        }
      </turnon>
      <attack type="script">
        if (Sword.parent = player) {
          player.playerDeath = "You swing the sword towards the armor, and manage to miss completely. The sword passes through one of the absent joints. Before you can react, You feel a strong clasp of large hands lift you off the floor by the neck. The sword lies discarded on the ground. Black spots begin to form around your vision as everything slowly fades to black… "
        }
        else {
          player.playerDeath = "You flail out horribly ineffectively and nothing happens. But then before you can react, You feel a strong clasp of large hands lift you off the floor by the neck. Black spots begin to form around your vision as everything slowly fades to black…  "
        }
      </attack>
      <destroy type="script">
        if (Sword.parent = player) {
          player.playerDeath = "You swing the sword towards the armor, and manage to miss completely. The sword passes through one of the absent joints. Before you can react, You feel a strong clasp of large hands lift you off the floor by the neck. The sword lies discarded on the ground. Black spots begin to form around your vision as everything slowly fades to black… "
        }
        else {
          player.playerDeath = "You flail out horribly ineffectively and nothing happens. But then before you can react, You feel a strong clasp of large hands lift you off the floor by the neck. Black spots begin to form around your vision as everything slowly fades to black…  "
        }
      </destroy>
      <smash type="script">
        if (Sword.parent = player) {
          player.playerDeath = "You swing the sword towards the armor, and manage to miss completely. The sword passes through one of the absent joints. Before you can react, You feel a strong clasp of large hands lift you off the floor by the neck. The sword lies discarded on the ground. Black spots begin to form around your vision as everything slowly fades to black… "
        }
        else {
          player.playerDeath = "You flail out horribly ineffectively and nothing happens. But then before you can react, You feel a strong clasp of large hands lift you off the floor by the neck. Black spots begin to form around your vision as everything slowly fades to black…  "
        }
      </smash>
      <break type="script">
        if (Sword.parent = player) {
          player.playerDeath = "You swing the sword towards the armor, and manage to miss completely. The sword passes through one of the absent joints. Before you can react, You feel a strong clasp of large hands lift you off the floor by the neck. The sword lies discarded on the ground. Black spots begin to form around your vision as everything slowly fades to black… "
        }
        else {
          player.playerDeath = "You flail out horribly ineffectively and nothing happens. But then before you can react, You feel a strong clasp of large hands lift you off the floor by the neck. Black spots begin to form around your vision as everything slowly fades to black…  "
        }
      </break>
    </object>
    <object name="rug">
      <inherit name="editor_object" />
      <look>A simple rug. Part of the rug is turned over, revealing an open trap door </look>
      <eat>At the mere thought of tasting the rug, you curl your face in disgust. Who KNOWS who's put their feet on that thing!</eat>
      <throw>You pick up and throw the rug. That ought to teach it a lesson.</throw>
      <turnon>You pick it up, and give it a good couple of flaps, raising a lot of dust.</turnon>
      <takemsg>You would rather not carry a dusty rug around with you, and somehow, you don't think it will be useful in any way.</takemsg>
      <press>You press the rug against the ground, running your fingers through it, searching. You find nothing.</press>
      <enter>Not only can you not enter a rug, but if you could, the dust would be unbearable.</enter>
      <approach>You walk up and stand next to the rug.</approach>
      <speak>”Don't be such a nasty, dusty thing!” You're quite glad you got that off your chest.</speak>
      <attack type="script">
        if (Sword.parent = player) {
          msg ("You swing your sword at the rug, and leave a shallow cut on it's surface. That was pointless.")
        }
        else {
          msg ("You kick the rug. It's still giving you the silent treatment anyway.")
        }
      </attack>
    </object>
    <object name="Throne">
      <inherit name="editor_object" />
    </object>
    <object name="stamp">
      <inherit name="editor_object" />
      <take type="boolean">false</take>
      <takemsg>The stamp is held to the desk by a metal chain. You cannot take it.</takemsg>
      <feature_usegive />
      <selfuseon type="scriptdictionary">
        <item key="Key">
          UnlockExit (B2west)
          UnlockExit (A2east)
          msg ("You stamp the passport. You notice the passage west of you soundlessly open. The passport however crumbles to dust.")
          MoveObject (Key, STORAGE)
        </item>
      </selfuseon>
    </object>
    <object name="Rook2">
      <inherit name="editor_object" />
      <alias>Rook</alias>
    </object>
    <object name="Rook3">
      <inherit name="editor_object" />
      <alias>Rook</alias>
    </object>
    <object name="Rook4">
      <inherit name="editor_object" />
      <alias>Rook</alias>
    </object>
    <object name="Rook5">
      <inherit name="editor_object" />
      <alias>Rook</alias>
    </object>
    <object name="bench">
      <inherit name="editor_object" />
      <eat>You lick the bench, and immediately wish you hadn't. What you taste is a like a combination of dead dog, mint, and gasoline.</eat>
      <lick>You lick the bench, and immediately wish you hadn't. What you taste is a like a combination of dead dog, mint, and gasoline.</lick>
      <turnon>You search the bench for some kind of switch, but it appears to be nothing more than a bench.</turnon>
      <turnoff>You search the bench for some kind of switch, but it appears to be nothing more than a bench.</turnoff>
      <throw>Right. Because you routinely throw things that are twice your weight.</throw>
      <takemsg>If you want something portable upon which to rest, may I suggest a sleeping bag?</takemsg>
      <press>You press your full weight against the back of the bench, but it does not so much as move an inch.</press>
      <enter>Do you mean that you want to sit on the bench?</enter>
      <sit>You try to sit, and it only takes you a moment to realize how cold and unaccomodating it is. With a sigh, you stand up, resigning yourself to finding little rest here.</sit>
      <approach>You are standing directly in front of the bench.</approach>
      <speak>It seems cold and uncomfortable to begin with. Why would you want to talk anyways?</speak>
      <attack type="script">
        if (Sword.parent = player) {
          msg ("You swing your sword at the bench, and feel pain shoot up your arm as it hits. You observe no scratch on the bench. “You win this one,” you mutter threateningly at the bench.")
        }
        else {
          msg ("You kick the bench. Kicking rock is not fun. You wonder if you've broken something, or if it's just vanilla excruciating pain.")
        }
      </attack>
    </object>
    <object name="window1">
      <inherit name="editor_object" />
      <alias>window</alias>
      <look>Through the window, you can see what looks to be a kitchen.</look>
    </object>
    <object name="window2">
      <inherit name="editor_object" />
      <alias>window</alias>
      <look>Through this window, you think you can see what might be a bedroom.</look>
    </object>
    <object name="Checkpoint">
      <inherit name="editor_object" />
    </object>
  </object>
  <turnscript name="QueenOnTurn" />
  <turnscript name="RookOnTurn">
    <script>
      Counter.count = Counter.count+1
      if (Counter.count = 10) {
        Counter.count = 0
      }
      moveRookinRook
      RookRookKillZone
      OnTrainTracks
    </script>
  </turnscript>
  <verb>
    <property>enter</property>
    <pattern>enter</pattern>
    <defaultexpression>"You can't enter " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>approach</property>
    <pattern>approach</pattern>
    <defaultexpression>"You can't approach " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>lookin</property>
    <pattern>look in</pattern>
    <defaultexpression>"You can't look in " + object.article + "."</defaultexpression>
  </verb>
  <command>
    <pattern>level #text#</pattern>
    <script>
      level = text
      if (level = "RabbitHole") {
        game.level = "RabbitHole"
        setupRabbitHole
      }
      else if (level = "Pawn") {
        game.level = "Pawn"
        takedownMap
        setupPawn
      }
      else if (level = "PreBishop") {
        AddToInventory (Chessboard)
        game.level = "PreBishop"
        takedownMap
        setupPreBishop
      }
      else if (level = "Bishop") {
        AddToInventory (Chessboard)
        game.level = "Bishop"
        takedownMap
        setupBishop
      }
      else if (level = "PreRook") {
        AddToInventory (Chessboard)
        game.level = "PreRook"
        takedownMap
        setupPreRook
      }
      else if (level = "Rook") {
        AddToInventory (Chessboard)
        game.level = "Rook"
        takedownMap
        setupRook
      }
      else if (level = "PreKnight") {
        AddToInventory (Chessboard)
        game.level = "PreKnight"
        takedownMap
        setupPreKnight
      }
      else if (level = "Knight") {
        AddToInventory (Chessboard)
        game.level = "Knight"
        takedownMap
        setupKnight
      }
      else if (level = "Queen") {
        AddToInventory (Chessboard)
        game.level = "Queen"
        takedownMap
        setupQueen
      }
      else if (level = "PreQueen") {
        AddToInventory (Chessboard)
        game.level = "PreQueen"
        takedownMap
        setupPreQueen
      }
      else {
        msg ("... did you even read that?")
      }
    </script>
  </command>
  <turnscript name="PreBishopOnTurn">
    <script>
      preBishopRookKillZone
      preBishopKnightKillZone
      moveRookInPreBishop
      moveKnightInPreBishop
    </script>
  </turnscript>
  <turnscript name="PreKnightOnTurn">
    <script>
      preKnightRookKillZone
      moveRookInPreKnight
    </script>
  </turnscript>
  <turnscript name="PreQueenOnTurn">
    <script>
      preQueenBishopKillZone
      preQueenKnightKillZone
      preQueenRookKillZone
      moveRookInPreQueen
      moveKnightInPreQueen
      moveBishopInPreQueen
    </script>
  </turnscript>
  <turnscript name="displayASCII">
    <enabled />
    <script>
      showASCIImap
    </script>
  </turnscript>
  <command>
    <pattern>examine #text#</pattern>
    <script><![CDATA[
      if ((text="wall") or (text="Wall") or (text="WALL") or (text="walls") or (text="Walls") or (text="WALLS")) {
        if ((game.level = "Pawn") or (game.level = "RabbitHole") or (game.level = "PreRook") or (game.level = "PreKnight") or (game.level = "PreBishop")) {
          msg ("You look closely at the walls and see a complex interlocking, twisting and twining of brambles forming a solid block. You look up, and up and up and see them extending almost as far as you can see, a thin sliver of blue the only impression of a sky that’s left. ")
          msg ("There’s definitely no way through these things. ")
        }
        else {
          msg ("The walls appear to be impenetrable")
        }
      }
      else if ((player.parent = D1) and (game.level = "RabbitHole") and ((text="Mirror") or (text="MIRROR") or (text="mirror") or (text="Looking Glass") or (text="LookingGlass") or (text="LOOKING GLASS") or (text="looking glass"))) {
        msg ("A cool shiver tickles down your spine - this thing, this thing that you thought was a mirror - isn’t reflecting anything.")
        msg ("In fact… It seems to contain a world all its own… ")
      }
      else if ((player.parent = Goal.parent) and (game.level <> "RabbitHole") and ((text="Mirror") or (text="MIRROR") or (text="mirror") or (text="Looking Glass") or (text="LookingGlass") or (text="LOOKING GLASS") or (text="looking glass"))) {
        msg ("The mirror seems to contain a world all its own.")
      }
      else if ((player.parent = Lever.parent) and (game.level = "Bishop") and ((text="lever") or (text="Lever") or (text="LEVER"))) {
        msg ("The lever is exactly what it appears to be—a rusty old switch.")
      }
      else if (((player.parent = Sword.parent) or (Sword.parent = player)) and ((text="sword") or (text="Sword") or (text = "SWORD"))) {
        msg ("It is a plain, steel blade.")
      }
      else if ((player.parent = door.parent) and ((text="door") or (text="DOOR") or (text="Door"))) {
        msg ("It is a door. It lacks any remotely interesting characteristic.")
      }
      else if ((player.parent = monster.parent) and (game.level="Knight") and ((text="monster") or (text="Monster") or (text="MONSTER") or (text="armour") or (text="armor") or (text="Armour") or (text="Armor") or (text="ARMOUR") or (text = "ARMOR") or (text = "suit of armour") or (text = "Suit of Armour") or (text="SUIT OF ARMOUR") or (text="suit of armor") or (text="Suit of Armor") or (text="SUIT OF ARMOR"))) {
        msg ("It is ornately made, but as you get closer, and reach out your hand, it seems to shift, and you find yourself grasping at air, as if it refuses to be touched by your hands. You think you perceive some strange distortion of light in the parts where human limbs would be, but you cannot be sure.")
      }
      else if ((player.parent = rug.parent) and ((text="rug") or (text="Rug") or (text="RUG"))) {
        msg ("It's a dirty, dusty, disgusting rug.")
      }
      else if ((player.parent = bench.parent) and ((text="bench") or (text="Bench") or (text="BENCH"))) {
        msg ("It looks cold, rounded, large and solid. Not comfortable, but certainly durable.")
      }
      else if ((text="player") or (text="Player") or (text = "PLAYER") or (text="pc") or (text = "PC") or (text="me") or (text = "ME") or (text="Me") or (text = "myself") or (text = "Myself") or (text = "MYSELF") or (text = "self") or (text="Self") or (text="SELF")) {
        msg ("You want to know what you look like? Stand up from your computer, go to the nearest bathroom, and look in a mirror. Don't worry, we'll be here when you get back. This is a text adventure game. You don't even have to pause.")
      }
    ]]></script>
  </command>
  <turnscript name="checkOnPosition">
    <enabled />
    <script><![CDATA[
      if ((Contains (player.parent, Chessboard)) and (Chessboard.parent <> player) and (player.parent <> STORAGE)) {
        msg ("A flat square of glass lies on the ground… It appears to be a chessboard")
      }
      if ((Contains (player.parent, Key)) and (Key.parent <> player) and (player.parent <> STORAGE)) {
        msg ("You see a passport")
      }
      if ((Contains (player.parent, Sword)) and (Sword.parent <> player) and (player.parent <> STORAGE)) {
        msg ("A large, dark, sword lies in the path in front of you. ")
        msg ("A series of silver medals are tied around its hilt. ")
      }
      if ((Contains (player.parent,Goal)) and (player.parent <> STORAGE)) {
        if (game.level = "RabbitHole") {
          msg ("You see the oval glass hovering two feet in the air")
          msg ("Could it be that the person went through it?")
        }
        else if (game.level = "Pawn") {
          msg ("You see another mirror.")
          msg ("Like the other one, the reflection contains something else. Could this one be the same as the last?")
        }
        else if (game.level = "PreRook") {
          msg ("You see another strange mirror. Like the other one, the reflection contains something else. Could this one be the same as the last?")
        }
        else if (game.level = "Rook") {
          msg ("You see yet another mirror.  ")
        }
        else if (game.level = "PreKnight") {
          msg ("Yet another strange mirror hovers impossibly just in front of you. Once again, the reflection contains something that’s not there. ")
        }
        else if (game.level = "Knight") {
          msg ("And sure enough - another mirror. ")
        }
        else if (game.level = "PreBishop") {
          msg ("Another mirror? Really? Just how many more of these are there? ")
        }
        else if (game.level = "Bishop") {
          if (Lever.parent <> STORAGE) {
            msg ("As you look to mirror, you find to your alarm that the telltale sign of its offered escape is gone--you see only your own reflection staring back at you in the dim light. ")
          }
          else {
            msg ("There’s the mirror.")
          }
        }
        else if (game.level = "PreQueen") {
          msg ("This mirror’s larger than the other ones. ")
        }
      }
      if ((player.parent = G7) and (game.level = "Pawn")) {
        EnableTurnScript (KingOnTurn)
      }
      if ((player.parent = B2) and (game.level = "Rook")) {
      }
      PlPa = player.parent
      KiPa = King.parent
      if (((PlPa.y = KiPa.y) and (game.level = "Pawn") and (King.first=0) and ((KiPa.x-PlPa.x)=1)) or ((game.level = "Pawn") and (King.first=0) and ((PlPa.y-KiPa.y)=1) and (PlPa=H7) and (PlPa.x=KiPa.x))) {
        King.first = 1
        msg ("A stone statue of a bearded man stands directly in front of you, all in black marble.")
        msg ("There’s something sad, but hauntingly peaceful about his features, hands clasped in a penitent gesture, flat marble eyes staring at the grassy sky.")
        msg ("Now, your knowledge of chess isn’t that great, but it seems like that last Pawn is standing awfully close to the King… ")
      }
      else if ((player.parent = A7) and (KiPa.y = PlPa.y) and (game.level = "Pawn")) {
        msg ("There’s nowhere to go from here!")
      }
      // Special RabbitHole stuff
      if (game.level = "RabbitHole") {
        if (player.parent = E3) {
          if (player.turn = 0) {
            msg ("You see a shadow of the distance - another person?")
            player.turn = 1
          }
        }
        else if (player.parent = E2) {
          if (player.turn = 1) {
            msg ("Your heart skips a beat as you reach out - but before you get the chance - it turns to the west and disappears.")
            player.turn = 2
          }
        }
        else if (player.parent = E1) {
          if (player.turn = 2) {
            msg ("Upon approaching the area, the only thing you see is a single mirror to the west, an oval glass hovering two feet in the air.")
            player.turn = 3
          }
        }
      }
      if ((game.level = "Queen") and (player.parent = Throne.parent) and (player.parent <> STORAGE)) {
        msg ("You sit on the throne, and relax. ")
        msg ("Something about this just feels right. ")
        msg ("Something about this feels like what you were meant for all along. ")
        msg ("You sit there - you sit there for an immeasurable amount of time. Soon, the onyx crown feels like it’s a part of you, the midnight cloak feels warm instead of heavy. And the black-gold necklace, feels warm against your chest. ")
        msg ("One day, the brambly walls grow high into the sky once again.")
        msg ("You slowly rise off the throne, creaking forward, stretching unused muscles. ")
        msg ("And you take a step forward into the maze. ")
        msg ("")
        msg ("")
        msg ("")
        msg ("")
        msg ("")
        finish
      }
      if ((game.level = "Pawn") and (King.parent = G6)) {
        msg ("You hear a blood-curdling scream cut abruptly to an unearthly silence.")
        msg ("You quickly examine the chessboard only to see one of the white Pawn symbols has disappeared completely. It seems as if the Black King is standing where the White Pawn was…")
        msg ("Another White Pawn piece, however, is still on the board…")
      }
    ]]></script>
  </turnscript>
  <turnscript name="playerTurn">
    <script>
      // for PreQueen (One wall comes down on player's 6th turn in the level.)
      if (game.level = "PreQueen") {
        player.turn = player.turn + 1
        if (player.turn = 6) {
          UnlockExit (C5northeast)
          UnlockExit (C6southeast)
          UnlockExit (C6east)
          UnlockExit (D6west)
          UnlockExit (D6southwest)
          UnlockExit (D5northwest)
          DisableTurnScript (playerTurn)
          player.turn = 0
        }
      }
    </script>
  </turnscript>
  <turnscript name="playerQueenLevel">
    <script>
      if ((player.parent = A1) or (player.parent = A2) or (player.parent = A3) or (player.parent = A4) or (player.parent = A5) or (player.parent = A6) or (player.parent = A7) or (player.parent = A8) or (player.parent = H1) or (player.parent = H2) or (player.parent = H3) or (player.parent = H4) or (player.parent = H5) or (player.parent = H6) or (player.parent = H7) or (player.parent = H8) or (player.parent = B8) or (player.parent = C8) or (player.parent = D8) or (player.parent = E8) or (player.parent = F8) or (player.parent = G8) or (player.parent = B1) or (player.parent = C1) or (player.parent = D1) or (player.parent = E1) or (player.parent = F1) or (player.parent = G1)) {
        msg ("You take a step away from the confines of what was previously called ‘a maze.’ ")
        msg ("The black crown clatters to the floor while you take another uncertain step. ")
        msg ("The onyx golden necklace slides uselessly to the ground as you take another step forward. ")
        msg ("The midnight cloak flutters groundward as you take yet another step upon the grassy field. ")
        msg ("You continue walking, aimlessly, towards some uncertain destination.")
        msg ("You’re confused.")
        msg ("You’re lost.")
        msg ("You’re unsure of how you got there, who you are, what happened before –")
        msg ("All you know is – the throne is the last place you want to be.")
        msg ("Maybe if you keep walking.")
        msg ("Maybe if you keep on moving.")
        msg ("Something. Something…")
        msg ("Something should appear.")
        msg ("There can’t just be grass, right?")
        msg ("Surely it must end somewhere…")
        msg ("")
        msg ("")
        msg ("")
        msg ("")
        finish
      }
    </script>
  </turnscript>
  <turnscript name="describeWalls">
    <enabled />
    <script><![CDATA[
      if (game.level <> "Queen") {
        descWalls
      }
    ]]></script>
  </turnscript>
  <verb>
    <property>smash</property>
    <pattern>smash</pattern>
    <defaultexpression>"You can't destroy" + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>destroy</property>
    <pattern>destroy</pattern>
    <defaultexpression>"You can't destroy " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>break</property>
    <pattern>break</pattern>
    <defaultexpression>"You can't break " + object.article + "."</defaultexpression>
  </verb>
  <turnscript name="checkNearby">
    <enabled />
    <script>
      if (game.level = "PreKnight") {
        if ((player.parent.x = Rook.parent.x) and (player.parent.y = Rook.parent.y - 1)) {
          msg ("There seems to be a wall of thorns to your North that was not there before.")
        }
        else if ((player.parent.x = Rook.parent.x + 1) and (player.parent.y = Rook.parent.y)) {
          msg ("There seems to be a wall of thorns to your West that was not there before.")
        }
        else if ((player.parent.x = Rook.parent.x) and (player.parent.y = Rook.parent.y + 1)) {
          msg ("There seems to be a wall of thorns to your South that was not there before.")
        }
        else if ((player.parent.x = Rook.parent.x - 1) and (player.parent.y = Rook.parent.y)) {
          msg ("There seems to be a wall of thorns to your East that was not there before.")
        }
      }
      else if (game.level = "PreBishop") {
        if ((player.parent.x = Rook.parent.x) and (player.parent.y = Rook.parent.y - 1)) {
          msg ("There seems to be a wall of thorns to your North that was not there before.")
        }
        else if ((player.parent.x = Rook.parent.x + 1) and (player.parent.y = Rook.parent.y)) {
          msg ("There seems to be a wall of thorns to your West that was not there before.")
        }
        else if ((player.parent.x = Rook.parent.x) and (player.parent.y = Rook.parent.y + 1)) {
          msg ("There seems to be a wall of thorns to your South that was not there before.")
        }
        else if ((player.parent.x = Rook.parent.x - 1) and (player.parent.y = Rook.parent.y)) {
          msg ("There seems to be a wall of thorns to your East that was not there before.")
        }
        if ((player.parent.x = Knight.parent.x) and (player.parent.y = Knight.parent.y - 1)) {
          msg ("It looks like some sort of impenetrable darkness.")
          msg ("A haunting feeling crawls along your spine as you stare at it, like something’s staring right back at you.")
          msg ("Every now and then, you’ll catch the glimpse of something within the murky depths, but it’s like a vague sketch, something without bounds.")
          msg ("Every time you think you catch a ridge, a line, something solid, it shifts and changes.")
        }
        else if ((player.parent.x = Knight.parent.x + 1) and (player.parent.y = Knight.parent.y)) {
          msg ("It looks like some sort of impenetrable darkness.")
          msg ("A haunting feeling crawls along your spine as you stare at it, like something’s staring right back at you.")
          msg ("Every now and then, you’ll catch the glimpse of something within the murky depths, but it’s like a vague sketch, something without bounds.")
          msg ("Every time you think you catch a ridge, a line, something solid, it shifts and changes.")
        }
        else if ((player.parent.x = Knight.parent.x) and (player.parent.y = Knight.parent.y + 1)) {
          msg ("It looks like some sort of impenetrable darkness.")
          msg ("A haunting feeling crawls along your spine as you stare at it, like something’s staring right back at you.")
          msg ("Every now and then, you’ll catch the glimpse of something within the murky depths, but it’s like a vague sketch, something without bounds.")
          msg ("Every time you think you catch a ridge, a line, something solid, it shifts and changes.")
        }
        else if ((player.parent.x = Knight.parent.x - 1) and (player.parent.y = Knight.parent.y)) {
          msg ("It looks like some sort of impenetrable darkness.")
          msg ("A haunting feeling crawls along your spine as you stare at it, like something’s staring right back at you.")
          msg ("Every now and then, you’ll catch the glimpse of something within the murky depths, but it’s like a vague sketch, something without bounds.")
          msg ("Every time you think you catch a ridge, a line, something solid, it shifts and changes.")
        }
      }
      else if (game.level = "PreQueen") {
        if ((player.parent.x = Rook.parent.x) and (player.parent.y = Rook.parent.y - 1)) {
          msg ("There seems to be a wall of thorns to your North that was not there before.")
        }
        else if ((player.parent.x = Rook.parent.x + 1) and (player.parent.y = Rook.parent.y)) {
          msg ("There seems to be a wall of thorns to your West that was not there before.")
        }
        else if ((player.parent.x = Rook.parent.x) and (player.parent.y = Rook.parent.y + 1)) {
          msg ("There seems to be a wall of thorns to your South that was not there before.")
        }
        else if ((player.parent.x = Rook.parent.x - 1) and (player.parent.y = Rook.parent.y)) {
          msg ("There seems to be a wall of thorns to your East that was not there before.")
        }
        if ((player.parent.x = Knight.parent.x) and (player.parent.y = Knight.parent.y - 1)) {
          msg ("It looks like some sort of impenetrable darkness.")
          msg ("A haunting feeling crawls along your spine as you stare at it, like something’s staring right back at you.")
          msg ("Every now and then, you’ll catch the glimpse of something within the murky depths, but it’s like a vague sketch, something without bounds.")
          msg ("Every time you think you catch a ridge, a line, something solid, it shifts and changes.")
        }
        else if ((player.parent.x = Knight.parent.x + 1) and (player.parent.y = Knight.parent.y)) {
          msg ("It looks like some sort of impenetrable darkness.")
          msg ("A haunting feeling crawls along your spine as you stare at it, like something’s staring right back at you.")
          msg ("Every now and then, you’ll catch the glimpse of something within the murky depths, but it’s like a vague sketch, something without bounds.")
          msg ("Every time you think you catch a ridge, a line, something solid, it shifts and changes.")
        }
        else if ((player.parent.x = Knight.parent.x) and (player.parent.y = Knight.parent.y + 1)) {
          msg ("It looks like some sort of impenetrable darkness.")
          msg ("A haunting feeling crawls along your spine as you stare at it, like something’s staring right back at you.")
          msg ("Every now and then, you’ll catch the glimpse of something within the murky depths, but it’s like a vague sketch, something without bounds.")
          msg ("Every time you think you catch a ridge, a line, something solid, it shifts and changes.")
        }
        else if ((player.parent.x = Knight.parent.x - 1) and (player.parent.y = Knight.parent.y)) {
          msg ("It looks like some sort of impenetrable darkness.")
          msg ("A haunting feeling crawls along your spine as you stare at it, like something’s staring right back at you.")
          msg ("Every now and then, you’ll catch the glimpse of something within the murky depths, but it’s like a vague sketch, something without bounds.")
          msg ("Every time you think you catch a ridge, a line, something solid, it shifts and changes.")
        }
        if ((player.parent.x = Bishop.parent.x) and (player.parent.y = Bishop.parent.y - 1)) {
          msg ("You look around and see nothing of interest but a cool chill runs down your spine.")
          msg ("It’s like something’s watching you.")
        }
        else if ((player.parent.x = Bishop.parent.x + 1) and (player.parent.y = Bishop.parent.y)) {
          msg ("You look around and see nothing of interest but a cool chill runs down your spine.")
          msg ("It’s like something’s watching you.")
        }
        else if ((player.parent.x = Bishop.parent.x) and (player.parent.y = Bishop.parent.y + 1)) {
          msg ("You look around and see nothing of interest but a cool chill runs down your spine.")
          msg ("It’s like something’s watching you.")
        }
        else if ((player.parent.x = Bishop.parent.x - 1) and (player.parent.y = Bishop.parent.y)) {
          msg ("You look around and see nothing of interest but a cool chill runs down your spine.")
          msg ("It’s like something’s watching you.")
        }
      }
    </script>
  </turnscript>
  <verb>
    <property>attack</property>
    <pattern>attack</pattern>
    <defaultexpression>"You can't attack " + object.article + "."</defaultexpression>
  </verb>
  <command>
    <pattern>I died?</pattern>
    <script>
      msg ("Probably. Sorry 'bout that... Keep trying!!!")
    </script>
  </command>
  <command>
    <pattern>kill #text# with sword</pattern>
    <script>
      if (Sword.parent = player) {
        if ((text="Knight")or(text="knight")or(text="KNIGHT")or(text="hand")or(text="shadow")or(text="Hand")or(text="Shadow")or(text="HAND")or(text="SHADOW")) {
          if (player.parent=Knight.parent) {
            msg ("You swing the sword out, but the hand catches it mid-swing and takes it from you. ")
            msg ("And for a moment, you think you see a white cheshire grin smiling back at you from the depths. ")
            MoveObject (Sword, STORAGE)
            MoveObject (monster, STORAGE)
            UnlockExit (B2north)
            UnlockExit (B3south)
            UnlockExit (B5east)
            UnlockExit (C5west)
            UnlockExit (C5south)
            UnlockExit (C4north)
            MoveObject (Knight, C5)
          }
          else {
            msg ("You aren't close enough to the Knight to use the sword on him.")
          }
        }
        else if ((text = "myself") or (text = "me") or (text = "self")) {
          if ((Sword.parent = player)) {
            msg ("Please don't try to hurt yourself.")
          }
          else {
            msg ("You don't have a sword.")
          }
        }
        else if ((text = "door") or (text = "Door") or (text = "DOOR")) {
          if ((player.parent = door.parent)) {
            msg ("It takes effort, but you eventually smash through the door.")
            MoveObject (door, STORAGE)
            UnlockExit (C3west)
            UnlockExit (B3east)
          }
        }
        else {
          msg ("You try to kill the " + text + " with the sword, and fail")
        }
      }
      else {
        msg ("You don't have a sword.")
      }
    </script>
  </command>
  <verb>
    <property>ripapart</property>
    <pattern>rip apart</pattern>
    <defaultexpression>"You can't rip apart " + object.article + "."</defaultexpression>
  </verb>
  <turnscript name="ifDead">
    <enabled />
    <script>
      if ((player.playerDeath = null) or (player.playerDeath = "null")) {
      }
      else {
        msg (" ")
        msg (" ")
        msg (player.playerDeath)
        msg (" ")
        msg (" ")
        msg ("Would you like to restart?")
        wait {
          ClearScreen
          if (game.level = "Pawn") {
            takedownMap
            setupPawn
            player.playerDeath = "null"
          }
          else if (game.level = "PreRook") {
            takedownMap
            setupPreRook
            player.playerDeath = "null"
          }
          else if (game.level = "Rook") {
            takedownMap
            setupRook
            player.playerDeath = "null"
          }
          else if (game.level = "PreBishop") {
            takedownMap
            setupPreBishop
            player.playerDeath = "null"
          }
          else if (game.level = "Bishop") {
            takedownMap
            setupBishop
            player.playerDeath = "null"
          }
          else if (game.level = "PreKnight") {
            takedownMap
            setupPreKnight
            player.playerDeath = "null"
          }
          else if (game.level = "Knight") {
            takedownMap
            setupKnight
            player.playerDeath = "null"
          }
          else if (game.level = "Queen") {
            takedownMap
            setupQueen
            player.playerDeath = "null"
          }
          else if (game.level = "PreQueen") {
            takedownMap
            setupPreQueen
            player.playerDeath = "null"
          }
        }
      }
    </script>
  </turnscript>
  <verb>
    <property>walkthrough</property>
    <pattern>walk through</pattern>
    <defaultexpression>"You can't walk through " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>walkin</property>
    <pattern>walk in</pattern>
    <defaultexpression>"You can't walk in " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>jump</property>
    <pattern>jump</pattern>
    <defaultexpression>"You can't jump " + object.article + "."</defaultexpression>
  </verb>
  <command>
    <pattern>go through #text#</pattern>
    <script>
      if ((text = "mirror") or (text = "MIRROR") or (text="Mirror") or (text="Looking Glass") or (text="looking glass") or (text="LOOKING GLASS") or (text = "LookingGlass") or (text = "LOOKINGGLASS") or (text = "lookingglass") or (text = "glass") or (text = "GLASS") or (text = "Glass") or (text = "oval glass") or (text = "OvalGlass") or (text = "OVAL GLASS") or (text = "Oval Glass") or (text = "ovalglass") or (text = "OVALGLASS") or (text = "floating oval glass")) {
        mirrorEntered
      }
    </script>
  </command>
  <command>
    <pattern>go in #text#</pattern>
    <script>
      if ((text = "mirror") or (text = "MIRROR") or (text="Mirror") or (text="Looking Glass") or (text="looking glass") or (text="LOOKING GLASS") or (text = "LookingGlass") or (text = "LOOKINGGLASS") or (text = "lookingglass") or (text = "glass") or (text = "GLASS") or (text = "Glass") or (text = "oval glass") or (text = "OvalGlass") or (text = "OVAL GLASS") or (text = "Oval Glass") or (text = "ovalglass") or (text = "OVALGLASS") or (text = "floating oval glass")) {
        mirrorEntered
      }
    </script>
  </command>
  <verb>
    <property>breakdown</property>
    <pattern>break down</pattern>
    <defaultexpression>"You can't break down " + object.article + "."</defaultexpression>
  </verb>
  <command name="trapdoor">
    <script>
      if (game.level = Knight) {
        if (text = "trap door") {
          if (player.parent = C3) {
            MoveObject (player, H8)
          }
          else if (player.parent = A3) {
            MoveObject (player, D6)
          }
        }
        if (text = "stairs") {
          if (player.parent = C3) {
            MoveObject (player, H8)
          }
          else if (player.parent = A3) {
            MoveObject (player, D6)
          }
        }
        if (text = "path") {
          if (player.parent = C3) {
            MoveObject (player, H8)
          }
          else if (player.parent = A3) {
            MoveObject (player, D6)
          }
        }
      }
    </script>
    <pattern>go down #text# </pattern>
  </command>
  <command>
    <script>
      if (game.level = Knight) {
        if (text = "trap door") {
          if (player.parent = H8) {
            MoveObject (player, C3)
          }
          else if (player.parent = D6) {
            MoveObject (player, A3)
          }
        }
        if (text = "stairs") {
          if (player.parent = H8) {
            MoveObject (player, C3)
          }
          else if (player.parent = D6) {
            MoveObject (player, A3)
          }
        }
        if (text = "path") {
          if (player.parent = H8) {
            MoveObject (player, C3)
          }
          else if (player.parent = D6) {
            MoveObject (player, A3)
          }
        }
      }
    </script>
    <pattern>go up #text#</pattern>
  </command>
  <verb>
    <property>stamp</property>
    <pattern>stamp</pattern>
    <defaultexpression>"You can't stamp " + object.article + "."</defaultexpression>
  </verb>
  <function name="moveKnight"><![CDATA[
    if (Knight.parent = C3) {
      MoveObject (Knight, B1)
      C3.inRoom = " "
    }
    else if (Knight.parent = B1) {
      MoveObject (Knight, A3)
      B1.inRoom = " "
    }
    else if (Knight.parent = A3) {
      MoveObject (Knight, B5)
      A3.inRoom = " "
    }
    else if (Knight.parent = B5) {
      MoveObject (Knight, E4)
      B5.inRoom = " "
    }
    else if (Knight.parent = E4) {
      MoveObject (Knight, F2)
      E4.inRoom = " "
    }
    else if (Knight.parent = F2) {
      MoveObject (Knight, D1)
      F2.inRoom = " "
    }
    else if (Knight.parent = D1) {
      MoveObject (Knight, B2)
      D1.inRoom = " "
    }
    else if (Knight.parent = B2) {
      MoveObject (Knight, A4)
      B2.inRoom = " "
    }
    else if (Knight.parent = A4) {
      MoveObject (Knight, C3)
      A4.inRoom = " "
    }
    else if (Knight.parent = A2) {
      MoveObject (Knight, C3)
      A2.inRoom = " "
    }
    if ((player.parent = Knight.parent) and (player.parent <> STORAGE)) {
      deathByKnight
    }
  ]]></function>
  <function name="moveBishop"><![CDATA[
    if (game.level = "Bishop") {
      if ((player.parent = Bishop.parent) and (player.parent <> STORAGE)) {
        deathByBishop
      }
      else if ((Pawn.parent = Bishop.parent) and (Pawn.parent <> STORAGE)) {
        MoveObject (Pawn, STORAGE)
        msg ("As you attempt to move, you see a dark shape in the distance. You watch in horror as the light from the security camera is cast on the shape and it bursts into flames, emiting a near deafening cry of terror. A long, slight shiver runs the full length of your spine, as you lick your dry lips. ")
      }
      if ((player.parent = Lever.parent) and (player.parent <> STORAGE)) {
        msg ("A few feet in front of you there is a lever tilted away from you about three feet in height. It seems to be rusted over somewhat, but you think that you could probably move it if you gave it a forceful pull.")
      }
      if (Bishop.parent = A1) {
        MoveObject (Bishop, B2)
        A1.inRoom = " "
      }
      else if (Bishop.parent = B2) {
        MoveObject (Bishop, A3)
        B2.inRoom = " "
      }
      else if (Bishop.parent = A3) {
        MoveObject (Bishop, C1)
        A3.inRoom = " "
      }
      else if (Bishop.parent = C1) {
        MoveObject (Bishop, D2)
        C1.inRoom = " "
      }
      else if (Bishop.parent = D2) {
        MoveObject (Bishop, C3)
        D2.inRoom = " "
      }
      else if (Bishop.parent = C3) {
        MoveObject (Bishop, A1)
        C3.inRoom = " "
      }
      else if (Bishop.parent = A5) {
        MoveObject (Bishop, C7)
        A5.inRoom = " "
      }
      else if (Bishop.parent = C7) {
        MoveObject (Bishop, B8)
        C7.inRoom = " "
      }
      else if (Bishop.parent = B8) {
        MoveObject (Bishop, A7)
        B8.inRoom = " "
      }
      else if (Bishop.parent = A7) {
        MoveObject (Bishop, B6)
        A7.inRoom = " "
      }
      else if (Bishop.parent = B6) {
        MoveObject (Bishop, A5)
        B6.inRoom = " "
      }
      else if (Bishop.parent = E1) {
        MoveObject (Bishop, G3)
        E1.inRoom = " "
      }
      else if (Bishop.parent = G3) {
        MoveObject (Bishop, H2)
        G3.inRoom = " "
      }
      else if (Bishop.parent = H2) {
        MoveObject (Bishop, G1)
        H2.inRoom = " "
      }
      else if (Bishop.parent = G1) {
        MoveObject (Bishop, E3)
        G1.inRoom = " "
      }
      else if (Bishop.parent = E3) {
        MoveObject (Bishop, F2)
        E3.inRoom = " "
      }
      else if (Bishop.parent = F2) {
        MoveObject (Bishop, E1)
        F2.inRoom = " "
      }
      else {
        Bishop.parent.inRoom = " "
        MoveObject (Bishop, D3)
      }
      if ((player.parent = Bishop.parent) and (player.parent <> STORAGE)) {
        deathByBishop
      }
      else if ((Pawn.parent = Bishop.parent) and (Pawn.parent <> STORAGE)) {
        MoveObject (Pawn, STORAGE)
        msg ("As you attempt to move, you see a dark shape in the distance. You watch in horror as the light from the security camera is cast on the shape and it bursts into flames, emiting a near deafening cry of terror. A long, slight shiver runs the full length of your spine, as you lick your dry lips. ")
      }
    }
  ]]></function>
  <function name="showASCIImap"><![CDATA[
    // RabbitHole -> Pawn -> Rook -> Knight -> Bishop -> Queen
    player.parent.inRoom = "♙"
    if (HasAttribute(King.parent, "inRoom")) {
      King.parent.inRoom = "♚"
    }
    if (HasAttribute(monster.parent, "inRoom")) {
      monster.parent.inRoom = "♟"
    }
    if (HasAttribute(Key.parent, "inRoom")) {
      Key.parent.inRoom = " ஈ "
    }
    if (HasAttribute(Pawn.parent, "inRoom")) {
      Pawn.parent.inRoom = "♙"
    }
    if (HasAttribute(Rook.parent, "inRoom")) {
      Rook.parent.inRoom = "♜"
    }
    if (HasAttribute(Knight.parent, "inRoom")) {
      if ((Knight.parent = B3) and (game.level = "Knight")) {
        Knight.parent.inRoom = "♘"
      }
      else {
        Knight.parent.inRoom = "♞"
      }
    }
    if (HasAttribute(Bishop.parent, "inRoom")) {
      Bishop.parent.inRoom = "♝"
    }
    if (HasAttribute(Queen.parent, "inRoom")) {
      Queen.parent.inRoom = "♕"
    }
    if (HasAttribute(Goal.parent, "inRoom")) {
      Goal.parent.inRoom = "۝"
    }
    if (HasAttribute(Lever.parent, "inRoom")) {
      Lever.parent.inRoom = "Ի"
    }
    if (HasAttribute(Bishop2.parent, "inRoom")) {
      Bishop2.parent.inRoom = "♝"
    }
    if (HasAttribute(Throne.parent, "inRoom")) {
      Throne.parent.inRoom = "Д"
    }
    if (Chessboard.parent = player) {
      PrintCentered ("________________________")
      PrintCentered ("|  "+A8.inRoom+"  |  "+B8.inRoom+"  |  "+C8.inRoom+"  |  "+D8.inRoom+"  |  "+E8.inRoom+"  |  "+F8.inRoom+"  |  "+G8.inRoom+"  |  "+H8.inRoom+"  |")
      PrintCentered ("________________________")
      PrintCentered ("| "+A7.inRoom+" | "+B7.inRoom+" | "+C7.inRoom+" | "+D7.inRoom+" | "+E7.inRoom+" | "+F7.inRoom+" | "+G7.inRoom+" | "+H7.inRoom+" |")
      PrintCentered ("________________________")
      PrintCentered ("| "+A6.inRoom+" | "+B6.inRoom+" | "+C6.inRoom+" | "+D6.inRoom+" | "+E6.inRoom+" | "+F6.inRoom+" | "+G6.inRoom+" | "+H6.inRoom+" |")
      PrintCentered ("________________________")
      PrintCentered ("| "+A5.inRoom+" | "+B5.inRoom+" | "+C5.inRoom+" | "+D5.inRoom+" | "+E5.inRoom+" | "+F5.inRoom+" | "+G5.inRoom+" | "+H5.inRoom+" |")
      PrintCentered ("________________________")
      PrintCentered ("| "+A4.inRoom+" | "+B4.inRoom+" | "+C4.inRoom+" | "+D4.inRoom+" | "+E4.inRoom+" | "+F4.inRoom+" | "+G4.inRoom+" | "+H4.inRoom+" |")
      PrintCentered ("________________________")
      PrintCentered ("| "+A3.inRoom+ " | "+B3.inRoom+" | "+C3.inRoom+" | "+D3.inRoom+" | "+E3.inRoom+" | "+F3.inRoom+" | "+G3.inRoom+" | "+H3.inRoom+" |")
      PrintCentered ("________________________")
      PrintCentered ("| "+A2.inRoom+" | "+B2.inRoom+" | "+C2.inRoom+" | "+D2.inRoom+" | "+E2.inRoom+" | "+F2.inRoom+" | "+G2.inRoom+" | "+H2.inRoom+" |")
      PrintCentered ("________________________")
      PrintCentered ("| "+A1.inRoom+" | "+B1.inRoom+" | "+C1.inRoom+" | "+D1.inRoom+" | "+E1.inRoom+" | "+F1.inRoom+" | "+G1.inRoom+" | "+H1.inRoom+" |")
      PrintCentered ("________________________")
    }
  ]]></function>
  <function name="lookNorth" type="int"><![CDATA[
    playerRoom = player.parent
    playerX = playerRoom.x
    playerY = playerRoom.y
    visList = NewObjectList()
    top = 8
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x")) {
        if (room.x = playerX) {
          if (room.y >= playerY) {
            list add (visList, room)
            if (HasAttribute(room, "northWall")) {
              if (room.northWall = 1) {
                if (room.y < top) {
                  top = room.y
                }
              }
            }
          }
        }
      }
    }
    foreach (visRoom, visList) {
      if (visRoom.y < top) {
        if (Contains (visRoom, Knight)) {
          msg ("You see a Knight")
        }
        else if (Contains (visRoom, Pawn)) {
          msg ("You see a Pawn")
        }
        else if (Contains (visRoom, Rook)) {
          msg ("You see a Rook")
        }
        else if (Contains (visRoom, Bishop)) {
          msg ("You see a Bishop")
        }
        else if (Contains (visRoom, Chessboard)) {
          if ((Chessboard.parent  <> player) and (Chessboard.parent.x <> playerX)) {
            msg ("You see a Chessboard")
          }
        }
        else if (Contains (visRoom, King)) {
          msg ("You see a King")
        }
      }
    }
  ]]></function>
  <function name="lookSouth"><![CDATA[
    playerRoom = player.parent
    playerX = playerRoom.x
    playerY = playerRoom.y
    visList = NewObjectList()
    bottom = 0
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x")) {
        if (room.x = playerX) {
          if (room.y <= playerY) {
            list add (visList, room)
            if (HasAttribute(room, "southWall")) {
              if (room.southWall = 1) {
                if (room.y > bottom) {
                  bottom = room.y
                }
              }
            }
          }
        }
      }
    }
    foreach (visRoom, visList) {
      if (visRoom.y > bottom) {
        if (Contains (visRoom, Knight)) {
          msg ("You see the Knight!")
        }
        else if (Contains (visRoom, Pawn)) {
          msg ("You see a Pawn")
        }
        else if (Contains (visRoom, Rook)) {
          msg ("You see a Rook")
        }
        else if (Contains (visRoom, Bishop)) {
          msg ("You see a Bishop")
        }
        else if (Contains (visRoom, Chessboard)) {
          if ((Chessboard.parent  <> player) and (Chessboard.parent.x <> playerX)) {
            msg ("You see a Chessboard")
          }
        }
        else if (Contains (visRoom, King)) {
          msg ("You see a King")
        }
      }
    }
  ]]></function>
  <function name="lookEast"><![CDATA[
    playerRoom = player.parent
    playerX = playerRoom.x
    playerY = playerRoom.y
    visList = newObjectList()
    eastmost = 8
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x")) {
        if (room.x >= playerX) {
          if (room.y = playerY) {
            list add (visList, room)
            if (HasAttribute(room,"eastWall")) {
              if (room.eastWall = 1) {
                if (room.x < eastmost) {
                  eastmost = room.x
                }
              }
            }
          }
        }
      }
    }
    foreach (visRoom, visList) {
      if (visRoom.x < eastmost) {
        if (Contains (visRoom, Knight)) {
          msg ("You see the Knight!")
        }
        else if (Contains (visRoom, Pawn)) {
          msg ("You see a Pawn")
        }
        else if (Contains (visRoom, Rook)) {
          msg ("You see a Rook")
        }
        else if (Contains (visRoom, Bishop)) {
          msg ("You see a Bishop")
        }
        else if (Contains (visRoom, Chessboard)) {
          if ((Chessboard.parent  <> player) and (Chessboard.parent.x <> playerX)) {
            msg ("You see a Chessboard")
          }
        }
        else if (Contains (visRoom, King)) {
          msg ("You see a King")
        }
      }
    }
  ]]></function>
  <function name="lookWest"><![CDATA[
    playerRoom = player.parent
    playerX = playerRoom.x
    playerY = playerRoom.y
    visList = NewObjectList()
    westmost = 0
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x")) {
        if (room.x <= playerX) {
          if (room.y = playerY) {
            list add (visList, room)
            if (HasAttribute(room, "westWall")) {
              if (room.southWall = 1) {
                if (room.x > westmost) {
                  westmost = room.x
                }
              }
            }
          }
        }
      }
    }
    foreach (visRoom, visList) {
      if (visRoom.x > westmost) {
        if (Contains (visRoom, Knight)) {
          msg ("You see the Knight!")
        }
        else if (Contains (visRoom, Pawn)) {
          msg ("You see a Pawn")
        }
        else if (Contains (visRoom, Rook)) {
          msg ("You see a Rook")
        }
        else if (Contains (visRoom, Bishop)) {
          msg ("You see a Bishop")
        }
        else if (Contains (visRoom, Chessboard)) {
          if ((Chessboard.parent  <> player) and (Chessboard.parent.x <> playerX)) {
            msg ("You see a Chessboard")
          }
        }
        else if (Contains (visRoom, King)) {
          msg ("You see a King")
        }
      }
    }
  ]]></function>
  <function name="lookNorthEast"><![CDATA[
    playerRoom = player.parent
    playerX = playerRoom.x
    playerY = playerRoom.y
    visList = NewObjectList()
    far = 8
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x")) {
        if (room.x >= playerX) {
          if (room.y >= playerY) {
            if ((room.y-playerY)=(room.x-playerX)) {
              list add (visList, room)
              if (HasAttribute(room, "northWall") and HasAttribute(room, "eastWall")) {
                if (room.y < far) {
                  far = room.y
                }
              }
              else if (HasAttribute(room, "westWall") and HasAttribute(room, "southWall")) {
                if ((room.y-1) < far) {
                  far = room.y-1
                }
              }
            }
          }
        }
      }
    }
    foreach (visRoom, visList) {
      if (visRoom.y < far) {
        if (Contains (visRoom, Knight)) {
          msg ("You see the Knight!")
        }
        else if (Contains (visRoom, Pawn)) {
          msg ("You see a Pawn")
        }
        else if (Contains (visRoom, Rook)) {
          msg ("You see a Rook")
        }
        else if (Contains (visRoom, Bishop)) {
          msg ("You see a Bishop")
        }
        else if (Contains (visRoom, Chessboard)) {
          if ((Chessboard.parent  <> player) and (Chessboard.parent.x <> playerX)) {
            msg ("You see a Chessboard")
          }
        }
        else if (Contains (visRoom, King)) {
          msg ("You see a King")
        }
      }
    }
  ]]></function>
  <function name="lookNorthWest"><![CDATA[
    playerRoom = player.parent
    playerX = playerRoom.x
    playerY = playerRoom.y
    visList = NewObjectList()
    far = 8
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x")) {
        if (room.x <= playerX) {
          if (room.y >= playerY) {
            if ((room.y-playerY)=(playerX-room.x)) {
              list add (visList, room)
              if (HasAttribute(room, "northWall") and HasAttribute(room, "westWall")) {
                if (room.y < far) {
                  far = room.y
                }
              }
              else if (HasAttribute(room,"southWall") and HasAttribute(room,"eastWall")) {
                if ((room.y-1) < far) {
                  far = room.y-1
                }
              }
            }
          }
        }
      }
    }
    foreach (visRoom, visList) {
      if (visRoom.y < far) {
        if (Contains (visRoom, Knight)) {
          msg ("You see the Knight!")
        }
        else if (Contains (visRoom, Pawn)) {
          msg ("You see a Pawn")
        }
        else if (Contains (visRoom, Rook)) {
          msg ("You see a Rook")
        }
        else if (Contains (visRoom, Bishop)) {
          msg ("You see a Bishop")
        }
        else if (Contains (visRoom, Chessboard)) {
          if ((Chessboard.parent  <> player) and (Chessboard.parent.x <> playerX)) {
            msg ("You see a Chessboard")
          }
        }
        else if (Contains (visRoom, King)) {
          msg ("You see a King")
        }
      }
    }
  ]]></function>
  <function name="lookSouthEast"><![CDATA[
    playerRoom = player.parent
    playerX = playerRoom.x
    playerY = playerRoom.y
    visList = NewObjectList()
    far = 0
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x")) {
        if (room.x >= playerX) {
          if (room.y <= playerY) {
            if ((playerY-room.y)=(room.x-playerX)) {
              list add (visList, room)
              if (HasAttribute(room, "southWall") and HasAttribute(room, "eastWall")) {
                if (room.y > far) {
                  far = room.y
                }
              }
              else if (HasAttribute(room, "northWall") and HasAttribute(room, "westWall")) {
                if ((room.y+1)>far) {
                  far = room.y+1
                }
              }
            }
          }
        }
      }
    }
    foreach (visRoom, visList) {
      if (visRoom.y > far) {
        if (Contains (visRoom, Knight)) {
          msg ("You see the Knight!")
        }
        else if (Contains (visRoom, Pawn)) {
          msg ("You see a Pawn")
        }
        else if (Contains (visRoom, Rook)) {
          msg ("You see a Rook")
        }
        else if (Contains (visRoom, Bishop)) {
          msg ("You see a Bishop")
        }
        else if (Contains (visRoom, Chessboard)) {
          if ((Chessboard.parent  <> player) and (Chessboard.parent.x <> playerX)) {
            msg ("You see a Chessboard")
          }
        }
        else if (Contains (visRoom, King)) {
          msg ("You see a King")
        }
      }
    }
  ]]></function>
  <function name="lookSouthWest"><![CDATA[
    playerRoom = player.parent
    playerX = playerRoom.x
    playerY = playerRoom.y
    visList = NewObjectList()
    far = 0
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x")) {
        if (room.x <= playerX) {
          if (room.y <= playerY) {
            if ((playerY-room.y)=(playerX-room.x)) {
              list add (visList, room)
              if (HasAttribute(room, "southWall") and HasAttribute(room, "westWall")) {
                if (room.y > far) {
                  far = room.y
                }
              }
              else if (HasAttribute(room, "northWall") and HasAttribute(room, "eastWall")) {
                if (room.y+1 > far) {
                  far = room.y+1
                }
              }
            }
          }
        }
      }
    }
    foreach (visRoom, visList) {
      if (visRoom.y > far) {
        if (Contains (visRoom, Knight)) {
          msg ("You see the Knight!")
        }
        else if (Contains (visRoom, Pawn)) {
          msg ("You see a Pawn")
        }
        else if (Contains (visRoom, Rook)) {
          msg ("You see a Rook")
        }
        else if (Contains (visRoom, Bishop)) {
          msg ("You see a Bishop")
        }
        else if (Contains (visRoom, Chessboard)) {
          if ((Chessboard.parent <> player) and (Chessboard.parent.x <> playerX)) {
            msg ("You see a Chessboard")
          }
        }
        else if (Contains (visRoom, King)) {
          msg ("You see a King")
        }
      }
    }
  ]]></function>
  <function name="deathByKnight">
    Knight.parent.inRoom = " "
    MoveObject (Knight, player.parent)
    MoveObject (player, STORAGE)
    player.playerDeath = "You feel a cold steel stab through your entrails. You look down at your stomach only to see a familiar blade sticking out as red oozes down your stomach. You fall to your knees as a thick darkness swarms around you…"
  </function>
  <function name="setupPawn">
    LockExit (A7south)
    LockExit (A7north)
    LockExit (A7northeast)
    LockExit (A7southeast)
    LockExit (B7south)
    LockExit (B7north)
    LockExit (B7northwest)
    LockExit (B7northeast)
    LockExit (B7southwest)
    LockExit (B7southeast)
    LockExit (C7south)
    LockExit (C7north)
    LockExit (C7northwest)
    LockExit (C7northeast)
    LockExit (C7southwest)
    LockExit (C7southeast)
    LockExit (D7south)
    LockExit (D7north)
    LockExit (D7northwest)
    LockExit (D7northeast)
    LockExit (D7southwest)
    LockExit (D7southeast)
    LockExit (E7south)
    LockExit (E7north)
    LockExit (E7northwest)
    LockExit (E7northeast)
    LockExit (E7southwest)
    LockExit (E7southeast)
    LockExit (F7south)
    LockExit (F7north)
    LockExit (F7northwest)
    LockExit (F7northeast)
    LockExit (F7southwest)
    LockExit (F7southeast)
    LockExit (G7south)
    LockExit (G7north)
    LockExit (G7northwest)
    LockExit (G7northeast)
    LockExit (G7southwest)
    LockExit (G7southeast)
    LockExit (H6northwest)
    LockExit (H7northwest)
    LockExit (H7southwest)
    LockExit (H8west)
    LockExit (H8southwest)
    set (A7, "southWall", 1)
    set (A7, "northWall", 1)
    set (B7, "southWall", 1)
    set (B7, "northWall", 1)
    set (C7, "southWall", 1)
    set (C7, "northWall", 1)
    set (D7, "southWall", 1)
    set (D7, "northWall", 1)
    set (E7, "southWall", 1)
    set (E7, "northWall", 1)
    set (F7, "southWall", 1)
    set (F7, "northWall", 1)
    set (G7, "southWall", 1)
    set (G7, "northWall", 1)
    set (H8, "westWall", 1)
    MoveObject (player, A7)
    MoveObject (King, F6)
    King.position = "F6"
    MoveObject (Pawn, G6)
    Pawn.position = "G6"
    MoveObject (Chessboard, B7)
    MoveObject (Goal, H8)
    DisableTurnScript (KingOnTurn)
    msg ("")
    msg ("You stumble to your feet, trying to regain your composure.")
    msg ("Did you just go through a mirror?")
    msg ("You look around and, to your surprise, you find that the mirror has completely disappeared.")
    msg ("Well. Looks like you’re not going back that way.")
    msg ("")
    msg ("You take a better look around at your surroundings.")
    msg ("It seems as if you’re still in the maze… You recognize the same walls, the same surroundings…")
    msg ("Only - you jump in surprise - how didn’t you realize this before?")
    msg ("Somehow, you’re standing on… The sky?")
    msg ("The floor and everything on the ground is blue with moving cloud patterns while - yup - the ceiling is a grassy green.")
  </function>
  <function name="moveKing"><![CDATA[
    if ((player.parent = King.parent) and (player.parent <> STORAGE)) {
      deathByKing
    }
    if ((player.parent = H8) and (King.parent = H7)) {
      MoveObject (King, H8)
      H7.inRoom = " "
    }
    else {
      if (King.parent = F6) {
        MoveObject (King, G6)
        F6.inRoom = " "
      }
      else if (King.parent = G6) {
        MoveObject (King, H6)
        G6.inRoom = " "
      }
      else if (King.parent = H6) {
        MoveObject (King, H7)
        H6.inRoom = " "
      }
      else if (King.parent = H7) {
        MoveObject (King, G7)
        H7.inRoom = " "
      }
      else if (King.parent = G7) {
        MoveObject (King, F7)
        G7.inRoom = " "
      }
      else if (King.parent = F7) {
        MoveObject (King, E7)
        F7.inRoom = " "
      }
      else if (King.parent = E7) {
        MoveObject (King, D7)
        E7.inRoom = " "
      }
      else if (King.parent = D7) {
        MoveObject (King, C7)
        D7.inRoom = " "
      }
      else if (King.parent = C7) {
        MoveObject (King, B7)
        C7.inRoom = " "
      }
      else if (King.parent = B7) {
        MoveObject (King, A7)
        B7.inRoom = " "
      }
    }
    if (Pawn.parent = King.parent) {
      MoveObject (Pawn, STORAGE)
      Pawn.position = "STORAGE"
    }
    if ((player.parent = King.parent) and (player.parent <> STORAGE)) {
      deathByKing
    }
  ]]></function>
  <function name="deathByKing">
    King.parent.inRoom = " "
    MoveObject (King, player.parent)
    MoveObject (player, STORAGE)
    player.playerDeath = "You watch, paralyzed with fear, as the statue moves. The thing which had previously been motionless has instead been following you all along. You barely have time to ponder this before you feel the rough stony hands wrap around your eyes and mouth…"
  </function>
  <function name="setupPreBishop">
    MoveObject (player, H1)
    MoveObject (Goal, A8)
    MoveObject (Rook, H5)
    MoveObject (Knight, H4)
    LockExit (A8southeast)
    LockExit (B8southwest)
    LockExit (B8south)
    LockExit (B8southeast)
    LockExit (C8southwest)
    LockExit (C7northwest)
    LockExit (B7northeast)
    LockExit (B7north)
    LockExit (B7northwest)
    LockExit (A7northeast)
    LockExit (A7southeast)
    LockExit (B7southwest)
    LockExit (B6northwest)
    LockExit (B6west)
    LockExit (B6southwest)
    LockExit (B5northwest)
    LockExit (A5northeast)
    LockExit (A6southeast)
    LockExit (A6east)
    LockExit (A6northeast)
    LockExit (A5south)
    LockExit (A5southeast)
    LockExit (B5southwest)
    LockExit (B5south)
    LockExit (B5southeast)
    LockExit (C5southwest)
    LockExit (C4northwest)
    LockExit (C4west)
    LockExit (C4southwest)
    LockExit (C3northwest)
    LockExit (B3northeast)
    LockExit (B4southeast)
    LockExit (B4east)
    LockExit (B4northeast)
    LockExit (B4north)
    LockExit (B4northwest)
    LockExit (A4northeast)
    LockExit (A4north)
    LockExit (A4southeast)
    LockExit (B4southwest)
    LockExit (B3northwest)
    LockExit (B3west)
    LockExit (B3southwest)
    LockExit (B2northwest)
    LockExit (B2west)
    LockExit (B2southwest)
    LockExit (B1northwest)
    LockExit (A1northeast)
    LockExit (A2southeast)
    LockExit (A2east)
    LockExit (A2northeast)
    LockExit (A3southeast)
    LockExit (A3east)
    LockExit (A3northeast)
    LockExit (B1east)
    LockExit (B1northeast)
    LockExit (B2southeast)
    LockExit (B2east)
    LockExit (B2northeast)
    LockExit (B3southeast)
    LockExit (C3southwest)
    LockExit (C2northwest)
    LockExit (C2west)
    LockExit (C2southwest)
    LockExit (C1northwest)
    LockExit (C1west)
    LockExit (D1northeast)
    LockExit (D1north)
    LockExit (D1northwest)
    LockExit (C1northeast)
    LockExit (C2southeast)
    LockExit (C2east)
    LockExit (C2northeast)
    LockExit (C3southeast)
    LockExit (D3southwest)
    LockExit (D2northwest)
    LockExit (D2west)
    LockExit (D2southwest)
    LockExit (D2south)
    LockExit (D2southeast)
    LockExit (E2southwest)
    LockExit (E1northwest)
    LockExit (C3northeast)
    LockExit (C4southeast)
    LockExit (C4east)
    LockExit (C4northeast)
    LockExit (C5southeast)
    LockExit (D5southwest)
    LockExit (D5south)
    LockExit (D5southeast)
    LockExit (E5southwest)
    LockExit (E4northwest)
    LockExit (E4west)
    LockExit (E4southwest)
    LockExit (E3northwest)
    LockExit (D3northeast)
    LockExit (D3north)
    LockExit (D3northwest)
    LockExit (B5northeast)
    LockExit (C5northwest)
    LockExit (C5north)
    LockExit (C5northeast)
    LockExit (D5northwest)
    LockExit (D5north)
    LockExit (D5northeast)
    LockExit (E5northwest)
    LockExit (E6southwest)
    LockExit (D6southeast)
    LockExit (D6south)
    LockExit (D6southwest)
    LockExit (C6southeast)
    LockExit (C6south)
    LockExit (C6southwest)
    LockExit (B6southeast)
    LockExit (B6northeast)
    LockExit (C6northwest)
    LockExit (C6north)
    LockExit (C6northeast)
    LockExit (D6northwest)
    LockExit (D6north)
    LockExit (D6northeast)
    LockExit (E6northwest)
    LockExit (E7southwest)
    LockExit (D7southeast)
    LockExit (D7south)
    LockExit (D7southwest)
    LockExit (C7southeast)
    LockExit (C7south)
    LockExit (C7southwest)
    LockExit (B7southeast)
    LockExit (D8east)
    LockExit (D8southeast)
    LockExit (D7northeast)
    LockExit (E7northwest)
    LockExit (E8southwest)
    LockExit (E8west)
    LockExit (F8east)
    LockExit (F8southeast)
    LockExit (F7northeast)
    LockExit (G7northwest)
    LockExit (G8southwest)
    LockExit (G8west)
    LockExit (G8east)
    LockExit (G8southeast)
    LockExit (G7northeast)
    LockExit (H7northwest)
    LockExit (H8southwest)
    LockExit (H8west)
    LockExit (E5northeast)
    LockExit (E6southeast)
    LockExit (E6east)
    LockExit (E6northeast)
    LockExit (E7southeast)
    LockExit (F7southwest)
    LockExit (F7south)
    LockExit (F7southeast)
    LockExit (G7southwest)
    LockExit (G6northwest)
    LockExit (F6northeast)
    LockExit (F6north)
    LockExit (F6northwest)
    LockExit (F6west)
    LockExit (F6southwest)
    LockExit (F5northwest)
    LockExit (F5northeast)
    LockExit (F6southeast)
    LockExit (G6southwest)
    LockExit (G6south)
    LockExit (G6southeast)
    LockExit (G6east)
    LockExit (G6northeast)
    LockExit (G7southeast)
    LockExit (H7southwest)
    LockExit (H6northwest)
    LockExit (H6west)
    LockExit (H6southwest)
    LockExit (H5northwest)
    LockExit (G5northeast)
    LockExit (G5north)
    LockExit (G5northeast)
    LockExit (F5southeast)
    LockExit (G5southwest)
    LockExit (G5south)
    LockExit (G5southeast)
    LockExit (H5southwest)
    LockExit (H4northwest)
    LockExit (G4northeast)
    LockExit (G4north)
    LockExit (G4northwest)
    LockExit (F4northeast)
    LockExit (E3southeast)
    LockExit (F3southwest)
    LockExit (F3south)
    LockExit (F3southeast)
    LockExit (G3southwest)
    LockExit (G2northwest)
    LockExit (F2northeast)
    LockExit (F2north)
    LockExit (F2northwest)
    LockExit (E2northeast)
    LockExit (E2southeast)
    LockExit (F2southwest)
    LockExit (F2south)
    LockExit (F2southeast)
    LockExit (G2southwest)
    LockExit (G1northwest)
    LockExit (F1northeast)
    LockExit (F1north)
    LockExit (F1northwest)
    LockExit (E1northeast)
    LockExit (H1north)
    LockExit (H1northwest)
    LockExit (G1northeast)
    LockExit (G2southeast)
    LockExit (G2east)
    LockExit (G2northeast)
    LockExit (G3southeast)
    LockExit (G3east)
    LockExit (G3northeast)
    LockExit (G3north)
    LockExit (G3northwest)
    LockExit (F3northeast)
    LockExit (F3north)
    LockExit (F3northwest)
    LockExit (E3northeast)
    LockExit (E4southeast)
    LockExit (E4east)
    LockExit (E4northeast)
    LockExit (E5southeast)
    LockExit (F5southwest)
    LockExit (F4northwest)
    LockExit (F4west)
    LockExit (F4southwest)
    LockExit (F4south)
    LockExit (F4southeast)
    LockExit (G4southwest)
    LockExit (G4south)
    LockExit (G4southeast)
    LockExit (H4southwest)
    LockExit (H3northwest)
    LockExit (H3west)
    LockExit (H3southwest)
    LockExit (H2northwest)
    LockExit (H2west)
    LockExit (H2southwest)
    LockExit (H2south)
    // descWalls
    // foreach (exit, AllExits()) {
      // if ((exit.locked) and (exit.parent = player.parent)) {
        // if ((exit.alias = "north") or (exit.alias = "south") or(exit.alias = "east") or(exit.alias = "west")) {
          // msg ("There is a wall to the "+exit.alias)
          // }
        // }
      // }
    msg ("And find yourself back in the familiar maze. ")
    msg ("You look at your chessboard for a brief moment and realize that yet another new piece has appeared… ")
    EnableTurnScript (PreBishopOnTurn)
  </function>
  <function name="mirrorEntered"><![CDATA[
    // RabbitHole -> Pawn -> Rook -> Knight -> Bishop -> Queen
    if (game.level = "RabbitHole") {
      msg ("You raise a hand tentatively expecting a smooth, flat, surface. ")
      msg ("Instead - it goes right through.")
      msg ("Before you get the chance to think or do anything about it, you find yourself tumbling through the looking glass. ")
      msg ("")
      game.level = "Pawn"
      takedownMap
      setupPawn
    }
    else if (game.level = "Pawn") {
      game.level = "PreRook"
      msg ("You take  a careful step inside… ")
      msg ("")
      DisableTurnScript (KingOnTurn)
      takedownMap
      setupPreRook
    }
    else if (game.level = "PreRook") {
      game.level = "Rook"
      msg ("You take a tentative step into its depths. ")
      msg ("")
      takedownMap
      setupRook
    }
    else if (game.level = "Rook") {
      game.level = "PreKnight"
      msg ("Although you’re still unsure, you take a step into its depths. ")
      msg ("")
      takedownMap
      setupPreKnight
    }
    else if (game.level = "PreKnight") {
      game.level = "Knight"
      msg ("You take a confident step inside its unworldly contents. ")
      msg ("")
      takedownMap
      setupKnight
    }
    else if (game.level = "Knight") {
      game.level = "PreBishop"
      msg ("You step through it like it’s nothing ")
      msg ("")
      takedownMap
      destructorKnight
      setupPreBishop
    }
    else if (game.level = "PreBishop") {
      game.level = "Bishop"
      msg ("You take a lazy step inside - you’ve pretty much got the hang of this now.")
      msg ("")
      takedownMap
      setupBishop
    }
    else if (game.level = "Bishop") {
      if ((Lever.parent <> STORAGE) and (player.parent <> STORAGE)) {
        msg ("You press your hand against the glass, and find its cool touch to confirm that it is, for now, merely an ordinary mirror. You turn to face the room, knowing that something must be done before it can serve as a portal once again.")
      }
      else {
        game.level = "PreQueen"
        msg ("You step lazily through it without a second thought")
        msg ("")
        takedownMap
        setupPreQueen
      }
    }
    else if (game.level = "PreQueen") {
      game.level = "Queen"
      msg ("You attempt to step through it, but instead it shatters")
      msg ("")
      takedownMap
      setupQueen
    }
    else if (game.level = "Queen") {
      // this should eventually be deleted. There is no mirror in Queen
      finish
    }
  ]]></function>
  <function name="setupBishop">
    MoveObject (player, B1)
    MoveObject (Goal, H6)
    MoveObject (Lever, B3)
    MoveObject (Bishop, A1)
    MoveObject (Pawn, A3)
    LockExit (F8east)
    LockExit (F8southeast)
    LockExit (F7northeast)
    LockExit (F7east)
    LockExit (F7southeast)
    LockExit (F6northeast)
    LockExit (F6east)
    LockExit (F6southeast)
    LockExit (F5northeast)
    LockExit (F5east)
    LockExit (F5southeast)
    LockExit (F5south)
    LockExit (F5southwest)
    LockExit (E5southeast)
    LockExit (E4northeast)
    LockExit (E4east)
    LockExit (E4southeast)
    LockExit (E3northeast)
    LockExit (F3northwest)
    LockExit (F3north)
    LockExit (F3northeast)
    LockExit (G3northwest)
    LockExit (G4southwest)
    LockExit (G4west)
    LockExit (G4northwest)
    LockExit (G5southwest)
    LockExit (G5west)
    LockExit (G5northwest)
    LockExit (G5north)
    LockExit (G5northeast)
    LockExit (H5northwest)
    LockExit (H6southwest)
    LockExit (H6west)
    LockExit (H6northwest)
    LockExit (H6north)
    LockExit (E1west)
    LockExit (E1northwest)
    LockExit (E2southwest)
    LockExit (E2west)
    LockExit (E2northwest)
    LockExit (E3southwest)
    LockExit (E3west)
    LockExit (E3northwest)
    LockExit (E4southwest)
    LockExit (E4west)
    LockExit (E4northwest)
    LockExit (E5southwest)
    LockExit (D5southeast)
    LockExit (D5south)
    LockExit (D5southwest)
    LockExit (C5southeast)
    LockExit (C5south)
    LockExit (C5southwest)
    LockExit (B5southeast)
    LockExit (B4northeast)
    LockExit (B4east)
    LockExit (B4southeast)
    LockExit (B3northeast)
    LockExit (C3northwest)
    LockExit (C3north)
    LockExit (C3northeast)
    LockExit (D3northwest)
    LockExit (D3north)
    LockExit (D3northeast)
    LockExit (D3east)
    LockExit (D3southeast)
    LockExit (D2northeast)
    LockExit (D2east)
    LockExit (D2southeast)
    LockExit (D1northeast)
    LockExit (D1east)
    LockExit (A3north)
    LockExit (A3northeast)
    LockExit (B3northwest)
    LockExit (B4southwest)
    LockExit (B4west)
    LockExit (B4northwest)
    LockExit (B5southwest)
    LockExit (A5southeast)
    LockExit (A5south)
    // special walls
    LockExit (A3northeast)
    LockExit (B3northwest)
    // LockExit (B3north)
    LockExit (B3northeast)
    LockExit (C3northwest)
    LockExit (D5southeast)
    LockExit (E5southwest)
    // LockExit (E5south)
    LockExit (E5southeast)
    LockExit (F5southwest)
    LockExit (G5northeast)
    LockExit (H5northwest)
    // LockExit (H5north)
    // descWalls
    // foreach (exit, AllExits()) {
      // if ((exit.locked) and (exit.parent = player.parent)) {
        // if ((exit.alias = "north") or (exit.alias = "south") or(exit.alias = "east") or(exit.alias = "west")) {
          // msg ("There is a wall to the "+exit.alias)
          // }
        // }
      // }
    foreach (exit, AllExits()) {
      exit.lockmessage = "There is wall blocking your path."
    }
    EnableTurnScript (BishopOnTurn)
    msg ("You enter what feels like a large room, but it is difficult to tell the exact size in the dim light. A single, intense piercing light is perceivable in the the darkness, and when your eyes adjust you see that it emanates from a single security camera on the wall. It is slowly crossing the ground, as though searching, as though it were a spotlight. Looking around, you appear to be in some sort of jailblock. There is a high ringing sound in your ears which seems to shift and tremble, as though they were near human cries that seems to shift and pulse. ")
    msg ("You see a golden crown and immediately pick it up and put it on. It feels heavy on your head.")
  </function>
  <function name="takedownMap"><![CDATA[
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x")) {
        room.inRoom = " "
      }
    }
    player.turn = 0
    foreach (exit, AllExits()) {
      UnlockExit (exit)
      exit.lockmessage = "You encounter a brambly wall blocking your path."
    }
    LockExit (A3down)
    LockExit (D6up)
    LockExit (C3down)
    LockExit (H8up)
    if (HasAttribute(King.parent, "inRoom")) {
      King.parent.inRoom = " "
      MoveObject (King, STORAGE)
    }
    if (HasAttribute(Pawn.parent, "inRoom")) {
      Pawn.parent.inRoom = " "
      MoveObject (Pawn, STORAGE)
    }
    if (HasAttribute(Knight.parent, "inRoom")) {
      Knight.parent.inRoom = " "
      MoveObject (Knight, STORAGE)
    }
    if (HasAttribute(Bishop.parent, "inRoom")) {
      Bishop.parent.inRoom = " "
      MoveObject (Bishop, STORAGE)
    }
    if (HasAttribute(Bishop2.parent, "inRoom")) {
      Bishop2.parent.inRoom = " "
      MoveObject (Bishop2, STORAGE)
    }
    if (HasAttribute(Queen.parent, "inRoom")) {
      Queen.parent.inRoom = " "
      MoveObject (Queen, STORAGE)
    }
    if (HasAttribute(Rook.parent, "inRoom")) {
      Rook.parent.inRoom = " "
      MoveObject (Rook, STORAGE)
    }
    if (HasAttribute(Goal.parent, "inRoom")) {
      Goal.parent.inRoom = " "
      MoveObject (Goal, STORAGE)
    }
    if (HasAttribute(Checkpoint.parent, "inRoom")) {
      Checkpoint.parent.inRoom = " "
      MoveObject (Checkpoint, STORAGE)
    }
    if (HasAttribute(Rook2.parent, "inRoom")) {
      Rook2.parent.inRoom = " "
      MoveObject (Rook2, STORAGE)
    }
    if (HasAttribute(Rook3.parent, "inRoom")) {
      Rook3.parent.inRoom = " "
      MoveObject (Rook3, STORAGE)
    }
    if (HasAttribute(Rook4.parent, "inRoom")) {
      Rook4.parent.inRoom = " "
      MoveObject (Rook4, STORAGE)
    }
    if (HasAttribute(Rook5.parent, "inRoom")) {
      Rook5.parent.inRoom = " "
      MoveObject (Rook5, STORAGE)
    }
    if (HasAttribute(Lever.parent, "inRoom")) {
      Lever.parent.inRoom = " "
      MoveObject (Lever, STORAGE)
    }
    if (HasAttribute(Sword.parent, "inRoom")) {
      Sword.parent.inRoom = " "
      MoveObject (Sword, STORAGE)
    }
    if (HasAttribute(door.parent, "inRoom")) {
      door.parent.inRoom = " "
      MoveObject (door, STORAGE)
    }
    if (HasAttribute(monster.parent, "inRoom")) {
      monster.parent.inRoom = " "
      MoveObject (monster, STORAGE)
    }
    if (HasAttribute(rug.parent, "inRoom")) {
      rug.parent.inRoom = " "
      MoveObject (rug, STORAGE)
    }
    if (HasAttribute(Throne.parent, "inRoom")) {
      Throne.parent.inRoom = " "
      MoveObject (Throne, STORAGE)
    }
    if (HasAttribute(stamp.parent, "inRoom")) {
      stamp.parent.inRoom = " "
      MoveObject (stamp, STORAGE)
    }
    if (HasAttribute(player.parent, "inRoom")) {
      player.parent.inRoom = " "
      MoveObject (player, STORAGE)
    }
    if (Chessboard.parent <> player) {
      MoveObject (Chessboard, STORAGE)
    }
    DisableTurnScript (PreBishopOnTurn)
    DisableTurnScript (PreKnightOnTurn)
    DisableTurnScript (PreQueenOnTurn)
    DisableTurnScript (KingOnTurn)
    DisableTurnScript (KnightOnTurn)
    DisableTurnScript (BishopOnTurn)
    DisableTurnScript (QueenOnTurn)
    DisableTurnScript (RookOnTurn)
    Counter.count = 0
  ]]></function>
  <function name="setupRabbitHole">
    LockExit (E8west)
    LockExit (E8east)
    LockExit (E8southeast)
    LockExit (E8southwest)
    LockExit (E7west)
    LockExit (E7east)
    LockExit (E7southeast)
    LockExit (E7southwest)
    LockExit (E7northeast)
    LockExit (E7northwest)
    LockExit (E6west)
    LockExit (E6east)
    LockExit (E6southeast)
    LockExit (E6southwest)
    LockExit (E6northeast)
    LockExit (E6northwest)
    LockExit (E5west)
    LockExit (E5east)
    LockExit (E5southeast)
    LockExit (E5southwest)
    LockExit (E5northeast)
    LockExit (E5northwest)
    LockExit (E4west)
    LockExit (E4east)
    LockExit (E4southeast)
    LockExit (E4southwest)
    LockExit (E4northeast)
    LockExit (E4northwest)
    LockExit (E3west)
    LockExit (E3east)
    LockExit (E3southeast)
    LockExit (E3southwest)
    LockExit (E3northeast)
    LockExit (E3northwest)
    LockExit (E2west)
    LockExit (E2east)
    LockExit (E2southeast)
    LockExit (E2southwest)
    LockExit (E2northeast)
    LockExit (E2northwest)
    LockExit (E1east)
    LockExit (E1northeast)
    LockExit (E1northwest)
    LockExit (D1west)
    LockExit (D1north)
    LockExit (D1northwest)
    LockExit (D1northeast)
    MoveObject (player, E8)
    MoveObject (Goal, D1)
  </function>
  <function name="setupRook"><![CDATA[
    MoveObject (player, A7)
    MoveObject (Goal, A2)
    MoveObject (Key, H1)
    MoveObject (stamp, B2)
    // MoveObject (Checkpoint, B2)
    MoveObject (Rook, A1)
    LockExit (A8south)
    LockExit (A8southeast)
    LockExit (B8southwest)
    LockExit (B8south)
    LockExit (B8southeast)
    LockExit (B8east)
    LockExit (C8west)
    LockExit (C8southwest)
    LockExit (C7northwest)
    LockExit (B7northeast)
    LockExit (B7north)
    LockExit (B7northwest)
    LockExit (A7northeast)
    LockExit (A7north)
    LockExit (C8east)
    LockExit (C8southeast)
    LockExit (C7northeast)
    LockExit (D7northwest)
    LockExit (D7north)
    LockExit (D7northeast)
    LockExit (E7northwest)
    LockExit (E7north)
    LockExit (E7northeast)
    LockExit (F7northwest)
    LockExit (F7north)
    LockExit (F7northeast)
    LockExit (G7northwest)
    LockExit (G8southwest)
    LockExit (F8southeast)
    LockExit (F8south)
    LockExit (F8southwest)
    LockExit (E8southeast)
    LockExit (E8south)
    LockExit (E8southwest)
    LockExit (D8southeast)
    LockExit (D8south)
    LockExit (D8southwest)
    LockExit (D8west)
    LockExit (H8south)
    LockExit (H8southwest)
    LockExit (G8southeast)
    LockExit (G7northeast)
    LockExit (H7northwest)
    LockExit (H7north)
    LockExit (A7south)
    LockExit (A7southeast)
    LockExit (B7southwest)
    LockExit (B7south)
    LockExit (B7southeast)
    LockExit (C7southwest)
    // LockExit (C7south) no longer needed
    LockExit (C7southeast)
    LockExit (D7southwest)
    LockExit (D6northwest)
    LockExit (D6west)
    LockExit (D6southwest)
    LockExit (D6south)
    LockExit (D6southeast)
    LockExit (E6southwest)
    LockExit (E5northwest)
    LockExit (D5northeast)
    LockExit (D5north)
    LockExit (D5northwest)
    LockExit (C5northeast)
    // LockExit (C5north)
    LockExit (C5northwest)
    LockExit (B5northeast)
    LockExit (B5north)
    LockExit (B5northwest)
    LockExit (A5northeast)
    LockExit (A5north)
    LockExit (D7southeast)
    LockExit (E7southwest)
    LockExit (E7south)
    LockExit (E7southeast)
    LockExit (F7southwest)
    LockExit (F7south)
    LockExit (F7southeast)
    LockExit (G7southwest)
    LockExit (G6northwest)
    // LockExit (G6west)
    LockExit (G6southwest)
    LockExit (G5northwest)
    LockExit (F5northeast)
    LockExit (F5north)
    LockExit (F5northwest)
    LockExit (E5northeast)
    LockExit (E6southeast)
    LockExit (E6east)
    LockExit (E6northeast)
    LockExit (E6north)
    LockExit (E6northwest)
    LockExit (D6northeast)
    LockExit (H7south)
    LockExit (H7southwest)
    LockExit (G7southeast)
    LockExit (G6northeast)
    LockExit (G6east)
    LockExit (G6southeast)
    LockExit (G5northeast)
    LockExit (H5northwest)
    LockExit (H5north)
    LockExit (A5southeast)
    LockExit (B5southwest)
    LockExit (B5south)
    LockExit (B5southeast)
    LockExit (C5southwest)
    // LockExit (C5south)
    LockExit (C5southeast)
    LockExit (D5southwest)
    LockExit (D5south)
    LockExit (D5southeast)
    LockExit (E5southwest)
    LockExit (E4northwest)
    LockExit (D4northeast)
    LockExit (D4north)
    LockExit (D4northwest)
    LockExit (C4northeast)
    // LockExit (C4north)
    LockExit (C4northwest)
    LockExit (B4northeast)
    LockExit (B4north)
    LockExit (B4northwest)
    LockExit (A4northeast)
    LockExit (E5southwest)
    LockExit (F5southeast)
    LockExit (F5south)
    LockExit (F5southwest)
    LockExit (G5southeast)
    // LockExit (G5south)
    LockExit (G5southwest)
    LockExit (H5southwest)
    LockExit (H4northwest)
    LockExit (G4northeast)
    // LockExit (G4north)
    LockExit (G4northwest)
    LockExit (F4northeast)
    LockExit (F4north)
    LockExit (F4northwest)
    LockExit (E4northeast)
    LockExit (A4southeast)
    LockExit (B4southwest)
    LockExit (B4south)
    LockExit (B4southeast)
    LockExit (C4southwest)
    // LockExit (C4south)
    LockExit (C4southeast)
    LockExit (D4southwest)
    LockExit (D4south)
    LockExit (D4southeast)
    LockExit (E4southwest)
    LockExit (E4south)
    LockExit (E4southeast)
    LockExit (F4southwest)
    LockExit (F4south)
    LockExit (F4southeast)
    LockExit (G4southwest)
    // LockExit (G4south)
    LockExit (G4southeast)
    LockExit (H4southwest)
    LockExit (H3northwest)
    LockExit (G3northeast)
    // LockExit (G3north)
    LockExit (G3northwest)
    LockExit (F3northeast)
    LockExit (F3north)
    LockExit (F3northwest)
    LockExit (E3northeast)
    LockExit (E3north)
    LockExit (E3northwest)
    LockExit (E3west)
    LockExit (E3southwest)
    LockExit (E2northwest)
    LockExit (D2northeast)
    LockExit (D2north)
    LockExit (D2northwest)
    LockExit (C2northeast)
    LockExit (C3southeast)
    LockExit (C3east)
    LockExit (C3northeast)
    // LockExit (C3north)
    LockExit (C3northwest)
    LockExit (B3northeast)
    LockExit (B3north)
    LockExit (B3northwest)
    LockExit (A3northeast)
    LockExit (A3south)
    LockExit (A3southeast)
    LockExit (B3southwest)
    LockExit (B3south)
    LockExit (B3southeast)
    LockExit (C3southwest)
    LockExit (C2northwest)
    LockExit (B2northeast)
    LockExit (B2north)
    LockExit (B2northwest)
    LockExit (A2northeast)
    LockExit (A2north)
    LockExit (A2south)
    LockExit (A2southeast)
    LockExit (B2southwest)
    LockExit (B2south)
    LockExit (B2southeast)
    LockExit (C2southwest)
    LockExit (C1northwest)
    LockExit (C1west)
    LockExit (C1east)
    LockExit (C1northeast)
    LockExit (C2southeast)
    LockExit (D2southwest)
    LockExit (D2south)
    LockExit (D2southeast)
    LockExit (E2southwest)
    // LockExit (E1west)
    LockExit (E1east)
    LockExit (E1northeast)
    LockExit (E2southeast)
    LockExit (E2east)
    LockExit (E2northeast)
    LockExit (E3southeast)
    LockExit (F3southwest)
    LockExit (F3south)
    LockExit (F3southeast)
    LockExit (G3southwest)
    LockExit (G2northwest)
    LockExit (G2west)
    LockExit (G2southwest)
    LockExit (G1northwest)
    LockExit (G1west)
    // LockExit (G1east)
    LockExit (G1northeast)
    LockExit (G2southeast)
    LockExit (H2southwest)
    LockExit (H1northwest)
    // LockExit (H1west)
    // special wall
    LockExit (A2east)
    LockExit (B2west)
    // Changes to map
    LockExit (C6west)
    LockExit (C6east)
    // LockExit (E5south)
    // LockExit (E4north)
    LockExit (E2west)
    LockExit (D2east)
    LockExit (G3west)
    LockExit (F3east)
    LockExit (D1east)
    LockExit (D1north)
    LockExit (F6north)
    LockExit (F6south)
    LockExit (F6west)
    LockExit (F6northwest)
    LockExit (F6southwest)
    LockExit (F6northeast)
    LockExit (F6southeast)
    // descWalls
    // foreach (exit, AllExits()) {
      // if ((exit.locked) and (exit.parent = player.parent)) {
        // if ((exit.alias = "north") or (exit.alias = "south") or(exit.alias = "east") or(exit.alias = "west")) {
          // msg ("There is a wall to the "+exit.alias)
          // }
        // }
      // }
    foreach (exit, AllExits()) {
      exit.lockmessage = "There is wall blocking your path."
    }
    EnableTurnScript (RookOnTurn)
    msg ("You are standing in a cold, smooth, stone tunnel with several depressed paths in the ground. They are of uniform width, and seem to stretch as far as you can make out. There is dim light, which has no immediately obvious source, although you see vague shadows seem to form, swirl and disperse as smoke all across the ground. You can just make out what appears to be train tracks in each depression.<br/><br/>At your feet, you see what appears to be a cloak, and without a thought, you wrap it around your shoulders. <br/><br/>You see a pawn on the chessboard.")
    MoveObject (Pawn, C4)
    MoveObject (Rook, A5)
  ]]></function>
  <function name="setupPreRook"><![CDATA[
    MoveObject (player, E1)
    MoveObject (Goal, A5)
    if (Chessboard.parent <> player) {
      MoveObject (Chessboard, E2)
    }
    LockExit (A8south)
    LockExit (A8southeast)
    LockExit (B8southwest)
    LockExit (B7west)
    LockExit (B7northwest)
    LockExit (B6west)
    LockExit (B6southwest)
    LockExit (B5northwest)
    LockExit (A5north)
    LockExit (A5northeast)
    LockExit (A5southeast)
    LockExit (A5south)
    LockExit (B5southwest)
    LockExit (B4west)
    LockExit (B4northwest)
    LockExit (B3west)
    LockExit (B3southwest)
    LockExit (B2northwest)
    LockExit (A2north)
    LockExit (A2south)
    LockExit (A2northeast)
    LockExit (A2southeast)
    LockExit (B2southwest)
    LockExit (B1west)
    LockExit (B1northwest)
    LockExit (B7southwest)
    LockExit (B6northwest)
    LockExit (B4southwest)
    LockExit (B3northwest)
    LockExit (B8east)
    LockExit (B8southeast)
    LockExit (B7northeast)
    LockExit (C7northwest)
    LockExit (C7north)
    LockExit (C7northeast)
    LockExit (D7northwest)
    LockExit (D7north)
    LockExit (D7northeast)
    LockExit (E7northwest)
    LockExit (E8southwest)
    LockExit (E8west)
    LockExit (B7southeast)
    LockExit (C7south)
    LockExit (C7southeast)
    LockExit (C7southwest)
    LockExit (D7southwest)
    LockExit (D7south)
    LockExit (D7southeast)
    LockExit (E7southwest)
    LockExit (E6northwest)
    LockExit (E6west)
    LockExit (E6southwest)
    LockExit (E5northwest)
    LockExit (D5northeast)
    LockExit (D5north)
    LockExit (D5northwest)
    LockExit (C5northeast)
    LockExit (C5north)
    LockExit (C5northwest)
    LockExit (B5northeast)
    LockExit (B6southeast)
    LockExit (B5southeast)
    LockExit (C5southwest)
    LockExit (C5south)
    LockExit (C5southeast)
    LockExit (D5southwest)
    LockExit (D5south)
    LockExit (D5southeast)
    LockExit (E5southwest)
    LockExit (E4northwest)
    LockExit (E4west)
    LockExit (E4southwest)
    LockExit (E3northwest)
    LockExit (D3northeast)
    LockExit (D3north)
    LockExit (D3northwest)
    LockExit (C3northeast)
    LockExit (C3north)
    LockExit (C3northwest)
    LockExit (B3northeast)
    LockExit (B4southeast)
    LockExit (B4east)
    LockExit (B4northeast)
    LockExit (B1east)
    LockExit (B1northeast)
    LockExit (B2southeast)
    LockExit (B2east)
    LockExit (B2northeast)
    LockExit (B3southeast)
    LockExit (C3southwest)
    LockExit (C3south)
    LockExit (C3southeast)
    LockExit (D3southwest)
    LockExit (D3south)
    LockExit (D3southeast)
    LockExit (E3southwest)
    LockExit (E2northwest)
    LockExit (E2west)
    LockExit (E2southwest)
    LockExit (E1northwest)
    LockExit (E1west)
    LockExit (E1east)
    LockExit (E1northeast)
    LockExit (E2southeast)
    LockExit (E2east)
    LockExit (E2northeast)
    LockExit (E3southeast)
    LockExit (F3southwest)
    LockExit (F3south)
    LockExit (F3southeast)
    LockExit (G3southwest)
    LockExit (G2northwest)
    LockExit (G2west)
    LockExit (G2southwest)
    LockExit (G1northwest)
    LockExit (G1west)
    LockExit (H1north)
    LockExit (H1northwest)
    LockExit (G1northeast)
    LockExit (G2southeast)
    LockExit (G2east)
    LockExit (G2northeast)
    LockExit (G3southeast)
    LockExit (G3east)
    LockExit (G3northeast)
    LockExit (G3north)
    LockExit (G3northwest)
    LockExit (F3northeast)
    LockExit (F3north)
    LockExit (F3northwest)
    LockExit (E3northeast)
    LockExit (E4southeast)
    LockExit (E4east)
    LockExit (E4northeast)
    LockExit (E5southeast)
    LockExit (F5southwest)
    LockExit (F5south)
    LockExit (F5southeast)
    LockExit (G5southwest)
    LockExit (G5south)
    LockExit (G5southeast)
    LockExit (H5southwest)
    LockExit (H4northwest)
    LockExit (H4west)
    LockExit (H4southwest)
    LockExit (H4south)
    LockExit (H5northwest)
    LockExit (G5northeast)
    LockExit (G5north)
    LockExit (G5northwest)
    LockExit (F5northeast)
    LockExit (F5north)
    LockExit (F5northwest)
    LockExit (E5northeast)
    LockExit (E6southeast)
    LockExit (E6east)
    LockExit (E6northeast)
    LockExit (E7southeast)
    LockExit (F7southwest)
    LockExit (F7south)
    LockExit (F7southeast)
    LockExit (G7southwest)
    LockExit (G7south)
    LockExit (G7southeast)
    LockExit (H7southwest)
    LockExit (H6northwest)
    LockExit (H6west)
    LockExit (H6southwest)
    LockExit (E8east)
    LockExit (E8southeast)
    LockExit (E7northeast)
    LockExit (F7northwest)
    LockExit (F7north)
    LockExit (F7northeast)
    LockExit (G7northwest)
    LockExit (G7north)
    LockExit (G7northeast)
    LockExit (H7northwest)
    LockExit (H8southwest)
    LockExit (H8west)
    // descWalls
    // foreach (exit, AllExits()) {
      // if ((exit.locked) and (exit.parent = player.parent)) {
        // if ((exit.alias = "north") or (exit.alias = "south") or(exit.alias = "east") or(exit.alias = "west")) {
          // msg ("There is a wall to the "+exit.alias)
          // }
        // }
      // }
    msg ("And find yourself back in the familiar maze. ")
  ]]></function>
  <function name="setupKnight">
    MoveObject (player, B1)
    MoveObject (Goal, D4)
    MoveObject (Knight, B3)
    MoveObject (Sword, B2)
    // Changed design of map to remove need of custom exits.
    // LockExit (C8east)
    // LockExit (C8southeast)
    // LockExit (C8south)
    // LockExit (C8southwest)
    // LockExit (B8southeast)
    // LockExit (B8south)
    // LockExit (B8southwest)
    // LockExit (A8southeast)
    // LockExit (A7northeast)
    // LockExit (A7east)
    // LockExit (A7southeast)
    // LockExit (A6northeast)
    // LockExit (B6northwest)
    // LockExit (B6north)
    // LockExit (B6northeast)
    // LockExit (C6northwest)
    // LockExit (C6north)
    // LockExit (C6northeast)
    // LockExit (C6east)
    LockExit (C6southeast)
    LockExit (C6south)
    LockExit (C6southwest)
    LockExit (B6southeast)
    LockExit (B6south)
    LockExit (B6southwest)
    LockExit (A6southeast)
    LockExit (A5northeast)
    LockExit (A5east)
    LockExit (A5southeast)
    LockExit (A4northeast)
    LockExit (A4east)
    LockExit (A4southeast)
    LockExit (A4south)
    LockExit (A3north)
    LockExit (A3northeast)
    LockExit (B3northwest)
    LockExit (B4southwest)
    LockExit (B4west)
    LockExit (B4northwest)
    LockExit (B5southwest)
    LockExit (B5west)
    LockExit (B5northwest)
    LockExit (B5north)
    LockExit (B5northeast)
    LockExit (C5northwest)
    LockExit (C5north)
    LockExit (C5northeast)
    LockExit (D5northwest)
    LockExit (D6southwest)
    // LockExit (D6west)
    LockExit (D6northwest)
    LockExit (D6north)
    LockExit (D6northeast)
    LockExit (E6northwest)
    LockExit (E6north)
    LockExit (E6northeast)
    LockExit (F6northwest)
    LockExit (F6north)
    LockExit (F6northeast)
    LockExit (G6northwest)
    LockExit (G6north)
    LockExit (G6northeast)
    LockExit (G6east)
    LockExit (G6southeast)
    LockExit (G5northeast)
    LockExit (G5east)
    LockExit (G5southeast)
    LockExit (G4northeast)
    LockExit (G4east)
    LockExit (G4southeast)
    LockExit (G3northeast)
    LockExit (G3east)
    LockExit (G3southeast)
    LockExit (G2northeast)
    LockExit (G2east)
    LockExit (G2southeast)
    LockExit (G1northeast)
    LockExit (G1east)
    LockExit (C1west)
    LockExit (C1northwest)
    LockExit (C2southwest)
    LockExit (B2southeast)
    LockExit (B1northeast)
    LockExit (B1east)
    LockExit (B1west)
    LockExit (B1northwest)
    LockExit (B2southwest)
    LockExit (B2west)
    LockExit (B2northwest)
    LockExit (B3southwest)
    LockExit (A3southeast)
    LockExit (A3south)
    LockExit (B2northeast)
    LockExit (B3southeast)
    LockExit (B3east)
    LockExit (B3northeast)
    LockExit (B4southeast)
    LockExit (B4east)
    LockExit (B4northeast)
    LockExit (B5southeast)
    LockExit (C5southwest)
    LockExit (C4northwest)
    LockExit (C4west)
    LockExit (C4southwest)
    LockExit (C4south)
    LockExit (C4southeast)
    LockExit (D4southwest)
    LockExit (D4south)
    LockExit (D4southeast)
    LockExit (D4east)
    LockExit (D4northeast)
    LockExit (D4north)
    LockExit (D4northwest)
    LockExit (C4northeast)
    LockExit (C5southeast)
    LockExit (D5southwest)
    LockExit (D5south)
    LockExit (D5southeast)
    LockExit (E5southwest)
    LockExit (E4northwest)
    LockExit (E4west)
    LockExit (E4southwest)
    LockExit (E3northwest)
    LockExit (E3southwest)
    LockExit (E2northwest)
    LockExit (D2northeast)
    LockExit (D2north)
    LockExit (D2northwest)
    LockExit (C2northeast)
    LockExit (C2north)
    LockExit (C2northwest)
    LockExit (C3west)
    LockExit (C3northwest)
    LockExit (C3north)
    LockExit (C3northeast)
    LockExit (C3southwest)
    LockExit (C3south)
    LockExit (C3southeast)
    LockExit (D3northwest)
    LockExit (D3north)
    LockExit (D3northeast)
    LockExit (D3southeast)
    LockExit (D3south)
    LockExit (D3southwest)
    // descWalls
    // foreach (exit, AllExits()) {
      // if ((exit.locked) and (exit.parent = player.parent)) {
        // if ((exit.alias = "north") or (exit.alias = "south") or(exit.alias = "east") or(exit.alias = "west")) {
          // msg ("There is a wall to the "+exit.alias)
          // }
        // }
      // }
    MoveObject (door, C3)
    MoveObject (monster, C5)
    MoveObject (rug, C3)
    LockExit (C5south)
    LockExit (C4north)
    LockExit (B2north)
    LockExit (B3south)
    LockExit (C5west)
    LockExit (B5east)
    LockExit (E6west)
    LockExit (D5north)
    LockExit (E6southwest)
    LockExit (D5northeast)
    // LockExit (B7west)
    // LockExit (B7south)
    // LockExit (C7north)
    // LockExit (C7south)
    // LockExit (D7south)
    // create exit ("north", B8, C8)
    // create exit ("north", D7, C8)
    // create exit ("east", D7, C8)
    // create exit ("west", A8, C8)
    // create exit ("south", C5, C8)
    // create exit ("south", B6, C8)
    // create exit ("south", A5, C8)
    // UnlockExit (B8south)
    // UnlockExit (B6south)
    // LockExit (D7north)
    // LockExit (D7east)
    // LockExit (A5south)
    // LockExit (B6south)
    // LockExit (D7northwest)
    // LockExit (D7northeast)
    // Since I'm super lazy at this point
    // I'm just going to unlock exits i've
    // changed instead of removing them above.
    UnlockExit (A3north)
    UnlockExit (A3northeast)
    UnlockExit (A4north)
    UnlockExit (A4east)
    UnlockExit (A4south)
    UnlockExit (A4southeast)
    UnlockExit (A4northeast)
    UnlockExit (A5east)
    UnlockExit (A5south)
    UnlockExit (A5southeast)
    LockExit (A5north)
    LockExit (A5northeast)
    UnlockExit (B3northwest)
    UnlockExit (B4west)
    UnlockExit (B4northwest)
    UnlockExit (B4southwest)
    UnlockExit (B5southwest)
    UnlockExit (B5west)
    LockExit (H8south)
    LockExit (G8southeast)
    LockExit (G8southwest)
    LockExit (F7south)
    LockExit (F7southeast)
    LockExit (F7southwest)
    LockExit (F7east)
    LockExit (E7south)
    LockExit (E7southeast)
    LockExit (E7southwest)
    LockExit (D7south)
    LockExit (D7southeast)
    LockExit (D7southwest)
    LockExit (D7west)
    LockExit (D7northwest)
    LockExit (D7northeast)
    LockExit (D8east)
    LockExit (D8southwest)
    LockExit (C8southwest)
    LockExit (C8southeast)
    LockExit (B8southwest)
    LockExit (B8southeast)
    LockExit (A8south)
    LockExit (A8southeast)
    LockExit (B7southwest)
    LockExit (B7southeast)
    LockExit (B7northwest)
    LockExit (B7northeast)
    LockExit (B7west)
    LockExit (B7east)
    LockExit (B6southwest)
    LockExit (B6southeast)
    LockExit (B6northwest)
    LockExit (B6northeast)
    LockExit (B6south)
    LockExit (A6south)
    LockExit (A6southeast)
    LockExit (A6north)
    LockExit (A6northeast)
    LockExit (C6southwest)
    LockExit (C6southeast)
    LockExit (C6northwest)
    LockExit (C6northeast)
    LockExit (C6south)
    LockExit (D6southwest)
    LockExit (D6southeast)
    LockExit (D6northwest)
    LockExit (D6northeast)
    LockExit (D6south)
    LockExit (D6north)
    LockExit (D6east)
    foreach (exit, AllExits()) {
      exit.lockmessage = "The trees are so dense they form a wall blocking your path."
    }
    UnlockExit (A3down)
    UnlockExit (D6up)
    UnlockExit (C3down)
    UnlockExit (H8up)
    player.seenUnderground = 0
    C4east.lockmessage = "You startle at the sight of an otherworldly something floating as if of its own accord. It appears to be a twisted and gnarled full suit of armour, hovering malevolently ahead. It’s some sort of matching onyx and red plate-mail, runic designs like burns etched deep inside the ungodly steel. Strangely, despite it holding together in the form of a man, as you look closely at the joints, there is nothing visible holding it together. But despite the lack of a body and the lack of a head in its horned helm, you have a feeling that it is watching you… A golden medal hangs around the levitating armor’s arm, it seems similar in design, though more ornate, than the silver on the sword. It is blocking your path."
    C5west.lockmessage = "You startle at the sight of an otherworldly something floating as if of its own accord. It appears to be a twisted and gnarled full suit of armour, hovering malevolently ahead. It’s some sort of matching onyx and red plate-mail, runic designs like burns etched deep inside the ungodly steel. Strangely, despite it holding together in the form of a man, as you look closely at the joints, there is nothing visible holding it together. But despite the lack of a body and the lack of a head in its horned helm, you have a feeling that it is watching you… A golden medal hangs around the levitating armor’s arm, it seems similar in design, though more ornate, than the silver on the sword. It is blocking your path."
    C5south.lockmessage = "You startle at the sight of an otherworldly something floating as if of its own accord. It appears to be a twisted and gnarled full suit of armour, hovering malevolently ahead. It’s some sort of matching onyx and red plate-mail, runic designs like burns etched deep inside the ungodly steel. Strangely, despite it holding together in the form of a man, as you look closely at the joints, there is nothing visible holding it together. But despite the lack of a body and the lack of a head in its horned helm, you have a feeling that it is watching you… A golden medal hangs around the levitating armor’s arm, it seems similar in design, though more ornate, than the silver on the sword. It is blocking your path."
    D5south.lockmessage = "There is a white wall there."
    F4west.lockmessage = "There is a white wall there."
    F3west.lockmessage = "There is a white wall there."
    D2north.lockmessage = "There is a white wall there."
    C2north.lockmessage = "There is a white wall there."
    B4east.lockmessage = "There is a white wall there."
    C3west.lockmessage = "There is a door blocking your path. It is firmly bolted shut."
    B2north.lockmessage = "A vast wall of shadows block your path forward. It doesn’t seem natural, the light just stops relative to its murky border. You strain your eyes, trying to look inside of it, but nothing seems to stick out. Every now and then you think you catch a glimpse of a surface, but it’s like a poorly drawn sketch. Every time you seem to catch something concrete, it shifts and moves somehow. "
    msg ("You stumble through the mirror, and this time, manage to stay on your feet. ")
    msg ("You look around and see a vast forest, leaves swaying carelessly in the wind.")
    msg ("Large trees crowd around a series of well-worn paths and glades. Bushes and flowers cluster together at their base. A green and fragmented sunlight can be seen through the veiny trees. ")
    msg ("")
    msg ("Only something seems odd… There are no sounds in this forest. No animals, nothing. ")
    msg ("Everything seems to stand in a resounding silence.")
    msg ("")
    msg ("You see an elegant necklace made of some sort of white gold at your feet. Immediately, you clasp it around your neck. ")
  </function>
  <function name="setupPreKnight"><![CDATA[
    MoveObject (player, A5)
    MoveObject (Goal, H1)
    MoveObject (Rook, H5)
    if (Chessboard.parent <> player) {
      MoveObject (Chessboard, B5)
    }
    LockExit (A8south)
    LockExit (A8southeast)
    LockExit (B8southwest)
    LockExit (B7west)
    LockExit (B7northwest)
    LockExit (B6west)
    LockExit (B6southwest)
    LockExit (B5northwest)
    LockExit (A5north)
    LockExit (A5northeast)
    LockExit (A5southeast)
    LockExit (A5south)
    LockExit (B5southwest)
    LockExit (B4west)
    LockExit (B4northwest)
    LockExit (B3west)
    LockExit (B3southwest)
    LockExit (B2northwest)
    LockExit (A2north)
    LockExit (A2south)
    LockExit (A2northeast)
    LockExit (A2southeast)
    LockExit (B2southwest)
    LockExit (B1west)
    LockExit (B1northwest)
    LockExit (B7southwest)
    LockExit (B6northwest)
    LockExit (B4southwest)
    LockExit (B3northwest)
    LockExit (B8east)
    LockExit (B8southeast)
    LockExit (B7northeast)
    LockExit (C7northwest)
    LockExit (C7north)
    LockExit (C7northeast)
    LockExit (D7northwest)
    LockExit (D7north)
    LockExit (D7northeast)
    LockExit (E7northwest)
    LockExit (E8southwest)
    LockExit (E8west)
    LockExit (B7southeast)
    LockExit (C7south)
    LockExit (C7southeast)
    LockExit (C7southwest)
    LockExit (D7southwest)
    LockExit (D7south)
    LockExit (D7southeast)
    LockExit (E7southwest)
    LockExit (E6northwest)
    LockExit (E6west)
    LockExit (E6southwest)
    LockExit (E5northwest)
    LockExit (D5northeast)
    LockExit (D5north)
    LockExit (D5northwest)
    LockExit (C5northeast)
    LockExit (C5north)
    LockExit (C5northwest)
    LockExit (B5northeast)
    LockExit (B6southeast)
    LockExit (B5southeast)
    LockExit (C5southwest)
    LockExit (C5south)
    LockExit (C5southeast)
    LockExit (D5southwest)
    LockExit (D5south)
    LockExit (D5southeast)
    LockExit (E5southwest)
    LockExit (E4northwest)
    LockExit (E4west)
    LockExit (E4southwest)
    LockExit (E3northwest)
    LockExit (D3northeast)
    LockExit (D3north)
    LockExit (D3northwest)
    LockExit (C3northeast)
    LockExit (C3north)
    LockExit (C3northwest)
    LockExit (B3northeast)
    LockExit (B4southeast)
    LockExit (B4east)
    LockExit (B4northeast)
    LockExit (B1east)
    LockExit (B1northeast)
    LockExit (B2southeast)
    LockExit (B2east)
    LockExit (B2northeast)
    LockExit (B3southeast)
    LockExit (C3southwest)
    LockExit (C3south)
    LockExit (C3southeast)
    LockExit (D3southwest)
    LockExit (D3south)
    LockExit (D3southeast)
    LockExit (E3southwest)
    LockExit (E2northwest)
    LockExit (E2west)
    LockExit (E2southwest)
    LockExit (E1northwest)
    LockExit (E1west)
    LockExit (E1east)
    LockExit (E1northeast)
    LockExit (E2southeast)
    LockExit (E2east)
    LockExit (E2northeast)
    LockExit (E3southeast)
    LockExit (F3southwest)
    LockExit (F3south)
    LockExit (F3southeast)
    LockExit (G3southwest)
    LockExit (G2northwest)
    LockExit (G2west)
    LockExit (G2southwest)
    LockExit (G1northwest)
    LockExit (G1west)
    LockExit (H1north)
    LockExit (H1northwest)
    LockExit (G1northeast)
    LockExit (G2southeast)
    LockExit (G2east)
    LockExit (G2northeast)
    LockExit (G3southeast)
    LockExit (G3east)
    LockExit (G3northeast)
    LockExit (G3north)
    LockExit (G3northwest)
    LockExit (F3northeast)
    LockExit (F3north)
    LockExit (F3northwest)
    LockExit (E3northeast)
    LockExit (E4southeast)
    LockExit (E4east)
    LockExit (E4northeast)
    LockExit (E5southeast)
    LockExit (F5southwest)
    LockExit (F5south)
    LockExit (F5southeast)
    LockExit (G5southwest)
    LockExit (G5south)
    LockExit (G5southeast)
    LockExit (H5southwest)
    LockExit (H4northwest)
    LockExit (H4west)
    LockExit (H4southwest)
    LockExit (H4south)
    LockExit (H5northwest)
    LockExit (G5northeast)
    LockExit (G5north)
    LockExit (G5northwest)
    LockExit (F5northeast)
    LockExit (F5north)
    LockExit (F5northwest)
    LockExit (E5northeast)
    LockExit (E6southeast)
    LockExit (E6east)
    LockExit (E6northeast)
    LockExit (E7southeast)
    LockExit (F7southwest)
    LockExit (F7south)
    LockExit (F7southeast)
    LockExit (G7southwest)
    LockExit (G7south)
    LockExit (G7southeast)
    LockExit (H7southwest)
    LockExit (H6northwest)
    LockExit (H6west)
    LockExit (H6southwest)
    LockExit (E8east)
    LockExit (E8southeast)
    LockExit (E7northeast)
    LockExit (F7northwest)
    LockExit (F7north)
    LockExit (F7northeast)
    LockExit (G7northwest)
    LockExit (G7north)
    LockExit (G7northeast)
    LockExit (H7northwest)
    LockExit (H8southwest)
    LockExit (H8west)
    // descWalls
    // foreach (exit, AllExits()) {
      // if ((exit.locked) and (exit.parent = player.parent)) {
        // if ((exit.alias = "north") or (exit.alias = "south") or(exit.alias = "east") or(exit.alias = "west")) {
          // msg ("There is a wall to the "+exit.alias)
          // }
        // }
      // }
    msg ("And find yourself back in the familiar maze. ")
    msg ("To your surprise, you look at the chessboard and find a new piece has appeared. It resembles a small caricature of a castle tower.")
    EnableTurnScript (PreKnightOnTurn)
  ]]></function>
  <function name="setupQueen">
    MoveObject (player, E4)
    MoveObject (Throne, E5)
    EnableTurnScript (playerQueenLevel)
    msg ("The walls of thorns start cracking and snapping.")
    msg ("They twist and turn disappearing into the the grassy floor. ")
    msg ("On the chessboard, the pieces have vanished. ")
    msg ("There’s a curious figure with their back turned to you and an empty throne. ")
    msg ("")
    msg ("You reach out to touch her, but suddenly, the figure simply dissolves into dust.")
    msg ("All that’s left is a throne. A throne in the middle of an endless plain. ")
  </function>
  <function name="changeUnicode"><![CDATA[
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x")) {
        room.onexit => {
          room.inRoom = " "
        }
      }
    }
  ]]></function>
  <function name="deathByBishop"><![CDATA[
    Bishop.parent.inRoom = " "
    if (game.level <> "Bishop") {
      MoveObject (Bishop, player.parent)
    }
    MoveObject (player, STORAGE)
    if (game.level = "Bishop") {
      player.playerDeath = "Before you can move, the intense light moves upon you, and you feel searing pain over every inch of skin, as though you had been suddenly thrown into a furnace. You have just enough time to emit an anguished cry before you disintegrate into nothing."
    }
    else {
      player.playerDeath = "A blink of an eye. And suddenly you’re lying on the ground, an open wound at your throat. Just what happened?"
    }
  ]]></function>
  <function name="deathByRook">
    Rook.parent.inRoom = " "
    MoveObject (Rook, player.parent)
    MoveObject (player, STORAGE)
    player.playerDeath = "The brambles of the maze dart out from all around you wrapping you in a deathly vice-grip. It’s only a matter of time."
  </function>
  <function name="setupPreQueen"><![CDATA[
    MoveObject (player, A8)
    MoveObject (Goal, E4)
    MoveObject (Rook, A1)
    MoveObject (Knight, H1)
    MoveObject (Bishop, H8)
    if (Chessboard.parent <> player) {
      MoveObject (Chessboard, B8)
    }
    LockExit (A8south)
    LockExit (A8southeast)
    LockExit (B8southwest)
    LockExit (B8south)
    LockExit (B8southeast)
    LockExit (C8southwest)
    LockExit (C7northwest)
    LockExit (B7northeast)
    LockExit (B7north)
    LockExit (B7northwest)
    LockExit (A7northeast)
    LockExit (A7north)
    LockExit (C8east)
    LockExit (C8southeast)
    LockExit (C7northeast)
    LockExit (D7northwest)
    LockExit (D8southwest)
    LockExit (D8west)
    LockExit (C5northeast)
    LockExit (C6southeast)
    LockExit (C6east)
    LockExit (C6northeast)
    LockExit (C7southeast)
    LockExit (D7southwest)
    LockExit (D7south)
    LockExit (D7southeast)
    LockExit (E7southwest)
    LockExit (E7south)
    LockExit (E7southeast)
    LockExit (E7east)
    LockExit (E7northeast)
    LockExit (E8southeast)
    LockExit (F8southwest)
    LockExit (F7northwest)
    LockExit (F7west)
    LockExit (F7southwest)
    LockExit (F6northwest)
    LockExit (E6northeast)
    LockExit (E6north)
    LockExit (E6northwest)
    LockExit (D6northeast)
    LockExit (D6north)
    LockExit (D6northwest)
    LockExit (D6west)
    LockExit (D6southwest)
    LockExit (D5northwest)
    LockExit (G8east)
    LockExit (G8southeast)
    LockExit (G7northeast)
    LockExit (H7northwest)
    LockExit (H8southwest)
    LockExit (H8west)
    LockExit (A6south)
    LockExit (A6southeast)
    LockExit (B6southwest)
    LockExit (B5northwest)
    LockExit (A5northeast)
    LockExit (A5north)
    LockExit (B1northeast)
    LockExit (B2southeast)
    LockExit (C2southwest)
    LockExit (C2south)
    LockExit (C2southeast)
    LockExit (D2southwest)
    LockExit (D1northwest)
    LockExit (C1northeast)
    LockExit (C1north)
    LockExit (C1northwest)
    LockExit (A3northeast)
    LockExit (A4southeast)
    LockExit (A4east)
    LockExit (A4northeast)
    LockExit (A5southeast)
    LockExit (B5southwest)
    LockExit (B5south)
    LockExit (B5southeast)
    LockExit (C5southwest)
    LockExit (C4northwest)
    LockExit (B4northeast)
    LockExit (B4north)
    LockExit (B4northwest)
    LockExit (B4west)
    LockExit (B4southwest)
    LockExit (B4south)
    LockExit (B4southeast)
    LockExit (C4southwest)
    LockExit (C3northwest)
    LockExit (B3northeast)
    LockExit (B3north)
    LockExit (B3northwest)
    LockExit (F6southeast)
    LockExit (G6southwest)
    LockExit (G6south)
    LockExit (G6southeast)
    LockExit (H6southwest)
    LockExit (H5northwest)
    LockExit (H5west)
    LockExit (H5southwest)
    LockExit (H4northwest)
    LockExit (H4west)
    LockExit (H4southwest)
    LockExit (H3northwest)
    LockExit (H3west)
    LockExit (H3southwest)
    LockExit (H2northwest)
    LockExit (H2west)
    LockExit (H2southwest)
    LockExit (H1northwest)
    LockExit (G1northeast)
    LockExit (G1north)
    LockExit (G1northwest)
    LockExit (F1northeast)
    LockExit (F1north)
    LockExit (F1northwest)
    LockExit (E1northeast)
    LockExit (E2southeast)
    LockExit (F2southwest)
    LockExit (F2south)
    LockExit (F2southeast)
    LockExit (G2southwest)
    LockExit (G2south)
    LockExit (G2southeast)
    LockExit (G2east)
    LockExit (G2northeast)
    LockExit (G3southeast)
    LockExit (G3east)
    LockExit (G3northeast)
    LockExit (G4southeast)
    LockExit (G4east)
    LockExit (G4northeast)
    LockExit (G5southeast)
    LockExit (G5east)
    LockExit (G5northeast)
    LockExit (G5north)
    LockExit (G5northwest)
    LockExit (F5northeast)
    LockExit (D2northeast)
    LockExit (D3southeast)
    LockExit (D3east)
    LockExit (D3northeast)
    LockExit (D3north)
    LockExit (D3northwest)
    LockExit (C3northeast)
    LockExit (C4southeast)
    LockExit (C4east)
    LockExit (C4northeast)
    LockExit (C5southeast)
    LockExit (D5southwest)
    LockExit (D5south)
    LockExit (D5southeast)
    LockExit (D5east)
    LockExit (D5northeast)
    LockExit (D6southeast)
    LockExit (E6southwest)
    LockExit (E6south)
    LockExit (E6southeast)
    LockExit (F6southwest)
    LockExit (F5northwest)
    LockExit (F5west)
    LockExit (F5southwest)
    LockExit (F5south)
    LockExit (F5southeast)
    LockExit (G5southwest)
    LockExit (G4northwest)
    LockExit (G4west)
    LockExit (G4southwest)
    LockExit (G3northwest)
    LockExit (F3northeast)
    LockExit (F3north)
    LockExit (F3northwest)
    LockExit (F3west)
    LockExit (F3southwest)
    LockExit (F2northwest)
    LockExit (E2northeast)
    LockExit (E3southeast)
    LockExit (E3east)
    LockExit (E3northeast)
    LockExit (E4southeast)
    LockExit (F4southwest)
    LockExit (F4south)
    LockExit (F4southeast)
    LockExit (F4east)
    LockExit (F4northeast)
    LockExit (F4north)
    LockExit (F4northwest)
    LockExit (E4northeast)
    LockExit (E5southeast)
    LockExit (E5east)
    LockExit (E5northeast)
    LockExit (E5north)
    LockExit (E5northwest)
    LockExit (E5west)
    LockExit (E5southwest)
    LockExit (E4northwest)
    LockExit (D4northeast)
    LockExit (D4north)
    LockExit (D4northwest)
    LockExit (D4west)
    LockExit (D4southwest)
    LockExit (D4south)
    LockExit (D4southeast)
    LockExit (E4southwest)
    LockExit (E3northwest)
    LockExit (E3west)
    LockExit (E2northwest)
    // descWalls
    // foreach (exit, AllExits()) {
      // if ((exit.locked) and (exit.parent = player.parent)) {
        // if ((exit.alias = "north") or (exit.alias = "south") or(exit.alias = "east") or(exit.alias = "west")) {
          // msg ("There is a wall to the "+exit.alias)
          // }
        // }
      // }
    msg ("And find yourself back in the familiar maze. ")
    msg ("You look at your chessboard for a brief moment and realize that yet another new piece has appeared… ")
    EnableTurnScript (PreQueenOnTurn)
  ]]></function>
  <function name="descWalls">
    msg ("")
    numExits = 0
    foreach (exit, AllExits()) {
      if ((exit.locked) and (exit.parent = player.parent)) {
        if ((exit.alias = "north") or (exit.alias = "south") or(exit.alias = "east") or(exit.alias = "west")) {
          msg ("There is a wall to the "+exit.alias)
          numExits = numExits + 1
        }
      }
    }
    foreach (room, AllObjects()) {
      if (HasAttribute(room, "x") and (room = player.parent)) {
        if (room.x = 0) {
          msg ("There is a wall to the west")
          numExits = numExits + 1
        }
        if (room.x = 7) {
          msg ("There is a wall to the east")
          numExits = numExits + 1
        }
        if (room.y = 0) {
          msg ("There is a wall to the south")
          numExits = numExits + 1
        }
        if (room.y = 7) {
          msg ("There is a wall to the north")
          numExits = numExits + 1
        }
      }
    }
    if (numExits = 0) {
      if ((game.level = "RabbitHole") or (game.level = "Pawn") or (game.level = "PreRook") or (game.level = "PreKnight") or (game.level = "PreBishop") or (game.level = "PreQueen")) {
        msg ("You’re in a clearing, but in the distance, a series of brambly walls line the edges. ")
      }
    }
  </function>
  <function name="moveLever">
    if (Lever.parent = B3) {
      Bishop.parent.inRoom = " "
      Bishop2.parent.inRoom = " "
      MoveObject (Lever, C8)
      MoveObject (Bishop, A5)
      MoveObject (Bishop2, D5)
      msg ("You pull hard on the lever, all lights in the room go out, however you see source of light turn on through an open doorway.")
      UnlockExit (A3northeast)
      UnlockExit (B3northwest)
      UnlockExit (B3north)
      UnlockExit (B3northeast)
      UnlockExit (C3northwest)
    }
    else if (Lever.parent = C8) {
      Bishop.parent.inRoom = " "
      Bishop2.parent.inRoom = " "
      MoveObject (Lever, H4)
      MoveObject (Bishop2, H5)
      MoveObject (Bishop, E1)
      msg ("You pull hard on the lever, which jerkily gives way to the force exerted. You hear a loud crack, and the two spotlights suddenly go dark. You see a faint light turn on from somewhere on the southeast wall.")
      UnlockExit (D5southeast)
      UnlockExit (E5southwest)
      UnlockExit (E5south)
      UnlockExit (E5southeast)
      UnlockExit (F5southwest)
    }
    else if (Lever.parent = H4) {
      Bishop.parent.inRoom = " "
      Bishop2.parent.inRoom = " "
      MoveObject (Lever, STORAGE)
      MoveObject (Bishop, STORAGE)
      MoveObject (Bishop2, STORAGE)
      msg ("You pull hard on the lever, which jerkily gives way to the force exerted")
      msg ("The room is plunged into darkness for a brief moment, and then bathed in a moderate, constant, sourceless red light.  You glimpse a tall shape at some distance slipping away further into the complex.")
      msg ("In the modest light, you can see the mirror north of you. You see your distant image begin to dissolve, and you know that you can escape through it now.")
      UnlockExit (H5north)
      DisableTurnScript (BishopOnTurn)
    }
  </function>
  <function name="moveBishop2"><![CDATA[
    if (game.level = "Bishop") {
      if ((player.parent = Bishop2.parent) and (player.parent <> STORAGE)) {
        deathByBishop
      }
      if (Bishop2.parent = D5) {
        MoveObject (Bishop2, C6)
        D5.inRoom = " "
      }
      else if (Bishop2.parent = C6) {
        MoveObject (Bishop2, D7)
        C6.inRoom = " "
      }
      else if (Bishop2.parent = D7) {
        MoveObject (Bishop2, E8)
        D7.inRoom = " "
      }
      else if (Bishop2.parent = E8) {
        MoveObject (Bishop2, F7)
        E8.inRoom = " "
      }
      else if (Bishop2.parent = F7) {
        MoveObject (Bishop2, E6)
        F7.inRoom = " "
      }
      else if (Bishop2.parent = E6) {
        MoveObject (Bishop2, D5)
        E6.inRoom = " "
      }
      else if (Bishop2.parent = D5) {
        MoveObject (Bishop2, E8)
        D5.inRoom = " "
      }
      else if (Bishop2.parent = H5) {
        MoveObject (Bishop2, G4)
        H5.inRoom = " "
      }
      else if (Bishop2.parent = G4) {
        MoveObject (Bishop2, H3)
        G4.inRoom = " "
      }
      else if (Bishop2.parent = H3) {
        MoveObject (Bishop2, G2)
        H3.inRoom = " "
      }
      else if (Bishop2.parent = G2) {
        MoveObject (Bishop2, F3)
        G2.inRoom = " "
      }
      else if (Bishop2.parent = F3) {
        MoveObject (Bishop2, H5)
        F3.inRoom = " "
      }
      if ((player.parent = Bishop2.parent) and (player.parent <> STORAGE)) {
        deathByBishop
      }
    }
  ]]></function>
  <function name="moveRookInPreKnight"><![CDATA[
    if (player.playerDeath = "null") {
      if (Rook.parent = H5) {
        MoveObject (Rook, F5)
        H5.inRoom = " "
      }
      else if (Rook.parent = F5) {
        MoveObject (Rook, D5)
        F5.inRoom = " "
      }
      else if (Rook.parent = D5) {
        MoveObject (Rook, B5)
        D5.inRoom = " "
      }
      else if (Rook.parent = B5) {
        MoveObject (Rook, B3)
        B5.inRoom = " "
      }
      else if (Rook.parent = B3) {
        MoveObject (Rook, D3)
        B3.inRoom = " "
      }
      else if (Rook.parent = D3) {
        MoveObject (Rook, F3)
        D3.inRoom = " "
      }
      else if (Rook.parent = F3) {
        MoveObject (Rook, G3)
        F3.inRoom = " "
      }
      else if (Rook.parent = G3) {
        MoveObject (Rook, E3)
        G3.inRoom = " "
      }
      else if (Rook.parent = E3) {
        MoveObject (Rook, E5)
        E3.inRoom = " "
      }
      else if (Rook.parent = E5) {
        MoveObject (Rook, E7)
        E5.inRoom = " "
      }
      else if (Rook.parent = E7) {
        MoveObject (Rook, C7)
        E7.inRoom = " "
      }
      else if (Rook.parent = C7) {
        MoveObject (Rook, B7)
        C7.inRoom = " "
      }
      else if (Rook.parent = B7) {
        MoveObject (Rook, B5)
        B7.inRoom = " "
      }
      else if (Rook.parent = B5) {
        MoveObject (Rook, D5)
        B5.inRoom = " "
      }
      else if (Rook.parent = D5) {
        MoveObject (Rook, F5)
        D5.inRoom = " "
      }
      else if (Rook.parent = F5) {
        MoveObject (Rook, H5)
        F5.inRoom = " "
      }
    }
    if ((player.parent = Rook.parent) and (player.parent <> STORAGE)) {
      deathByRook
    }
  ]]></function>
  <function name="moveRookInPreBishop"><![CDATA[
    if (player.playerDeath = "null") {
      if (Rook.parent = H5) {
        MoveObject (Rook, E5)
        H5.inRoom = " "
      }
      else if (Rook.parent = E5) {
        MoveObject (Rook, B5)
        E5.inRoom = " "
      }
      else if (Rook.parent = B5) {
        MoveObject (Rook, B7)
        B5.inRoom = " "
      }
      else if (Rook.parent = B7) {
        MoveObject (Rook, E7)
        B7.inRoom = " "
      }
      else if (Rook.parent = E7) {
        MoveObject (Rook, G7)
        E7.inRoom = " "
      }
      else if (Rook.parent = G7) {
        MoveObject (Rook, G6)
        G7.inRoom = " "
      }
      else if (Rook.parent = G6) {
        MoveObject (Rook, F6)
        G6.inRoom = " "
      }
      else if (Rook.parent = F6) {
        MoveObject (Rook, F4)
        F6.inRoom = " "
      }
      else if (Rook.parent = F4) {
        MoveObject (Rook, H4)
        F4.inRoom = " "
      }
      else if (Rook.parent = H4) {
        MoveObject (Rook, H7)
        H4.inRoom = " "
      }
      else if (Rook.parent = H7) {
        MoveObject (Rook, E7)
        H7.inRoom = " "
      }
      else if (Rook.parent = E7) {
        MoveObject (Rook, B7)
        E7.inRoom = " "
      }
      else if (Rook.parent = B7) {
        MoveObject (Rook, B5)
        B7.inRoom = " "
      }
      else if (Rook.parent = B5) {
        MoveObject (Rook, E5)
        B5.inRoom = " "
      }
      else if (Rook.parent = E5) {
        MoveObject (Rook, H5)
        E5.inRoom = " "
      }
      else if (Rook.parent = H5) {
        MoveObject (Rook, H2)
        H5.inRoom = " "
      }
    }
    if ((player.parent = Rook.parent) and (player.parent <> STORAGE)) {
      deathByRook
    }
  ]]></function>
  <function name="moveKnightInPreBishop"><![CDATA[
    if (player.playerDeath = "null") {
      if (Knight.parent = H4) {
        MoveObject (Knight, F3)
        H4.inRoom = " "
      }
      else if (Knight.parent = F3) {
        MoveObject (Knight, D4)
        F3.inRoom = " "
      }
      else if (Knight.parent = D4) {
        MoveObject (Knight, A3)
        D4.inRoom = " "
      }
      else if (Knight.parent = A3) {
        MoveObject (Knight, B5)
        A3.inRoom = " "
      }
      else if (Knight.parent = B5) {
        MoveObject (Knight, D6)
        B5.inRoom = " "
      }
      else if (Knight.parent = D6) {
        MoveObject (Knight, F5)
        D6.inRoom = " "
      }
      else if (Knight.parent = F5) {
        MoveObject (Knight, H4)
        F5.inRoom = " "
      }
    }
    if ((player.parent = Knight.parent) and (player.parent <> STORAGE)) {
      deathByKnight
    }
  ]]></function>
  <function name="preKnightRookKillZone">
    if (Rook.parent=F5) {
      if (player.parent = G5) {
        deathByRook
      }
    }
    if (Rook.parent=D5) {
      if (player.parent = E5) {
        deathByRook
      }
    }
    if (Rook.parent=B6) {
      if (player.parent = C5) {
        deathByRook
      }
    }
    if (Rook.parent=B3) {
      if (player.parent = B4) {
        deathByRook
      }
    }
    if (Rook.parent=D3) {
      if (player.parent = C3) {
        deathByRook
      }
    }
    if (Rook.parent=F3) {
      if (player.parent = E3) {
        deathByRook
      }
    }
    if (Rook.parent=E3) {
      if (player.parent = F3) {
        deathByRook
      }
    }
    if (Rook.parent=E5) {
      if (player.parent = E4) {
        deathByRook
      }
    }
    if (Rook.parent=E7) {
      if (player.parent = E6) {
        deathByRook
      }
    }
    if (Rook.parent=C7) {
      if (player.parent = D7) {
        deathByRook
      }
    }
    if (Rook.parent=B5) {
      if (player.parent = B6) {
        deathByRook
      }
    }
  </function>
  <function name="moveRookInPreQueen"><![CDATA[
    if (Rook.parent = A1) {
      MoveObject (Rook, A5)
      A1.inRoom = " "
    }
    else if (Rook.parent = A5) {
      MoveObject (Rook, D5)
      A5.inRoom = " "
    }
    else if (Rook.parent = D5) {
      MoveObject (Rook, D6)
      D5.inRoom = " "
    }
    else if (Rook.parent = D6) {
      MoveObject (Rook, H6)
      D6.inRoom = " "
    }
    else if (Rook.parent = H6) {
      MoveObject (Rook, C6)
      H6.inRoom = " "
    }
    else if (Rook.parent = C6) {
      MoveObject (Rook, C2)
      C6.inRoom = " "
    }
    else if (Rook.parent = C2) {
      MoveObject (Rook, G2)
      C2.inRoom = " "
    }
    else if (Rook.parent = G2) {
      MoveObject (Rook, G5)
      G2.inRoom = " "
    }
    else if (Rook.parent = G5) {
      MoveObject (Rook, F5)
      G5.inRoom = " "
    }
    else if (Rook.parent = F5) {
      MoveObject (Rook, F8)
      F5.inRoom = " "
    }
    else if (Rook.parent = F8) {
      MoveObject (Rook, G8)
      F8.inRoom = " "
    }
    else if (Rook.parent = G8) {
      MoveObject (Rook, G6)
      G8.inRoom = " "
    }
    else if (Rook.parent = G6) {
      MoveObject (Rook, H6)
      G6.inRoom = " "
    }
    else if (Rook.parent = H6) {
      MoveObject (Rook, H1)
      H6.inRoom = " "
    }
    else if (Rook.parent = H1) {
      MoveObject (Rook, A1)
      H1.inRoom = " "
    }
    else if (Rook.parent = A1) {
      MoveObject (Rook, A5)
      A1.inRoom = " "
    }
    else if (Rook.parent = A5) {
      MoveObject (Rook, D5)
      A5.inRoom = " "
    }
    else if (Rook.parent = D5) {
      MoveObject (Rook, D6)
      D5.inRoom = " "
    }
    else if (Rook.parent = D6) {
      MoveObject (Rook, A6)
      D6.inRoom = " "
    }
    else if (Rook.parent = A6) {
      MoveObject (Rook, A7)
      A6.inRoom = " "
    }
    else if (Rook.parent = A7) {
      MoveObject (Rook, E7)
      A7.inRoom = " "
    }
    else if (Rook.parent = E7) {
      MoveObject (Rook, E8)
      E7.inRoom = " "
    }
    else if (Rook.parent = E8) {
      MoveObject (Rook, G8)
      E8.inRoom = " "
    }
    if ((player.parent = Rook.parent) and (player.parent <> STORAGE)) {
      deathByRook
    }
  ]]></function>
  <function name="moveKnightInPreQueen"><![CDATA[
    if (Knight.parent = H1) {
      MoveObject (Knight, F2)
      H1.inRoom = " "
    }
    else if (Knight.parent = F2) {
      MoveObject (Knight, D3)
      F2.inRoom = " "
    }
    else if (Knight.parent = D3) {
      MoveObject (Knight, B4)
      D3.inRoom = " "
    }
    else if (Knight.parent = B4) {
      MoveObject (Knight, A6)
      B4.inRoom = " "
    }
    else if (Knight.parent = A6) {
      MoveObject (Knight, C5)
      A6.inRoom = " "
    }
    else if (Knight.parent = C5) {
      MoveObject (Knight, E4)
      C5.inRoom = " "
    }
    else if (Knight.parent = E4) {
      MoveObject (Knight, G3)
      E4.inRoom = " "
    }
    else if (Knight.parent = G3) {
      MoveObject (Knight, H1)
      G3.inRoom = " "
    }
    if ((player.parent = Knight.parent) and (player.parent <> STORAGE)) {
      deathByKnight
    }
  ]]></function>
  <function name="moveBishopInPreQueen"><![CDATA[
    if (Bishop.parent = H8) {
      MoveObject (Bishop, E5)
      H8.inRoom = " "
    }
    else if (Bishop.parent = E5) {
      MoveObject (Bishop, D4)
      E5.inRoom = " "
    }
    else if (Bishop.parent = D4) {
      MoveObject (Bishop, E3)
      D4.inRoom = " "
    }
    else if (Bishop.parent = E3) {
      MoveObject (Bishop, F4)
      E3.inRoom = " "
    }
    else if (Bishop.parent = F4) {
      MoveObject (Bishop, E5)
      F4.inRoom = " "
    }
    if ((player.parent = Bishop.parent) and (player.parent <> STORAGE)) {
      deathByBishop
    }
  ]]></function>
  <function name="preBishopRookKillZone">
    if (Rook.parent = E5) {
      if (player.parent = G5) {
        deathByRook
      }
      if (player.parent = F5) {
        deathByRook
      }
    }
    if (Rook.parent = B5) {
      if (player.parent = D5) {
        deathByRook
      }
      if (player.parent = C5) {
        deathByRook
      }
    }
    if (Rook.parent = B7) {
      if (player.parent = B6) {
        deathByRook
      }
    }
    if (Rook.parent = E7) {
      if (player.parent = C7) {
        deathByRook
      }
      if (player.parent = D7) {
        deathByRook
      }
    }
    if (Rook.parent = G7) {
      if (player.parent = F7) {
        deathByRook
      }
    }
    if (Rook.parent = F4) {
      if (player.parent = F5) {
        deathByRook
      }
    }
    if (Rook.parent = H7) {
      if (player.parent = H5) {
        deathByRook
      }
      if (player.parent = H6) {
        deathByRook
      }
    }
    if (Rook.parent = E7) {
      if (player.parent = G7) {
        deathByRook
      }
      if (player.parent = F7) {
        deathByRook
      }
    }
    if (Rook.parent = B7) {
      if (player.parent = D7) {
        deathByRook
      }
      if (player.parent = C7) {
        deathByRook
      }
    }
    if (Rook.parent = B5) {
      if (player.parent = B6) {
        deathByRook
      }
    }
    if (Rook.parent = E5) {
      if (player.parent = C5) {
        deathByRook
      }
      if (player.parent = D5) {
        deathByRook
      }
    }
    if (Rook.parent = H5) {
      if (player.parent = F5) {
        deathByRook
      }
      if (player.parent = G5) {
        deathByRook
      }
    }
  </function>
  <function name="preBishopKnightKillZone">
    if (Knight.parent = H4) {
      if (player.parent = F5) {
        deathByKnight
      }
      else if (player.parent = F3) {
        deathByKnight
      }
      else if (player.parent = G6) {
        deathByKnight
      }
      else if (player.parent = G2) {
        deathByKnight
      }
    }
    if (Knight.parent = F3) {
      if (player.parent = G5) {
        deathByKnight
      }
      else if (player.parent = E5) {
        deathByKnight
      }
      else if (player.parent = G1) {
        deathByKnight
      }
      else if (player.parent = E1) {
        deathByKnight
      }
      else if (player.parent = H4) {
        deathByKnight
      }
      else if (player.parent = H2) {
        deathByKnight
      }
      else if (player.parent = D4) {
        deathByKnight
      }
      else if (player.parent = D2) {
        deathByKnight
      }
    }
    if (Knight.parent = D4) {
      if (player.parent = F5) {
        deathByKnight
      }
      else if (player.parent = F3) {
        deathByKnight
      }
      else if (player.parent = B5) {
        deathByKnight
      }
      else if (player.parent = B3) {
        deathByKnight
      }
      else if (player.parent = E6) {
        deathByKnight
      }
      else if (player.parent = C6) {
        deathByKnight
      }
      else if (player.parent = E1) {
        deathByKnight
      }
      else if (player.parent = C1) {
        deathByKnight
      }
    }
    if (Knight.parent = A3) {
      if (player.parent = B5) {
        deathByKnight
      }
      else if (player.parent = B1) {
        deathByKnight
      }
      else if (player.parent = C4) {
        deathByKnight
      }
      else if (player.parent = C2) {
        deathByKnight
      }
    }
    if (Knight.parent = B5) {
      if (player.parent = D6) {
        deathByKnight
      }
      else if (player.parent = D4) {
        deathByKnight
      }
      else if (player.parent = C7) {
        deathByKnight
      }
      else if (player.parent = A7) {
        deathByKnight
      }
      else if (player.parent = A3) {
        deathByKnight
      }
      else if (player.parent = C3) {
        deathByKnight
      }
    }
    if (Knight.parent = D6) {
      if (player.parent = E8) {
        deathByKnight
      }
      else if (player.parent = C8) {
        deathByKnight
      }
      else if (player.parent = B7) {
      }
      else if (player.parent = B5) {
        deathByKnight
      }
      else if (player.parent = F5) {
        deathByKnight
      }
      else if (player.parent = F7) {
        deathByKnight
      }
      else if (player.parent = E4) {
        deathByKnight
      }
      else if (player.parent = C4) {
        deathByKnight
      }
    }
    if (Knight.parent = F5) {
      if (player.parent = D6) {
        deathByKnight
      }
      else if (player.parent = H6) {
        deathByKnight
      }
      else if (player.parent = G7) {
        deathByKnight
      }
      else if (player.parent = E7) {
        deathByKnight
      }
      else if (player.parent = E3) {
        deathByKnight
      }
      else if (player.parent = G3) {
        deathByKnight
      }
      else if (player.parent = D4) {
        deathByKnight
      }
      else if (player.parent = H4) {
        deathByKnight
      }
    }
  </function>
  <function name="preQueenRookKillZone">
    if (Rook.parent=A5) {
      if (player.parent = A2) {
        deathByRook
      }
      else if (player.parent = A3) {
        deathByRook
      }
      else if (player.parent = A4) {
        deathByRook
      }
    }
    if (Rook.parent = D5) {
      if (player.parent = B5) {
        deathByRook
      }
      else if (player.parent = C5) {
        deathByRook
      }
    }
    if (Rook.parent = H6) {
      if (player.parent = E6) {
        deathByRook
      }
      else if (player.parent = F6) {
        deathByRook
      }
      else if (player.parent = G6) {
        deathByRook
      }
    }
    if (Rook.parent = C6) {
      if (player.parent = E6) {
        deathByRook
      }
      else if (player.parent = F6) {
        deathByRook
      }
      else if (player.parent = G6) {
        deathByRook
      }
      else if (player.parent = D6) {
        deathByRook
      }
    }
    if (Rook.parent = C2) {
      if (player.parent = C5) {
        deathByRook
      }
      else if (player.parent = C4) {
        deathByRook
      }
      else if (player.parent = C3) {
        deathByRook
      }
      else if (player.parent = C2) {
        deathByRook
      }
    }
    if (Rook.parent = G2) {
      if (player.parent = D2) {
        deathByRook
      }
      else if (player.parent = E6) {
        deathByRook
      }
      else if (player.parent = F6) {
        deathByRook
      }
    }
    if (Rook.parent = G5) {
      if (player.parent = G3) {
        deathByRook
      }
      else if (player.parent = G4) {
        deathByRook
      }
      else if (player.parent = G5) {
        deathByRook
      }
    }
    if (Rook.parent = F8) {
      if (player.parent = F6) {
        deathByRook
      }
      else if (player.parent = F7) {
        deathByRook
      }
    }
    if (Rook.parent = G6) {
      if (player.parent = G7) {
        deathByRook
      }
    }
    if (Rook.parent = H1) {
      if (player.parent = H5) {
        deathByRook
      }
      else if (player.parent = H4) {
        deathByRook
      }
      else if (player.parent = H3) {
        deathByRook
      }
      else if (player.parent = H2) {
        deathByRook
      }
    }
    if (Rook.parent = A1) {
      if (player.parent = G1) {
        deathByRook
      }
      else if (player.parent = F1) {
        deathByRook
      }
      else if (player.parent = E1) {
        deathByRook
      }
      else if (player.parent = D1) {
        deathByRook
      }
      else if (player.parent = C1) {
        deathByRook
      }
      else if (player.parent = B1) {
        deathByRook
      }
    }
  </function>
  <function name="destructorKnight">
    // I DONT KNOW HOW TO DESTROY THESE!
    // create exit ("down", A3, C6)
    // create exit ("up", C6, A3)
    // create exit ("down", C3, C8)
    // create exit ("up", C8, C3)
    // create exit ("north", B8, C8)
    // create exit ("north", D7, C8)
    // create exit ("east", D7, C8)
    // create exit ("west", A8, C8)
    // create exit ("south", C5, C8)
    // create exit ("south", B6, C8)
    // create exit ("south", A5, C8)
    MoveObject (rug, STORAGE)
  </function>
  <function name="RookRookKillZone">
    if (Counter.count = 1) {
      if (player.parent = C1) {
        deathByTrain
      }
      else if (player.parent = C2) {
        deathByTrain
      }
      else if (player.parent = C3) {
        deathByTrain
      }
      else if (player.parent = C4) {
        deathByTrain
      }
      else if (player.parent = C5) {
        deathByTrain
      }
      else if (player.parent = C6) {
        deathByTrain
      }
      else if (player.parent = C7) {
        deathByTrain
      }
      else if (player.parent = C8) {
        deathByTrain
      }
    }
    if (Counter.count = 8) {
      if (player.parent = G1) {
        deathByTrain
      }
      else if (player.parent = G2) {
        deathByTrain
      }
      else if (player.parent = G3) {
        deathByTrain
      }
      else if (player.parent = G4) {
        deathByTrain
      }
      else if (player.parent = G5) {
        deathByTrain
      }
      else if (player.parent = G6) {
        deathByTrain
      }
      else if (player.parent = G7) {
        deathByTrain
      }
      else if (player.parent = G8) {
        deathByTrain
      }
    }
    if (Counter.count = 3) {
      if (player.parent = A5) {
        deathByTrain
      }
      else if (player.parent = B5) {
        deathByTrain
      }
      else if (player.parent = C5) {
        deathByTrain
      }
      else if (player.parent = D5) {
        deathByTrain
      }
      else if (player.parent = E5) {
        deathByTrain
      }
      else if (player.parent = F5) {
        deathByTrain
      }
      else if (player.parent = G5) {
        deathByTrain
      }
      else if (player.parent = H5) {
        deathByTrain
      }
    }
    if (Counter.count = 4) {
      if (Pawn.parent = C4) {
        MoveObject (Pawn, STORAGE)
        C4.inRoom = " "
        msg ("You hear a bloodcurdling scream over the distant rush of a train. The pawn piece that was on your chessboard promptly disappears")
      }
      if (player.parent = A4) {
        deathByTrain
      }
      else if (player.parent = B4) {
        deathByTrain
      }
      else if (player.parent = C4) {
        deathByTrain
      }
      else if (player.parent = D4) {
        deathByTrain
      }
      else if (player.parent = E4) {
        deathByTrain
      }
      else if (player.parent = F4) {
        deathByTrain
      }
      else if (player.parent = G4) {
        deathByTrain
      }
      else if (player.parent = H4) {
        deathByTrain
      }
    }
    if (Counter.count = 9) {
      if (player.parent = A7) {
        deathByTrain
      }
      else if (player.parent = B7) {
        deathByTrain
      }
      else if (player.parent = C7) {
        deathByTrain
      }
      else if (player.parent = D7) {
        deathByTrain
      }
      else if (player.parent = E7) {
        deathByTrain
      }
      else if (player.parent = F7) {
        deathByTrain
      }
      else if (player.parent = G7) {
        deathByTrain
      }
      else if (player.parent = H7) {
        deathByTrain
      }
    }
  </function>
  <function name="preQueenBishopKillZone">
    if (Bishop.parent = H8) {
      if (player.parent = G7) {
        deathByBishop
      }
      else if (player.parent =F6 ) {
        deathByBishop
      }
    }
    else if (Bishop.parent = E5) {
      if (player.parent = D4) {
        deathByBishop
      }
      else if (player.parent =F4 ) {
        deathByBishop
      }
    }
    else if (Bishop.parent = D4) {
      if (player.parent = E5) {
        deathByBishop
      }
      else if (player.parent =E3 ) {
        deathByBishop
      }
      else if (player.parent = F2) {
        deathByBishop
      }
    }
    else if (Bishop.parent = E3) {
      if (player.parent = F4) {
        deathByBishop
      }
      else if (player.parent =F2 ) {
        deathByBishop
      }
      else if (player.parent = D2) {
        deathByBishop
      }
      else if (player.parent =D4 ) {
        deathByBishop
      }
      else if (player.parent = C1) {
        deathByBishop
      }
    }
  </function>
  <function name="moveRookinRook">
    if (Counter.count = 0) {
      pos = Rook.parent
      MoveObject (Rook, STORAGE)
      pos.inRoom = " "
    }
    else if (Counter.count = 1) {
      pos = Rook.parent
      MoveObject (Rook, STORAGE)
      pos.inRoom = " "
    }
    else if (Counter.count = 2) {
      pos = Rook.parent
      MoveObject (Rook, A5)
      pos.inRoom = " "
      msg ("You hear a train whistle coming from the west, a rook piece appears on the chessboard")
    }
    else if (Counter.count = 3) {
      pos = Rook.parent
      MoveObject (Rook, A4)
      pos.inRoom = " "
      msg ("You hear another train whistle coming from the west")
    }
    else if (Counter.count = 4) {
      pos = Rook.parent
      MoveObject (Rook, STORAGE)
      pos.inRoom = " "
    }
    else if (Counter.count = 5) {
      pos = Rook.parent
      MoveObject (Rook, STORAGE)
      pos.inRoom = " "
    }
    else if (Counter.count = 6) {
      pos = Rook.parent
      MoveObject (Rook, STORAGE)
      pos.inRoom = " "
    }
    else if (Counter.count = 7) {
      pos = Rook.parent
      MoveObject (Rook, G1)
      pos.inRoom = " "
      msg ("You hear a train whistle coming from the south")
    }
    else if (Counter.count = 8) {
      pos = Rook.parent
      MoveObject (Rook, A7)
      pos.inRoom = " "
      msg ("You hear a train whistle coming from the west")
    }
    else if (Counter.count = 9) {
      pos = Rook.parent
      MoveObject (Rook, C1)
      pos.inRoom = " "
      msg ("You hear a train whistle coming from the south")
    }
  </function>
  <function name="deathByTrain">
    Rook.parent.inRoom = " "
    MoveObject (Rook, player.parent)
    MoveObject (player, STORAGE)
    player.playerDeath = "You turn to face the oncoming train only to catch, in your final glimpse, a strange mix of intense light, crimson reds and near-translucent lime greens hit your body with a force you have never felt. There is but a moment of pain before life leaves your body."
    Counter.count = 0
  </function>
  <function name="preQueenKnightKillZone">
    if (Knight.parent = H1) {
      if (player.parent = F2) {
        deathByKnight
      }
      else if (player.parent =G3) {
        deathByKnight
      }
    }
    else if (Knight.parent = F2) {
      if (player.parent = H1) {
        deathByKnight
      }
      else if (player.parent =D1) {
        deathByKnight
      }
      else if (player.parent = D3) {
        deathByKnight
      }
      else if (player.parent = H3) {
        deathByKnight
      }
    }
    else if (Knight.parent = D3) {
      if (player.parent = F2) {
        deathByKnight
      }
      else if (player.parent =B2) {
        deathByKnight
      }
      else if (player.parent = E1) {
        deathByKnight
      }
      else if (player.parent = C1) {
        deathByKnight
      }
      else if (player.parent = F4) {
        deathByKnight
      }
      else if (player.parent = B4) {
        deathByKnight
      }
      else if (player.parent = E5) {
        deathByKnight
      }
      else if (player.parent = C5) {
        deathByKnight
      }
    }
    else if (Knight.parent = B4) {
      if (player.parent = D5) {
        deathByKnight
      }
      else if (player.parent =D3) {
        deathByKnight
      }
      else if (player.parent = C6) {
        deathByKnight
      }
      else if (player.parent = A6) {
        deathByKnight
      }
      else if (player.parent = A2) {
        deathByKnight
      }
      else if (player.parent = C2) {
        deathByKnight
      }
    }
    else if (Knight.parent = A6) {
      if (player.parent = B8) {
        deathByKnight
      }
      else if (player.parent =B4) {
        deathByKnight
      }
      else if (player.parent = C7) {
        deathByKnight
      }
      else if (player.parent = C5) {
        deathByKnight
      }
    }
    else if (Knight.parent = C5) {
      if (player.parent = E6) {
        deathByKnight
      }
      else if (player.parent =E4) {
        deathByKnight
      }
      else if (player.parent = A4) {
        deathByKnight
      }
      else if (player.parent = A6) {
        deathByKnight
      }
      else if (player.parent = D7) {
        deathByKnight
      }
      else if (player.parent = B7) {
        deathByKnight
      }
      else if (player.parent = B3) {
        deathByKnight
      }
      else if (player.parent = D3) {
        deathByKnight
      }
    }
    else if (Knight.parent = E4) {
      if (player.parent = G5) {
        deathByKnight
      }
      else if (player.parent =C5) {
        deathByKnight
      }
      else if (player.parent = C3) {
        deathByKnight
      }
      else if (player.parent = G3) {
        deathByKnight
      }
      else if (player.parent = F2) {
        deathByKnight
      }
      else if (player.parent = D2) {
        deathByKnight
      }
      else if (player.parent = F6) {
        deathByKnight
      }
      else if (player.parent = D6) {
        deathByKnight
      }
    }
    else if (Knight.parent = G3) {
      if (player.parent = H5) {
        deathByKnight
      }
      else if (player.parent =F5) {
        deathByKnight
      }
      else if (player.parent = F1) {
        deathByKnight
      }
      else if (player.parent = H1) {
        deathByKnight
      }
      else if (player.parent = E4) {
        deathByKnight
      }
      else if (player.parent = E2) {
        deathByKnight
      }
    }
  </function>
  <function name="OnTrainTracks">
    if (player.parent=A7) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    else if (player.parent=B7) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    else if (player.parent=C7) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    else if (player.parent=D7) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    else if (player.parent=E7) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    else if (player.parent=F7) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    else if (player.parent=G7) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    else if (player.parent=H7) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    if (player.parent=A5) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    else if (player.parent=B5) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    else if (player.parent=C5) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    else if (player.parent=D5) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    else if (player.parent=E5) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    else if (player.parent=F5) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    else if (player.parent=G5) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    else if (player.parent=H5) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    if (player.parent=A4) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    else if (player.parent=B4) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    else if (player.parent=C4) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    else if (player.parent=D4) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    else if (player.parent=E4) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    else if (player.parent=F4) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    else if (player.parent=G4) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    else if (player.parent=H4) {
      msg ("You are on a set of train tracks that runs west to east")
    }
    if (player.parent=C1) {
      msg ("You are on a set of train tracks that runs north to south")
    }
    else if (player.parent=C2) {
      msg ("You are on a set of train tracks that runs north to south")
    }
    else if (player.parent=C3) {
      msg ("You are on a set of train tracks that runs north to south")
    }
    else if (player.parent=C4) {
      msg ("You are on a set of train tracks that runs north to south")
    }
    else if (player.parent=C5) {
      msg ("You are on a set of train tracks that runs north to south")
    }
    else if (player.parent=C6) {
      msg ("You are on a set of train tracks that runs north to south")
    }
    else if (player.parent=C7) {
      msg ("You are on a set of train tracks that runs north to south")
    }
    else if (player.parent=C8) {
      msg ("You are on a set of train tracks that runs north to south")
    }
    if (player.parent=G1) {
      msg ("You are on a set of train tracks that runs north to south")
    }
    else if (player.parent=G2) {
      msg ("You are on a set of train tracks that runs north to south")
    }
    else if (player.parent=G3) {
      msg ("You are on a set of train tracks that runs north to south")
    }
    else if (player.parent=G4) {
      msg ("You are on a set of train tracks that runs north to south")
    }
    else if (player.parent=G5) {
      msg ("You are on a set of train tracks that runs north to south")
    }
    else if (player.parent=G6) {
      msg ("You are on a set of train tracks that runs north to south")
    }
    else if (player.parent=G7) {
      msg ("You are on a set of train tracks that runs north to south")
    }
    else if (player.parent=G8) {
      msg ("You are on a set of train tracks that runs north to south")
    }
  </function>
</asl>